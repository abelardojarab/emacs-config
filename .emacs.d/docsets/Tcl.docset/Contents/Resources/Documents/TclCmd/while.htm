<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD><TITLE>while manual page - Built-In Commands</TITLE>
<link rel="stylesheet" href="../docs.css" type="text/css" media="all">
</HEAD>
<BODY><H2><a href="../contents.htm">Tcl8.6.0/Tk8.6.0 Documentation</a> <small>&gt;</small> <a href="contents.htm">Tcl Commands, version 8.6.0</a> <small>&gt;</small> while</H2>
<H3><A HREF="../UserCmd/contents.htm">Tcl/Tk Applications</A> | <A HREF="../TclCmd/contents.htm">Tcl Commands</A> | <A HREF="../TkCmd/contents.htm">Tk Commands</A> | <A HREF="../ItclCmd/contents.htm">[incr Tcl] Package Commands</A> | <A HREF="../Sqlite3Cmd/contents.htm">SQLite Package Commands</A> | <A HREF="../TdbcCmd/contents.htm">TDBC Package Commands</A> | <A HREF="../TdbcmysqlCmd/contents.htm">tdbc::mysql Package Commands</A> | <A HREF="../TdbcodbcCmd/contents.htm">tdbc::odbc Package Commands</A> | <A HREF="../TdbcpostgresCmd/contents.htm">tdbc::postgres Package Commands</A> | <A HREF="../Tdbcsqlite3Cmd/contents.htm">tdbc::sqlite3 Package Commands</A> | <A HREF="../ThreadCmd/contents.htm">Thread Package Commands</A> | <A HREF="../TclLib/contents.htm">Tcl C API</A> | <A HREF="../TkLib/contents.htm">Tk C API</A> | <A HREF="../ItclLib/contents.htm">[incr Tcl] Package C API</A> | <A HREF="../TdbcLib/contents.htm">TDBC Package C API</A></H3>
<H3><A NAME="M2">NAME</A></H3>
while &mdash; Execute script repeatedly as long as a condition is met
<H3><A NAME="M3">SYNOPSIS</A></H3>
<B>while </B><I>test body</I><BR>
<H3><A NAME="M4">DESCRIPTION</A></H3>
The <B>while</B> command evaluates <I>test</I> as an expression
(in the same way that <B><A HREF="../TclCmd/expr.htm">expr</A></B> evaluates its argument).
The value of the expression must a proper boolean
value; if it is a true value
then <I>body</I> is executed by passing it to the Tcl interpreter.
Once <I>body</I> has been executed then <I>test</I> is evaluated
again, and the process repeats until eventually <I>test</I>
evaluates to a false boolean value.  <B><A HREF="../TclCmd/continue.htm">Continue</A></B>
commands may be executed inside <I>body</I> to terminate the current
iteration of the loop, and <B><A HREF="../TclCmd/break.htm">break</A></B>
commands may be executed inside <I>body</I> to cause immediate
termination of the <B>while</B> command.  The <B>while</B> command
always returns an empty string.
<P>
Note: <I>test</I> should almost always be enclosed in braces.  If not,
variable substitutions will be made before the <B>while</B>
command starts executing, which means that variable changes
made by the loop body will not be considered in the expression.
This is likely to result in an infinite loop.  If <I>test</I> is
enclosed in braces, variable substitutions are delayed until the
expression is evaluated (before
each loop iteration), so changes in the variables will be visible.
For an example, try the following script with and without the braces
around <B>$x&lt;10</B>:
<P>
<PRE>set x 0
<B>while</B> {$x&lt;10} {
    puts &quot;x is $x&quot;
    incr x
}</PRE>
<H3><A NAME="M5">EXAMPLE</A></H3>
Read lines from a channel until we get to the end of the stream, and
print them out with a line-number prepended:
<P>
<PRE>set lineCount 0
<B>while</B> {[gets $chan line] &gt;= 0} {
    puts &quot;[incr lineCount]: $line&quot;
}</PRE>
<H3><A NAME="M6">SEE ALSO</A></H3>
<B><A HREF="../TclCmd/break.htm">break</A></B>, <B><A HREF="../TclCmd/continue.htm">continue</A></B>, <B><A HREF="../TclCmd/for.htm">for</A></B>, <B><A HREF="../TclCmd/foreach.htm">foreach</A></B>
<H3><A NAME="M7">KEYWORDS</A></H3>
<A href="../Keywords/B.htm#boolean">boolean</A>, <A href="../Keywords/L.htm#loop">loop</A>, <A href="../Keywords/T.htm#test">test</A>, <A href="../Keywords/W.htm#while">while</A>
<div class="copy">Copyright &copy; 1993 The Regents of the University of California.
Copyright &copy; 1994-1997 Sun Microsystems, Inc.
</div>
</BODY></HTML>
