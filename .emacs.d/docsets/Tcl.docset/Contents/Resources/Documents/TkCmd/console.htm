<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD><TITLE>console manual page - Tk Built-In Commands</TITLE>
<link rel="stylesheet" href="../docs.css" type="text/css" media="all">
</HEAD>
<BODY><H2><a href="../contents.htm">Tcl8.6.0/Tk8.6.0 Documentation</a> <small>&gt;</small> <a href="contents.htm">Tk Commands, version 8.6.0</a> <small>&gt;</small> console</H2>
<H3><A HREF="../UserCmd/contents.htm">Tcl/Tk Applications</A> | <A HREF="../TclCmd/contents.htm">Tcl Commands</A> | <A HREF="../TkCmd/contents.htm">Tk Commands</A> | <A HREF="../ItclCmd/contents.htm">[incr Tcl] Package Commands</A> | <A HREF="../Sqlite3Cmd/contents.htm">SQLite Package Commands</A> | <A HREF="../TdbcCmd/contents.htm">TDBC Package Commands</A> | <A HREF="../TdbcmysqlCmd/contents.htm">tdbc::mysql Package Commands</A> | <A HREF="../TdbcodbcCmd/contents.htm">tdbc::odbc Package Commands</A> | <A HREF="../TdbcpostgresCmd/contents.htm">tdbc::postgres Package Commands</A> | <A HREF="../Tdbcsqlite3Cmd/contents.htm">tdbc::sqlite3 Package Commands</A> | <A HREF="../ThreadCmd/contents.htm">Thread Package Commands</A> | <A HREF="../TclLib/contents.htm">Tcl C API</A> | <A HREF="../TkLib/contents.htm">Tk C API</A> | <A HREF="../ItclLib/contents.htm">[incr Tcl] Package C API</A> | <A HREF="../TdbcLib/contents.htm">TDBC Package C API</A></H3>
<DL>
<DD><A HREF="console.htm#M2" NAME="L454">NAME</A>
<DL><DD>console &mdash; Control the console on systems without a real console</DD></DL>
<DD><A HREF="console.htm#M3" NAME="L455">SYNOPSIS</A>
<DL>
</DL>
<DD><A HREF="console.htm#M4" NAME="L456">DESCRIPTION</A>
<DL class="description">
<DD><A HREF="console.htm#M5" NAME="L457"><B>console eval </B><I>script</I></A>
<DD><A HREF="console.htm#M6" NAME="L458"><B>console hide</B></A>
<DD><A HREF="console.htm#M7" NAME="L459"><B>console show</B></A>
<DD><A HREF="console.htm#M8" NAME="L460"><B>console title </B>?<I>string</I>?</A>
</DL>
<DD><A HREF="console.htm#M9" NAME="L461">ACCESS TO THE MAIN INTERPRETER</A>
<DL class="access to the main interpreter">
<DD><A HREF="console.htm#M10" NAME="L462"><B>consoleinterp eval </B><I>script</I></A>
<DD><A HREF="console.htm#M11" NAME="L463"><B>consoleinterp record </B><I>script</I></A>
</DL>
<DD><A HREF="console.htm#M12" NAME="L464">ADDITIONAL TRAP CALLS</A>
<DD><A HREF="console.htm#M13" NAME="L465">DEFAULT BINDINGS</A>
<OL class="default bindings">
</OL>
<DD><A HREF="console.htm#M14" NAME="L466">EXAMPLE</A>
<DD><A HREF="console.htm#M15" NAME="L467">SEE ALSO</A>
<DD><A HREF="console.htm#M16" NAME="L468">KEYWORDS</A>
</DL>
<H3><A NAME="M2">NAME</A></H3>
console &mdash; Control the console on systems without a real console
<H3><A NAME="M3">SYNOPSIS</A></H3>
<B>console</B> <I>subcommand</I> ?<I>arg ...</I>?<BR>
<H3><A NAME="M4">DESCRIPTION</A></H3>
The console window is a replacement for a real console to allow input
and output on the standard I/O channels on platforms that do not have
a real console.  It is implemented as a separate interpreter with the
Tk toolkit loaded, and control over this interpreter is given through
the <B>console</B> command.  The behaviour of the console window is
defined mainly through the contents of the <I>console.tcl</I> file in
the Tk library. Except for TkAqua, this command is not available when
Tk is loaded into a tclsh interpreter with
&#8220;<B>package require Tk</B>&#8221;,
as a conventional terminal is expected to be present in that case.
In TkAqua, this command is only available when stdin is <B>/dev/null</B>
(as is the case e.g. when the application embedding Tk is started
from the Mac OS X Finder).
<P>
<P>
<DL class="description">
<DT><A NAME="M5"><B>console eval </B><I>script</I></A><DD>
Evaluate the <I>script</I> argument as a Tcl script in the console
interpreter.  The normal interpreter is accessed through the
<B>consoleinterp</B> command in the console interpreter.
<P><DT><A NAME="M6"><B>console hide</B></A><DD>
Hide the console window from view.  Precisely equivalent to
withdrawing the <B>.</B> window in the console interpreter.
<P><DT><A NAME="M7"><B>console show</B></A><DD>
Display the console window.  Precisely equivalent to deiconifying the
<B>.</B> window in the console interpreter.
<P><DT><A NAME="M8"><B>console title </B>?<I>string</I>?</A><DD>
Query or modify the title of the console window.  If <I>string</I> is
not specified, queries the title of the console window, and sets the
title of the console window to <I>string</I> otherwise.  Precisely
equivalent to using the <B><A HREF="../TkCmd/wm.htm">wm title</A></B> command in the console
interpreter.
<P></DL>
<H3><A NAME="M9">ACCESS TO THE MAIN INTERPRETER</A></H3>
The <B>consoleinterp</B> command in the console interpreter allows
scripts to be evaluated in the main interpreter.  It supports two
subcommands: <B>eval</B> and <B>record</B>.
<P>
<P>
<DL class="access to the main interpreter">
<DT><A NAME="M10"><B>consoleinterp eval </B><I>script</I></A><DD>
Evaluates <I>script</I> as a Tcl script at the global level in the main
interpreter.
<P><DT><A NAME="M11"><B>consoleinterp record </B><I>script</I></A><DD>
Records and evaluates <I>script</I> as a Tcl script at the global level
in the main interpreter as if <I>script</I> had been typed in at the
console.
<P></DL>
<H3><A NAME="M12">ADDITIONAL TRAP CALLS</A></H3>
There are several additional commands in the console interpreter that
are called in response to activity in the main interpreter.
<I>These are documented here for completeness only; they form part of
the internal implementation of the console and are likely to change or
be modified without warning.</I>
<P>
Output to the console from the main interpreter via the stdout and
stderr channels is handled by invoking the <B>tk::ConsoleOutput</B>
command in the console interpreter with two arguments.  The first
argument is the name of the channel being written to, and the second
argument is the string being written to the channel (after encoding
and end-of-line translation processing has been performed.)
<P>
When the <B>.</B> window of the main interpreter is destroyed, the
<B>tk::ConsoleExit</B> command in the console interpreter is called
(assuming the console interpreter has not already been deleted itself,
that is.)
<H3><A NAME="M13">DEFAULT BINDINGS</A></H3>
The default script creates a console window (implemented using a text
widget) that has the following behaviour:
<P>
<OL class="default bindings">
<LI value="1">
Pressing the tab key inserts a TAB character (as defined by the Tcl
&#92;t escape.)
<P><LI value="2">
Pressing the return key causes the current line (if complete by the
rules of <B><A HREF="../TclCmd/info.htm">info complete</A></B>) to be passed to the main interpreter for
evaluation.
<P><LI value="3">
Pressing the delete key deletes the selected text (if any text is
selected) or the character to the right of the cursor (if not at the
end of the line.)
<P><LI value="4">
Pressing the backspace key deletes the selected text (if any text is
selected) or the character to the left of the cursor (of not at the
start of the line.)
<P><LI value="5">
Pressing either Control+A or the home key causes the cursor to go to
the start of the line (but after the prompt, if a prompt is present on
the line.)
<P><LI value="6">
Pressing either Control+E or the end key causes the cursor to go to
the end of the line.
<P><LI value="7">
Pressing either Control+P or the up key causes the previous entry in
the command history to be selected.
<P><LI value="8">
Pressing either Control+N or the down key causes the next entry in the
command history to be selected.
<P><LI value="9">
Pressing either Control+B or the left key causes the cursor to move
one character backward as long as the cursor is not at the prompt.
<P><LI value="10">
Pressing either Control+F or the right key causes the cursor to move
one character forward.
<P><LI value="11">
Pressing F9 rebuilds the console window by destroying all its children
and reloading the Tcl script that defined the console's behaviour.
<P></OL>
<P>
Most other behaviour is the same as a conventional text widget except
for the way that the <I>&lt;&lt;Cut&gt;&gt;</I> event is handled identically to the
<I>&lt;&lt;Copy&gt;&gt;</I> event.
<H3><A NAME="M14">EXAMPLE</A></H3>
Not all platforms have the <B>console</B> command, so debugging code
often has the following code fragment in it so output produced by
<B><A HREF="../TclCmd/puts.htm">puts</A></B> can be seen while during development:
<PRE>catch {<B>console show</B>}</PRE>
<H3><A NAME="M15">SEE ALSO</A></H3>
<B><A HREF="../TkCmd/destroy.htm">destroy</A></B>, <B><A HREF="../TclCmd/fconfigure.htm">fconfigure</A></B>, <B><A HREF="../TclCmd/history.htm">history</A></B>, <B><A HREF="../TclCmd/interp.htm">interp</A></B>, <B><A HREF="../TclCmd/puts.htm">puts</A></B>, <B><A HREF="../TkCmd/text.htm">text</A></B>, <B><A HREF="../TkCmd/wm.htm">wm</A></B>
<H3><A NAME="M16">KEYWORDS</A></H3>
<A href="../Keywords/C.htm#console">console</A>, <A href="../Keywords/I.htm#interpreter">interpreter</A>, <A href="../Keywords/W.htm#window">window</A>, <A href="../Keywords/I.htm#interactive">interactive</A>, <A href="../Keywords/O.htm#output channels">output channels</A>
<div class="copy">Copyright &copy; 2001 Donal K. Fellows
</div>
</BODY></HTML>
