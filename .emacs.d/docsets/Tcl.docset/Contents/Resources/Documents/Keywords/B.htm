<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD><TITLE>Tcl/Tk Keywords - B</TITLE>
<link rel="stylesheet" href="../docs.css" type="text/css" media="all">
</HEAD>
<BODY><H2><a href="../contents.htm">Tcl8.6.0/Tk8.6.0 Documentation</a> <small>&gt;</small> Tcl/Tk Keywords - B</H2>
<H3><A HREF="../UserCmd/contents.htm">Tcl/Tk Applications</A> | <A HREF="../TclCmd/contents.htm">Tcl Commands</A> | <A HREF="../TkCmd/contents.htm">Tk Commands</A> | <A HREF="../ItclCmd/contents.htm">[incr Tcl] Package Commands</A> | <A HREF="../Sqlite3Cmd/contents.htm">SQLite Package Commands</A> | <A HREF="../TdbcCmd/contents.htm">TDBC Package Commands</A> | <A HREF="../TdbcmysqlCmd/contents.htm">tdbc::mysql Package Commands</A> | <A HREF="../TdbcodbcCmd/contents.htm">tdbc::odbc Package Commands</A> | <A HREF="../TdbcpostgresCmd/contents.htm">tdbc::postgres Package Commands</A> | <A HREF="../Tdbcsqlite3Cmd/contents.htm">tdbc::sqlite3 Package Commands</A> | <A HREF="../ThreadCmd/contents.htm">Thread Package Commands</A> | <A HREF="../TclLib/contents.htm">Tcl C API</A> | <A HREF="../TkLib/contents.htm">Tk C API</A> | <A HREF="../ItclLib/contents.htm">[incr Tcl] Package C API</A> | <A HREF="../TdbcLib/contents.htm">TDBC Package C API</A></H3>
<H3><A HREF="A.htm">A</A> |
<A HREF="B.htm">B</A> |
<A HREF="C.htm">C</A> |
<A HREF="D.htm">D</A> |
<A HREF="E.htm">E</A> |
<A HREF="F.htm">F</A> |
<A HREF="G.htm">G</A> |
<A HREF="H.htm">H</A> |
<A HREF="I.htm">I</A> |
<A HREF="J.htm">J</A> |
<A HREF="K.htm">K</A> |
<A HREF="L.htm">L</A> |
<A HREF="M.htm">M</A> |
<A HREF="N.htm">N</A> |
<A HREF="O.htm">O</A> |
<A HREF="P.htm">P</A> |
<A HREF="Q.htm">Q</A> |
<A HREF="R.htm">R</A> |
<A HREF="S.htm">S</A> |
<A HREF="T.htm">T</A> |
<A HREF="U.htm">U</A> |
<A HREF="V.htm">V</A> |
<A HREF="W.htm">W</A> |
<A HREF="X.htm">X</A> |
<A HREF="Y.htm">Y</A> |
<A HREF="Z.htm">Z</A></H3>
<DL class="keylist">
<DT><A NAME="background">background</A></DT>
<DD>
<A HREF="../TclLib/BackgdErr.htm" TITLE="Tcl_BackgroundException, Tcl_BackgroundError - report Tcl exception that occurred in background processing">BackgdErr</A>, <A HREF="../TclLib/DetachPids.htm" TITLE="Tcl_DetachPids, Tcl_ReapDetachedProcs, Tcl_WaitPid - manage child processes in background">DetachPids</A>, <A HREF="../TkLib/3DBorder.htm" TITLE="Tk_Alloc3DBorderFromObj, Tk_Get3DBorder, Tk_Get3DBorderFromObj, Tk_Draw3DRectangle, Tk_Fill3DRectangle, Tk_Draw3DPolygon, Tk_Fill3DPolygon, Tk_3DVerticalBevel, Tk_3DHorizontalBevel, Tk_SetBackgroundFromBorder, Tk_NameOf3DBorder, Tk_3DBorderColor, Tk_3DBorderGC, Tk_Free3DBorderFromObj, Tk_Free3DBorder - draw borders with three-dimensional appearance">3DBorder</A></DD>
<DT><A NAME="background error">background error</A></DT>
<DD>
<A HREF="../TclCmd/bgerror.htm" TITLE="bgerror - Command invoked to process background errors">bgerror</A>, <A HREF="../TkCmd/tkerror.htm" TITLE="tkerror - Command invoked to process background errors">tkerror</A></DD>
<DT><A NAME="backslash">backslash</A></DT>
<DD>
<A HREF="../TclCmd/Tcl.htm" TITLE="Tcl - Tool Command Language">Tcl</A>, <A HREF="../TclLib/Backslash.htm" TITLE="Tcl_Backslash - parse a backslash sequence">Backslash</A>, <A HREF="../TclLib/SplitList.htm" TITLE="Tcl_SplitList, Tcl_Merge, Tcl_ScanElement, Tcl_ConvertElement, Tcl_ScanCountedElement, Tcl_ConvertCountedElement - manipulate Tcl lists">SplitList</A>, <A HREF="../TclLib/Utf.htm" TITLE="Tcl_UniChar, Tcl_UniCharCaseMatch, Tcl_UniCharNcasecmp, Tcl_UniCharToUtf, Tcl_UtfToUniChar, Tcl_UniCharToUtfDString, Tcl_UtfToUniCharDString, Tcl_UniCharLen, Tcl_UniCharNcmp, Tcl_UtfCharComplete, Tcl_NumUtfChars, Tcl_UtfFindFirst, Tcl_UtfFindLast, Tcl_UtfNext, Tcl_UtfPrev, Tcl_UniCharAtIndex, Tcl_UtfAtIndex, Tcl_UtfBackslash - routines for manipulating UTF-8 strings">Utf</A></DD>
<DT><A NAME="backslash substitution">backslash substitution</A></DT>
<DD>
<A HREF="../TclCmd/subst.htm" TITLE="subst - Perform backslash, command, and variable substitutions">subst</A>, <A HREF="../TclLib/ParseCmd.htm" TITLE="Tcl_ParseCommand, Tcl_ParseExpr, Tcl_ParseBraces, Tcl_ParseQuotedString, Tcl_ParseVarName, Tcl_ParseVar, Tcl_FreeParse, Tcl_EvalTokens, Tcl_EvalTokensStandard - parse Tcl scripts and expressions">ParseCmd</A>, <A HREF="../TclLib/SubstObj.htm" TITLE="Tcl_SubstObj - perform substitutions on Tcl values">SubstObj</A></DD>
<DT><A NAME="base class">base class</A></DT>
<DD>
<A HREF="../TclCmd/object.htm" TITLE="oo::object - root class of the class hierarchy">object</A></DD>
<DT><A NAME="beep">beep</A></DT>
<DD>
<A HREF="../TkCmd/bell.htm" TITLE="bell - Ring a display's bell">bell</A></DD>
<DT><A NAME="bell">bell</A></DT>
<DD>
<A HREF="../TkCmd/bell.htm" TITLE="bell - Ring a display's bell">bell</A></DD>
<DT><A NAME="below">below</A></DT>
<DD>
<A HREF="../TkLib/Restack.htm" TITLE="Tk_RestackWindow - Change a window's position in the stacking order">Restack</A></DD>
<DT><A NAME="beta">beta</A></DT>
<DD>
<A HREF="../TclLib/GetVersion.htm" TITLE="Tcl_GetVersion - get the version of the library at runtime">GetVersion</A></DD>
<DT><A NAME="bevel">bevel</A></DT>
<DD>
<A HREF="../TkLib/GetJoinStl.htm" TITLE="Tk_GetJoinStyle, Tk_NameOfJoinStyle - translate between strings and join styles">GetJoinStl</A></DD>
<DT><A NAME="bgerror">bgerror</A></DT>
<DD>
<A HREF="../TclLib/BackgdErr.htm" TITLE="Tcl_BackgroundException, Tcl_BackgroundError - report Tcl exception that occurred in background processing">BackgdErr</A></DD>
<DT><A NAME="binary">binary</A></DT>
<DD>
<A HREF="../TclCmd/binary.htm" TITLE="binary - Insert and extract fields from binary strings">binary</A>, <A HREF="../TclCmd/fconfigure.htm" TITLE="fconfigure - Set and get options on a channel">fconfigure</A>, <A HREF="../TclLib/FindExec.htm" TITLE="Tcl_FindExecutable, Tcl_GetNameOfExecutable - identify or return the name of the binary file containing the application">FindExec</A></DD>
<DT><A NAME="binary code">binary code</A></DT>
<DD>
<A HREF="../TclCmd/load.htm" TITLE="load - Load machine code and initialize new commands">load</A>, <A HREF="../TclCmd/unload.htm" TITLE="unload - Unload machine code">unload</A>, <A HREF="../TclLib/Load.htm" TITLE="Tcl_LoadFile, Tcl_FindSymbol - platform-independent dynamic library loading">Load</A></DD>
<DT><A NAME="binary data">binary data</A></DT>
<DD>
<A HREF="../TclLib/ByteArrObj.htm" TITLE="Tcl_NewByteArrayObj, Tcl_SetByteArrayObj, Tcl_GetByteArrayFromObj, Tcl_SetByteArrayLength - manipulate Tcl values as a arrays of bytes">ByteArrObj</A></DD>
<DT><A NAME="binary library">binary library</A></DT>
<DD>
<A HREF="../TclLib/RegConfig.htm" TITLE="Tcl_RegisterConfig - procedures to register embedded configuration information">RegConfig</A></DD>
<DT><A NAME="binary search">binary search</A></DT>
<DD>
<A HREF="../TclCmd/lsearch.htm" TITLE="lsearch - See if a list contains a particular element">lsearch</A></DD>
<DT><A NAME="bind">bind</A></DT>
<DD>
<A HREF="../TclCmd/socket.htm" TITLE="socket - Open a TCP network connection">socket</A>, <A HREF="../TkCmd/keysyms.htm" TITLE="keysyms - keysyms recognized by Tk">keysyms</A>, <A HREF="../TclLib/CrtCommand.htm" TITLE="Tcl_CreateCommand - implement new commands in C">CrtCommand</A>, <A HREF="../TclLib/CrtObjCmd.htm" TITLE="Tcl_CreateObjCommand, Tcl_DeleteCommand, Tcl_DeleteCommandFromToken, Tcl_GetCommandInfo, Tcl_GetCommandInfoFromToken, Tcl_SetCommandInfo, Tcl_SetCommandInfoFromToken, Tcl_GetCommandName, Tcl_GetCommandFullName, Tcl_GetCommandFromObj - implement new commands in C">CrtObjCmd</A>, <A HREF="../TkLib/CrtCmHdlr.htm" TITLE="Tk_CreateClientMessageHandler, Tk_DeleteClientMessageHandler - associate procedure callback with ClientMessage type X events">CrtCmHdlr</A>, <A HREF="../TkLib/CrtGenHdlr.htm" TITLE="Tk_CreateGenericHandler, Tk_DeleteGenericHandler - associate procedure callback with all X events">CrtGenHdlr</A>, <A HREF="../TkLib/EventHndlr.htm" TITLE="Tk_CreateEventHandler, Tk_DeleteEventHandler - associate procedure callback with an X event">EventHndlr</A></DD>
<DT><A NAME="binding">binding</A></DT>
<DD>
<A HREF="../TkCmd/bind.htm" TITLE="bind - Arrange for X events to invoke Tcl scripts">bind</A>, <A HREF="../TkCmd/bindtags.htm" TITLE="bindtags - Determine which bindings apply to a window, and order of evaluation">bindtags</A>, <A HREF="../TkCmd/event.htm" TITLE="event - Miscellaneous event facilities: define virtual events and generate events">event</A>, <A HREF="../TkCmd/keysyms.htm" TITLE="keysyms - keysyms recognized by Tk">keysyms</A>, <A HREF="../TkLib/BindTable.htm" TITLE="Tk_CreateBindingTable, Tk_DeleteBindingTable, Tk_CreateBinding, Tk_DeleteBinding, Tk_GetBinding, Tk_GetAllBindings, Tk_DeleteAllBindings, Tk_BindEvent - invoke scripts in response to X events">BindTable</A></DD>
<DT><A NAME="bisque">bisque</A></DT>
<DD>
<A HREF="../TkCmd/palette.htm" TITLE="tk_setPalette, tk_bisque - Modify the Tk color palette">palette</A></DD>
<DT><A NAME="bitmap">bitmap</A></DT>
<DD>
<A HREF="../TkCmd/bitmap.htm" TITLE="bitmap - Images that display two colors">bitmap</A>, <A HREF="../TkCmd/dialog.htm" TITLE="tk_dialog - Create modal dialog and wait for response">dialog</A>, <A HREF="../TkLib/CanvPsY.htm" TITLE="Tk_CanvasPsY, Tk_CanvasPsBitmap, Tk_CanvasPsColor, Tk_CanvasPsFont, Tk_CanvasPsPath, Tk_CanvasPsStipple - utility procedures for generating Postscript for canvases">CanvPsY</A>, <A HREF="../TkLib/ConfigWidg.htm" TITLE="Tk_ConfigureWidget, Tk_ConfigureInfo, Tk_ConfigureValue, Tk_FreeOptions - process configuration options for widgets">ConfigWidg</A>, <A HREF="../TkLib/GetBitmap.htm" TITLE="Tk_AllocBitmapFromObj, Tk_GetBitmap, Tk_GetBitmapFromObj, Tk_DefineBitmap, Tk_NameOfBitmap, Tk_SizeOfBitmap, Tk_FreeBitmapFromObj, Tk_FreeBitmap - maintain database of single-plane pixmaps">GetBitmap</A>, <A HREF="../TkLib/SetOptions.htm" TITLE="Tk_CreateOptionTable, Tk_DeleteOptionTable, Tk_InitOptions, Tk_SetOptions, Tk_FreeSavedOptions, Tk_RestoreSavedOptions, Tk_GetOptionValue,  Tk_GetOptionInfo, Tk_FreeConfigOptions, Tk_Offset - process configuration options">SetOptions</A></DD>
<DT><A NAME="blocking">blocking</A></DT>
<DD>
<A HREF="../TclCmd/close.htm" TITLE="close - Close an open channel">close</A>, <A HREF="../TclCmd/fblocked.htm" TITLE="fblocked - Test whether the last input operation exhausted all available input">fblocked</A>, <A HREF="../TclCmd/fconfigure.htm" TITLE="fconfigure - Set and get options on a channel">fconfigure</A>, <A HREF="../TclCmd/fcopy.htm" TITLE="fcopy - Copy data from one channel to another">fcopy</A>, <A HREF="../TclCmd/fileevent.htm" TITLE="fileevent - Execute a script when a channel becomes readable or writable">fileevent</A>, <A HREF="../TclCmd/flush.htm" TITLE="flush - Flush buffered output for a channel">flush</A>, <A HREF="../TclCmd/gets.htm" TITLE="gets - Read a line from a channel">gets</A>, <A HREF="../TclCmd/read.htm" TITLE="read - Read from a channel">read</A>, <A HREF="../TclLib/CrtChannel.htm" TITLE="Tcl_CreateChannel, Tcl_GetChannelInstanceData, Tcl_GetChannelType, Tcl_GetChannelName, Tcl_GetChannelHandle, Tcl_GetChannelMode, Tcl_GetChannelBufferSize, Tcl_SetChannelBufferSize, Tcl_NotifyChannel, Tcl_BadChannelOption, Tcl_ChannelName, Tcl_ChannelVersion, Tcl_ChannelBlockModeProc, Tcl_ChannelCloseProc, Tcl_ChannelClose2Proc, Tcl_ChannelInputProc, Tcl_ChannelOutputProc, Tcl_ChannelSeekProc, Tcl_ChannelWideSeekProc, Tcl_ChannelTruncateProc, Tcl_ChannelSetOptionProc, Tcl_ChannelGetOptionProc, Tcl_ChannelWatchProc, Tcl_ChannelGetHandleProc, Tcl_ChannelFlushProc, Tcl_ChannelHandlerProc, Tcl_ChannelThreadActionProc, Tcl_IsChannelShared, Tcl_IsChannelRegistered, Tcl_CutChannel, Tcl_SpliceChannel, Tcl_IsChannelExisting, Tcl_ClearChannelHandlers, Tcl_GetChannelThread, Tcl_ChannelBuffered - procedures for creating and manipulating channels">CrtChannel</A>, <A HREF="../TclLib/CrtChnlHdlr.htm" TITLE="Tcl_CreateChannelHandler, Tcl_DeleteChannelHandler - call a procedure when a channel becomes readable or writable">CrtChnlHdlr</A>, <A HREF="../TclLib/OpenFileChnl.htm" TITLE="Tcl_OpenFileChannel, Tcl_OpenCommandChannel, Tcl_MakeFileChannel, Tcl_GetChannel, Tcl_GetChannelNames, Tcl_GetChannelNamesEx, Tcl_RegisterChannel, Tcl_UnregisterChannel, Tcl_DetachChannel, Tcl_IsStandardChannel, Tcl_Close, Tcl_ReadChars, Tcl_Read, Tcl_GetsObj, Tcl_Gets, Tcl_WriteObj, Tcl_WriteChars, Tcl_Write, Tcl_Flush, Tcl_Seek, Tcl_Tell, Tcl_TruncateChannel, Tcl_GetChannelOption, Tcl_SetChannelOption, Tcl_Eof, Tcl_InputBlocked, Tcl_InputBuffered, Tcl_OutputBuffered, Tcl_Ungets, Tcl_ReadRaw, Tcl_WriteRaw - buffered I/O facilities using channels">OpenFileChnl</A></DD>
<DT><A NAME="boolean">boolean</A></DT>
<DD>
<A HREF="../TclCmd/expr.htm" TITLE="expr - Evaluate an expression">expr</A>, <A HREF="../TclCmd/for.htm" TITLE="for - 'For' loop">for</A>, <A HREF="../TclCmd/if.htm" TITLE="if - Execute scripts conditionally">if</A>, <A HREF="../TclCmd/while.htm" TITLE="while - Execute script repeatedly as long as a condition is met">while</A>, <A HREF="../TclLib/BoolObj.htm" TITLE="Tcl_NewBooleanObj, Tcl_SetBooleanObj, Tcl_GetBooleanFromObj - store/retrieve boolean value in a Tcl_Obj">BoolObj</A>, <A HREF="../TclLib/ExprLong.htm" TITLE="Tcl_ExprLong, Tcl_ExprDouble, Tcl_ExprBoolean, Tcl_ExprString - evaluate an expression">ExprLong</A>, <A HREF="../TclLib/ExprLongObj.htm" TITLE="Tcl_ExprLongObj, Tcl_ExprDoubleObj, Tcl_ExprBooleanObj, Tcl_ExprObj - evaluate an expression">ExprLongObj</A>, <A HREF="../TclLib/GetInt.htm" TITLE="Tcl_GetInt, Tcl_GetDouble, Tcl_GetBoolean - convert from string to integer, double, or boolean">GetInt</A>, <A HREF="../TclLib/LinkVar.htm" TITLE="Tcl_LinkVar, Tcl_UnlinkVar, Tcl_UpdateLinkedVar - link Tcl variable to C variable">LinkVar</A>, <A HREF="../TkLib/ConfigWidg.htm" TITLE="Tk_ConfigureWidget, Tk_ConfigureInfo, Tk_ConfigureValue, Tk_FreeOptions - process configuration options for widgets">ConfigWidg</A>, <A HREF="../TkLib/SetOptions.htm" TITLE="Tk_CreateOptionTable, Tk_DeleteOptionTable, Tk_InitOptions, Tk_SetOptions, Tk_FreeSavedOptions, Tk_RestoreSavedOptions, Tk_GetOptionValue,  Tk_GetOptionInfo, Tk_FreeConfigOptions, Tk_Offset - process configuration options">SetOptions</A></DD>
<DT><A NAME="border">border</A></DT>
<DD>
<A HREF="../TkLib/3DBorder.htm" TITLE="Tk_Alloc3DBorderFromObj, Tk_Get3DBorder, Tk_Get3DBorderFromObj, Tk_Draw3DRectangle, Tk_Fill3DRectangle, Tk_Draw3DPolygon, Tk_Fill3DPolygon, Tk_3DVerticalBevel, Tk_3DHorizontalBevel, Tk_SetBackgroundFromBorder, Tk_NameOf3DBorder, Tk_3DBorderColor, Tk_3DBorderGC, Tk_Free3DBorderFromObj, Tk_Free3DBorder - draw borders with three-dimensional appearance">3DBorder</A>, <A HREF="../TkLib/ConfigWidg.htm" TITLE="Tk_ConfigureWidget, Tk_ConfigureInfo, Tk_ConfigureValue, Tk_FreeOptions - process configuration options for widgets">ConfigWidg</A>, <A HREF="../TkLib/ConfigWind.htm" TITLE="Tk_ConfigureWindow, Tk_MoveWindow, Tk_ResizeWindow, Tk_MoveResizeWindow, Tk_SetWindowBorderWidth, Tk_ChangeWindowAttributes, Tk_SetWindowBackground, Tk_SetWindowBackgroundPixmap, Tk_SetWindowBorder, Tk_SetWindowBorderPixmap, Tk_SetWindowColormap, Tk_DefineCursor, Tk_UndefineCursor - change window configuration or attributes">ConfigWind</A>, <A HREF="../TkLib/SetOptions.htm" TITLE="Tk_CreateOptionTable, Tk_DeleteOptionTable, Tk_InitOptions, Tk_SetOptions, Tk_FreeSavedOptions, Tk_RestoreSavedOptions, Tk_GetOptionValue,  Tk_GetOptionInfo, Tk_FreeConfigOptions, Tk_Offset - process configuration options">SetOptions</A></DD>
<DT><A NAME="bound variable">bound variable</A></DT>
<DD>
<A HREF="../TdbcCmd/tdbc_resultset.htm" TITLE="tdbc::resultset - TDBC result set object">tdbc_resultset</A>, <A HREF="../TdbcCmd/tdbc_statement.htm" TITLE="tdbc::statement - TDBC statement object">tdbc_statement</A></DD>
<DT><A NAME="box">box</A></DT>
<DD>
<A HREF="../TkLib/ttk_Geometry.htm" TITLE="Ttk_MakeBox, Ttk_PadBox, Ttk_ExpandBox, Ttk_PackBox, Ttk_StickBox, Ttk_PlaceBox, Ttk_BoxContains, Ttk_MakePadding, Ttk_UniformPadding, Ttk_AddPadding, Ttk_RelievePadding, Ttk_GetPaddingFromObj, Ttk_GetBorderFromObj, Ttk_GetStickyFromObj - Tk themed geometry utilities">ttk_Geometry</A></DD>
<DT><A NAME="braces">braces</A></DT>
<DD>
<A HREF="../TclLib/ParseCmd.htm" TITLE="Tcl_ParseCommand, Tcl_ParseExpr, Tcl_ParseBraces, Tcl_ParseQuotedString, Tcl_ParseVarName, Tcl_ParseVar, Tcl_FreeParse, Tcl_EvalTokens, Tcl_EvalTokensStandard - parse Tcl scripts and expressions">ParseCmd</A></DD>
<DT><A NAME="break">break</A></DT>
<DD>
<A HREF="../TclCmd/break.htm" TITLE="break - Abort looping command">break</A>, <A HREF="../TclCmd/return.htm" TITLE="return - Return from a procedure, or set return code of a script">return</A>, <A HREF="../TclLib/AllowExc.htm" TITLE="Tcl_AllowExceptions - allow all exceptions in next script evaluation">AllowExc</A></DD>
<DT><A NAME="buffer">buffer</A></DT>
<DD>
<A HREF="../TclCmd/flush.htm" TITLE="flush - Flush buffered output for a channel">flush</A></DD>
<DT><A NAME="buffered I/O">buffered I/O</A></DT>
<DD>
<A HREF="../TclLib/OpenFileChnl.htm" TITLE="Tcl_OpenFileChannel, Tcl_OpenCommandChannel, Tcl_MakeFileChannel, Tcl_GetChannel, Tcl_GetChannelNames, Tcl_GetChannelNamesEx, Tcl_RegisterChannel, Tcl_UnregisterChannel, Tcl_DetachChannel, Tcl_IsStandardChannel, Tcl_Close, Tcl_ReadChars, Tcl_Read, Tcl_GetsObj, Tcl_Gets, Tcl_WriteObj, Tcl_WriteChars, Tcl_Write, Tcl_Flush, Tcl_Seek, Tcl_Tell, Tcl_TruncateChannel, Tcl_GetChannelOption, Tcl_SetChannelOption, Tcl_Eof, Tcl_InputBlocked, Tcl_InputBuffered, Tcl_OutputBuffered, Tcl_Ungets, Tcl_ReadRaw, Tcl_WriteRaw - buffered I/O facilities using channels">OpenFileChnl</A></DD>
<DT><A NAME="buffering">buffering</A></DT>
<DD>
<A HREF="../TclCmd/fconfigure.htm" TITLE="fconfigure - Set and get options on a channel">fconfigure</A></DD>
<DT><A NAME="busy">busy</A></DT>
<DD>
<A HREF="../TkCmd/busy.htm" TITLE="busy - confine pointer and keyboard events to a window sub-tree">busy</A></DD>
<DT><A NAME="butt">butt</A></DT>
<DD>
<A HREF="../TkLib/GetCapStyl.htm" TITLE="Tk_GetCapStyle, Tk_NameOfCapStyle - translate between strings and cap styles">GetCapStyl</A></DD>
<DT><A NAME="button">button</A></DT>
<DD>
<A HREF="../TkCmd/button.htm" TITLE="button - Create and manipulate button widgets">button</A>, <A HREF="../TkCmd/ttk_button.htm" TITLE="ttk::button - Widget that issues a command when pressed">ttk_button</A>, <A HREF="../TkCmd/ttk_checkbutton.htm" TITLE="ttk::checkbutton - On/off widget">ttk_checkbutton</A>, <A HREF="../TkCmd/ttk_menubutton.htm" TITLE="ttk::menubutton - Widget that pops down a menu when pressed">ttk_menubutton</A>, <A HREF="../TkCmd/ttk_radiobutton.htm" TITLE="ttk::radiobutton - Mutually exclusive option widget">ttk_radiobutton</A></DD>
<DT><A NAME="byte array">byte array</A></DT>
<DD>
<A HREF="../TclCmd/fconfigure.htm" TITLE="fconfigure - Set and get options on a channel">fconfigure</A>, <A HREF="../TclLib/ByteArrObj.htm" TITLE="Tcl_NewByteArrayObj, Tcl_SetByteArrayObj, Tcl_GetByteArrayFromObj, Tcl_SetByteArrayLength - manipulate Tcl values as a arrays of bytes">ByteArrObj</A></DD>
<DT><A NAME="bytecode">bytecode</A></DT>
<DD>
<A HREF="../TclCmd/tclvars.htm" TITLE="argc, argv, argv0, auto_path, env, errorCode, errorInfo, tcl_interactive, tcl_library, tcl_nonwordchars, tcl_patchLevel, tcl_pkgPath, tcl_platform, tcl_precision, tcl_rcFileName, tcl_traceCompile, tcl_traceEval, tcl_wordchars, tcl_version - Variables used by Tcl">tclvars</A></DD>
</DL>
<div class="copy">Copyright &copy; 1989-1994 The Regents of the University of California
Copyright &copy; 1992-1999 Karl Lehenbauer &amp; Mark Diekhans
Copyright &copy; 1992-1999 Karl Lehenbauer and Mark Diekhans
Copyright &copy; 1993-1997 Bell Labs Innovations for Lucent Technologies
Copyright &copy; 1993-1998 Lucent Technologies, Inc
Copyright &copy; 1994 The Australian National University
Copyright &copy; 1994-2000 Sun Microsystems, Inc
Copyright &copy; 1997-2000 Ajuba Solutions
Copyright &copy; 1997-2000 Scriptics Corporation
Copyright &copy; 1998 Mark Harrison
Copyright &copy; 2000 Jeffrey Hobbs
Copyright &copy; 2001 ActiveState Tool Corp
Copyright &copy; 2001 Vincent Darley
Copyright &copy; 2001-2004 ActiveState Corporation
Copyright &copy; 2001-2005 Kevin B. Kenny &lt;kennykb(at)acm.org&gt;
Copyright &copy; 2001-2012 Donal K. Fellows
Copyright &copy; 2002-2010 Andreas Kupries &lt;andreas_kupries(at)users.sourceforge.net&gt;
Copyright &copy; 2003 George Petasis &lt;petasis(at)iit.demokritos.gr&gt;
Copyright &copy; 2003 Simon Geard
Copyright &copy; 2003-2006 Joe English
Copyright &copy; 2006 Miguel Sofer
Copyright &copy; 2006-2008 ActiveState Software Inc
Copyright &copy; 2006-2008 Daniel A. Steffen &lt;das(at)users.sourceforge.net&gt;
Copyright &copy; 2006-2008 Joe Mistachkin
Copyright &copy; 2008 Arnulf Widemann
Copyright &copy; 2008 Arnulf Wiedemann
Copyright &copy; 2008 Jos Decoster
Copyright &copy; 2008 Pat Thoyts
Copyright &copy; 2008 Peter Spjuth &lt;pspjuth(at)users.sourceforge.net&gt;
Copyright &copy; 2008-2010 Kevin B. Kenny
Copyright &copy; 2011 Kevin Walzer
Copyright &copy; 2012 Trevor Davel
</div>
</BODY></HTML>
