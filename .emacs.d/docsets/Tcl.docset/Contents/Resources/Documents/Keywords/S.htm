<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD><TITLE>Tcl/Tk Keywords - S</TITLE>
<link rel="stylesheet" href="../docs.css" type="text/css" media="all">
</HEAD>
<BODY><H2><a href="../contents.htm">Tcl8.6.0/Tk8.6.0 Documentation</a> <small>&gt;</small> Tcl/Tk Keywords - S</H2>
<H3><A HREF="../UserCmd/contents.htm">Tcl/Tk Applications</A> | <A HREF="../TclCmd/contents.htm">Tcl Commands</A> | <A HREF="../TkCmd/contents.htm">Tk Commands</A> | <A HREF="../ItclCmd/contents.htm">[incr Tcl] Package Commands</A> | <A HREF="../Sqlite3Cmd/contents.htm">SQLite Package Commands</A> | <A HREF="../TdbcCmd/contents.htm">TDBC Package Commands</A> | <A HREF="../TdbcmysqlCmd/contents.htm">tdbc::mysql Package Commands</A> | <A HREF="../TdbcodbcCmd/contents.htm">tdbc::odbc Package Commands</A> | <A HREF="../TdbcpostgresCmd/contents.htm">tdbc::postgres Package Commands</A> | <A HREF="../Tdbcsqlite3Cmd/contents.htm">tdbc::sqlite3 Package Commands</A> | <A HREF="../ThreadCmd/contents.htm">Thread Package Commands</A> | <A HREF="../TclLib/contents.htm">Tcl C API</A> | <A HREF="../TkLib/contents.htm">Tk C API</A> | <A HREF="../ItclLib/contents.htm">[incr Tcl] Package C API</A> | <A HREF="../TdbcLib/contents.htm">TDBC Package C API</A></H3>
<H3><A HREF="A.htm">A</A> |
<A HREF="B.htm">B</A> |
<A HREF="C.htm">C</A> |
<A HREF="D.htm">D</A> |
<A HREF="E.htm">E</A> |
<A HREF="F.htm">F</A> |
<A HREF="G.htm">G</A> |
<A HREF="H.htm">H</A> |
<A HREF="I.htm">I</A> |
<A HREF="J.htm">J</A> |
<A HREF="K.htm">K</A> |
<A HREF="L.htm">L</A> |
<A HREF="M.htm">M</A> |
<A HREF="N.htm">N</A> |
<A HREF="O.htm">O</A> |
<A HREF="P.htm">P</A> |
<A HREF="Q.htm">Q</A> |
<A HREF="R.htm">R</A> |
<A HREF="S.htm">S</A> |
<A HREF="T.htm">T</A> |
<A HREF="U.htm">U</A> |
<A HREF="V.htm">V</A> |
<A HREF="W.htm">W</A> |
<A HREF="X.htm">X</A> |
<A HREF="Y.htm">Y</A> |
<A HREF="Z.htm">Z</A></H3>
<DL class="keylist">
<DT><A NAME="safe">safe</A></DT>
<DD>
<A HREF="../TkLib/Tk_Init.htm" TITLE="Tk_Init, Tk_SafeInit - add Tk to an interpreter and make a new Tk application.">Tk_Init</A></DD>
<DT><A NAME="safe
interpreter">safe
interpreter</A></DT>
<DD>
<A HREF="../TclCmd/safe.htm" TITLE="safe - Creating and manipulating safe interpreters">safe</A>, <A HREF="../TkCmd/loadTk.htm" TITLE="safe::loadTk - Load Tk into a safe interpreter.">loadTk</A></DD>
<DT><A NAME="safe interpreter">safe interpreter</A></DT>
<DD>
<A HREF="../TclCmd/interp.htm" TITLE="interp - Create and manipulate Tcl interpreters">interp</A>, <A HREF="../TclCmd/load.htm" TITLE="load - Load machine code and initialize new commands">load</A>, <A HREF="../TclCmd/unload.htm" TITLE="unload - Unload machine code">unload</A></DD>
<DT><A NAME="scalar">scalar</A></DT>
<DD>
<A HREF="../TclLib/SetVar.htm" TITLE="Tcl_SetVar2Ex, Tcl_SetVar, Tcl_SetVar2, Tcl_ObjSetVar2, Tcl_GetVar2Ex, Tcl_GetVar, Tcl_GetVar2, Tcl_ObjGetVar2, Tcl_UnsetVar, Tcl_UnsetVar2 - manipulate Tcl variables">SetVar</A></DD>
<DT><A NAME="scale">scale</A></DT>
<DD>
<A HREF="../TkCmd/scale.htm" TITLE="scale - Create and manipulate scale widgets">scale</A>, <A HREF="../TkCmd/ttk_scale.htm" TITLE="ttk::scale - Create and manipulate a scale widget">ttk_scale</A></DD>
<DT><A NAME="scan">scan</A></DT>
<DD>
<A HREF="../TclCmd/binary.htm" TITLE="binary - Insert and extract fields from binary strings">binary</A>, <A HREF="../TclCmd/scan.htm" TITLE="scan - Parse string using conversion specifiers in the style of sscanf">scan</A></DD>
<DT><A NAME="scope">scope</A></DT>
<DD>
<A HREF="../ItclCmd/code.htm" TITLE="itcl::code - capture the namespace context for a code fragment">code</A></DD>
<DT><A NAME="screen">screen</A></DT>
<DD>
<A HREF="../TkCmd/winfo.htm" TITLE="winfo - Return window-related information">winfo</A>, <A HREF="../TkLib/CrtWindow.htm" TITLE="Tk_CreateWindow, Tk_CreateWindowFromPath, Tk_DestroyWindow, Tk_MakeWindowExist - create or delete window">CrtWindow</A>, <A HREF="../TkLib/GetVisual.htm" TITLE="Tk_GetVisual - translate from string to visual">GetVisual</A>, <A HREF="../TkLib/WindowId.htm" TITLE="Tk_WindowId, Tk_Parent, Tk_Display, Tk_DisplayName, Tk_ScreenNumber, Tk_Screen, Tk_X, Tk_Y, Tk_Width, Tk_Height, Tk_Changes, Tk_Attributes, Tk_IsContainer, Tk_IsEmbedded, Tk_IsMapped, Tk_IsTopLevel, Tk_ReqWidth, Tk_ReqHeight, Tk_MinReqWidth, Tk_MinReqHeight, Tk_InternalBorderLeft, Tk_InternalBorderRight, Tk_InternalBorderTop, Tk_InternalBorderBottom, Tk_Visual, Tk_Depth, Tk_Colormap, Tk_Interp  - retrieve information from Tk's local data structure">WindowId</A></DD>
<DT><A NAME="screen distance">screen distance</A></DT>
<DD>
<A HREF="../TkLib/SetOptions.htm" TITLE="Tk_CreateOptionTable, Tk_DeleteOptionTable, Tk_InitOptions, Tk_SetOptions, Tk_FreeSavedOptions, Tk_RestoreSavedOptions, Tk_GetOptionValue,  Tk_GetOptionInfo, Tk_FreeConfigOptions, Tk_Offset - process configuration options">SetOptions</A></DD>
<DT><A NAME="screen units">screen units</A></DT>
<DD>
<A HREF="../TkLib/GetPixels.htm" TITLE="Tk_GetPixelsFromObj, Tk_GetPixels, Tk_GetMMFromObj, Tk_GetScreenMM - translate between strings and screen units">GetPixels</A></DD>
<DT><A NAME="script">script</A></DT>
<DD>
<A HREF="../TclCmd/eval.htm" TITLE="eval - Evaluate a Tcl script">eval</A>, <A HREF="../TclCmd/fileevent.htm" TITLE="fileevent - Execute a script when a channel becomes readable or writable">fileevent</A>, <A HREF="../TclCmd/source.htm" TITLE="source - Evaluate a file or resource as a Tcl script">source</A>, <A HREF="../TclCmd/Tcl.htm" TITLE="Tcl - Tool Command Language">Tcl</A>, <A HREF="../TclCmd/time.htm" TITLE="time - Time the execution of a script">time</A>, <A HREF="../TclLib/Eval.htm" TITLE="Tcl_EvalObjEx, Tcl_EvalFile, Tcl_EvalObjv, Tcl_Eval, Tcl_EvalEx, Tcl_GlobalEval, Tcl_GlobalEvalObj, Tcl_VarEval, Tcl_VarEvalVA - execute Tcl scripts">Eval</A>, <A HREF="../TclLib/NRE.htm" TITLE="Tcl_NRCreateCommand, Tcl_NRCallObjProc, Tcl_NREvalObj, Tcl_NREvalObjv, Tcl_NRCmdSwap, Tcl_NRAddCallback - Non-Recursive (stackless) evaluation of Tcl scripts.">NRE</A>, <A HREF="../TkLib/BindTable.htm" TITLE="Tk_CreateBindingTable, Tk_DeleteBindingTable, Tk_CreateBinding, Tk_DeleteBinding, Tk_GetBinding, Tk_GetAllBindings, Tk_DeleteAllBindings, Tk_BindEvent - invoke scripts in response to X events">BindTable</A></DD>
<DT><A NAME="script file">script file</A></DT>
<DD>
<A HREF="../UserCmd/tclsh.htm" TITLE="tclsh - Simple shell containing Tcl interpreter">tclsh</A>, <A HREF="../UserCmd/wish.htm" TITLE="wish - Simple windowing shell">wish</A></DD>
<DT><A NAME="scrollbar">scrollbar</A></DT>
<DD>
<A HREF="../TkCmd/scrollbar.htm" TITLE="scrollbar - Create and manipulate scrollbar widgets">scrollbar</A>, <A HREF="../TkCmd/ttk_scrollbar.htm" TITLE="ttk::scrollbar - Control the viewport of a scrollable widget">ttk_scrollbar</A>, <A HREF="../TkLib/GetScroll.htm" TITLE="Tk_GetScrollInfoObj, Tk_GetScrollInfo - parse arguments for scrolling commands">GetScroll</A></DD>
<DT><A NAME="scrolling command">scrolling command</A></DT>
<DD>
<A HREF="../TkLib/GetScroll.htm" TITLE="Tk_GetScrollInfoObj, Tk_GetScrollInfo - parse arguments for scrolling commands">GetScroll</A></DD>
<DT><A NAME="search">search</A></DT>
<DD>
<A HREF="../TclCmd/array.htm" TITLE="array - Manipulate array variables">array</A>, <A HREF="../TclCmd/lsearch.htm" TITLE="lsearch - See if a list contains a particular element">lsearch</A>, <A HREF="../ItclCmd/find.htm" TITLE="itcl::find - search for classes and objects">find</A>, <A HREF="../TclLib/Hash.htm" TITLE="Tcl_InitHashTable, Tcl_InitCustomHashTable, Tcl_InitObjHashTable, Tcl_DeleteHashTable, Tcl_CreateHashEntry, Tcl_DeleteHashEntry, Tcl_FindHashEntry, Tcl_GetHashValue, Tcl_SetHashValue, Tcl_GetHashKey, Tcl_FirstHashEntry, Tcl_NextHashEntry, Tcl_HashStats - procedures to manage hash tables">Hash</A></DD>
<DT><A NAME="security">security</A></DT>
<DD>
<A HREF="../TkCmd/send.htm" TITLE="send - Execute a command in a different application">send</A></DD>
<DT><A NAME="security policy">security policy</A></DT>
<DD>
<A HREF="../TclCmd/http.htm" TITLE="http - Client-side implementation of the HTTP/1.1 protocol">http</A></DD>
<DT><A NAME="seek">seek</A></DT>
<DD>
<A HREF="../TclCmd/seek.htm" TITLE="seek - Change the access position for an open channel">seek</A>, <A HREF="../TclLib/OpenFileChnl.htm" TITLE="Tcl_OpenFileChannel, Tcl_OpenCommandChannel, Tcl_MakeFileChannel, Tcl_GetChannel, Tcl_GetChannelNames, Tcl_GetChannelNamesEx, Tcl_RegisterChannel, Tcl_UnregisterChannel, Tcl_DetachChannel, Tcl_IsStandardChannel, Tcl_Close, Tcl_ReadChars, Tcl_Read, Tcl_GetsObj, Tcl_Gets, Tcl_WriteObj, Tcl_WriteChars, Tcl_Write, Tcl_Flush, Tcl_Seek, Tcl_Tell, Tcl_TruncateChannel, Tcl_GetChannelOption, Tcl_SetChannelOption, Tcl_Eof, Tcl_InputBlocked, Tcl_InputBuffered, Tcl_OutputBuffered, Tcl_Ungets, Tcl_ReadRaw, Tcl_WriteRaw - buffered I/O facilities using channels">OpenFileChnl</A></DD>
<DT><A NAME="seeking">seeking</A></DT>
<DD>
<A HREF="../TclCmd/tell.htm" TITLE="tell - Return current access position for an open channel">tell</A></DD>
<DT><A NAME="selection">selection</A></DT>
<DD>
<A HREF="../TkCmd/chooseDirectory.htm" TITLE="tk_chooseDirectory - pops up a dialog box for the user to select a directory.">chooseDirectory</A>, <A HREF="../TkCmd/clipboard.htm" TITLE="clipboard - Manipulate Tk clipboard">clipboard</A>, <A HREF="../TkCmd/selection.htm" TITLE="selection - Manipulate the X selection">selection</A>, <A HREF="../TkLib/CanvTkwin.htm" TITLE="Tk_CanvasTkwin, Tk_CanvasGetCoord, Tk_CanvasDrawableCoords, Tk_CanvasSetStippleOrigin, Tk_CanvasWindowCoords, Tk_CanvasEventuallyRedraw, Tk_CanvasTagsOption - utility procedures for canvas type managers">CanvTkwin</A>, <A HREF="../TkLib/CanvTxtInfo.htm" TITLE="Tk_CanvasTextInfo - additional information for managing text items in canvases">CanvTxtInfo</A>, <A HREF="../TkLib/ClrSelect.htm" TITLE="Tk_ClearSelection - Deselect a selection">ClrSelect</A>, <A HREF="../TkLib/CrtItemType.htm" TITLE="Tk_CreateItemType, Tk_GetItemTypes - define new kind of canvas item">CrtItemType</A>, <A HREF="../TkLib/CrtSelHdlr.htm" TITLE="Tk_CreateSelHandler, Tk_DeleteSelHandler - arrange to handle requests for a selection">CrtSelHdlr</A></DD>
<DT><A NAME="selection anchor">selection anchor</A></DT>
<DD>
<A HREF="../TkLib/CanvTxtInfo.htm" TITLE="Tk_CanvasTextInfo - additional information for managing text items in canvases">CanvTxtInfo</A></DD>
<DT><A NAME="selection owner">selection owner</A></DT>
<DD>
<A HREF="../TkLib/OwnSelect.htm" TITLE="Tk_OwnSelection - make a window the owner of the primary selection">OwnSelect</A></DD>
<DT><A NAME="selection retrieval">selection retrieval</A></DT>
<DD>
<A HREF="../TkLib/GetSelect.htm" TITLE="Tk_GetSelection - retrieve the contents of a selection">GetSelect</A></DD>
<DT><A NAME="send">send</A></DT>
<DD>
<A HREF="../TkCmd/send.htm" TITLE="send - Execute a command in a different application">send</A>, <A HREF="../TkCmd/tk.htm" TITLE="tk - Manipulate Tk internal state">tk</A></DD>
<DT><A NAME="send command">send command</A></DT>
<DD>
<A HREF="../TkLib/SetAppName.htm" TITLE="Tk_SetAppName - Set the name of an application for 'send' commands">SetAppName</A></DD>
<DT><A NAME="separator">separator</A></DT>
<DD>
<A HREF="../TclCmd/join.htm" TITLE="join - Create a string by joining together list elements">join</A>, <A HREF="../TkCmd/ttk_separator.htm" TITLE="ttk::separator - Separator bar">ttk_separator</A></DD>
<DT><A NAME="serial">serial</A></DT>
<DD>
<A HREF="../TclCmd/open.htm" TITLE="open - Open a file-based or command pipeline channel">open</A></DD>
<DT><A NAME="server">server</A></DT>
<DD>
<A HREF="../TclLib/OpenTcp.htm" TITLE="Tcl_OpenTcpClient, Tcl_MakeTcpClientChannel, Tcl_OpenTcpServer - procedures to open channels using TCP sockets">OpenTcp</A></DD>
<DT><A NAME="service mode">service mode</A></DT>
<DD>
<A HREF="../TclLib/Notifier.htm" TITLE="Tcl_CreateEventSource, Tcl_DeleteEventSource, Tcl_SetMaxBlockTime, Tcl_QueueEvent, Tcl_ThreadQueueEvent, Tcl_ThreadAlert, Tcl_GetCurrentThread, Tcl_DeleteEvents, Tcl_InitNotifier, Tcl_FinalizeNotifier, Tcl_WaitForEvent, Tcl_AlertNotifier, Tcl_SetTimer, Tcl_ServiceAll, Tcl_ServiceEvent, Tcl_GetServiceMode, Tcl_SetServiceMode, Tcl_ServiceModeHook, Tcl_SetNotifier - the event queue and notifier interfaces">Notifier</A></DD>
<DT><A NAME="set">set</A></DT>
<DD>
<A HREF="../TclCmd/lassign.htm" TITLE="lassign - Assign list elements to variables">lassign</A>, <A HREF="../TclCmd/lset.htm" TITLE="lset - Change an element in a list">lset</A>, <A HREF="../TclLib/SetVar.htm" TITLE="Tcl_SetVar2Ex, Tcl_SetVar, Tcl_SetVar2, Tcl_ObjSetVar2, Tcl_GetVar2Ex, Tcl_GetVar, Tcl_GetVar2, Tcl_ObjGetVar2, Tcl_UnsetVar, Tcl_UnsetVar2 - manipulate Tcl variables">SetVar</A></DD>
<DT><A NAME="shadow">shadow</A></DT>
<DD>
<A HREF="../TkLib/3DBorder.htm" TITLE="Tk_Alloc3DBorderFromObj, Tk_Get3DBorder, Tk_Get3DBorderFromObj, Tk_Draw3DRectangle, Tk_Fill3DRectangle, Tk_Draw3DPolygon, Tk_Fill3DPolygon, Tk_3DVerticalBevel, Tk_3DHorizontalBevel, Tk_SetBackgroundFromBorder, Tk_NameOf3DBorder, Tk_3DBorderColor, Tk_3DBorderGC, Tk_Free3DBorderFromObj, Tk_Free3DBorder - draw borders with three-dimensional appearance">3DBorder</A></DD>
<DT><A NAME="shared library">shared library</A></DT>
<DD>
<A HREF="../TclCmd/load.htm" TITLE="load - Load machine code and initialize new commands">load</A>, <A HREF="../TclCmd/unload.htm" TITLE="unload - Unload machine code">unload</A>, <A HREF="../TclLib/Load.htm" TITLE="Tcl_LoadFile, Tcl_FindSymbol - platform-independent dynamic library loading">Load</A></DD>
<DT><A NAME="shell">shell</A></DT>
<DD>
<A HREF="../UserCmd/tclsh.htm" TITLE="tclsh - Simple shell containing Tcl interpreter">tclsh</A>, <A HREF="../UserCmd/wish.htm" TITLE="wish - Simple windowing shell">wish</A></DD>
<DT><A NAME="signal">signal</A></DT>
<DD>
<A HREF="../TclLib/Async.htm" TITLE="Tcl_AsyncCreate, Tcl_AsyncMark, Tcl_AsyncInvoke, Tcl_AsyncDelete, Tcl_AsyncReady - handle asynchronous events">Async</A></DD>
<DT><A NAME="signal numbers">signal numbers</A></DT>
<DD>
<A HREF="../TclLib/Signal.htm" TITLE="Tcl_SignalId, Tcl_SignalMsg - Convert signal codes">Signal</A></DD>
<DT><A NAME="signals">signals</A></DT>
<DD>
<A HREF="../TclLib/Signal.htm" TITLE="Tcl_SignalId, Tcl_SignalMsg - Convert signal codes">Signal</A></DD>
<DT><A NAME="size">size</A></DT>
<DD>
<A HREF="../TkCmd/grid.htm" TITLE="grid - Geometry manager that arranges widgets in a grid">grid</A>, <A HREF="../TkCmd/pack.htm" TITLE="pack - Geometry manager that packs around edges of cavity">pack</A>, <A HREF="../TkCmd/wm.htm" TITLE="wm - Communicate with window manager">wm</A></DD>
<DT><A NAME="sizegrip">sizegrip</A></DT>
<DD>
<A HREF="../TkCmd/ttk_sizegrip.htm" TITLE="ttk::sizegrip - Bottom-right corner resize widget">ttk_sizegrip</A></DD>
<DT><A NAME="slave">slave</A></DT>
<DD>
<A HREF="../TkCmd/place.htm" TITLE="place - Geometry manager for fixed or rubber-sheet placement">place</A>, <A HREF="../TclLib/CrtSlave.htm" TITLE="Tcl_IsSafe, Tcl_MakeSafe, Tcl_CreateSlave, Tcl_GetSlave, Tcl_GetMaster, Tcl_GetInterpPath, Tcl_CreateAlias, Tcl_CreateAliasObj, Tcl_GetAlias, Tcl_GetAliasObj, Tcl_ExposeCommand, Tcl_HideCommand - manage multiple Tcl interpreters, aliases and hidden commands">CrtSlave</A>, <A HREF="../TkLib/MaintGeom.htm" TITLE="Tk_MaintainGeometry, Tk_UnmaintainGeometry - maintain geometry of one window relative to another">MaintGeom</A></DD>
<DT><A NAME="slave interpreter">slave interpreter</A></DT>
<DD>
<A HREF="../TclCmd/interp.htm" TITLE="interp - Create and manipulate Tcl interpreters">interp</A>, <A HREF="../TclCmd/safe.htm" TITLE="safe - Creating and manipulating safe interpreters">safe</A>, <A HREF="../TkCmd/loadTk.htm" TITLE="safe::loadTk - Load Tk into a safe interpreter.">loadTk</A></DD>
<DT><A NAME="sleep">sleep</A></DT>
<DD>
<A HREF="../TclCmd/after.htm" TITLE="after - Execute a command after a time delay">after</A>, <A HREF="../TclLib/Sleep.htm" TITLE="Tcl_Sleep - delay execution for a given number of milliseconds">Sleep</A></DD>
<DT><A NAME="slider">slider</A></DT>
<DD>
<A HREF="../TkCmd/scale.htm" TITLE="scale - Create and manipulate scale widgets">scale</A>, <A HREF="../TkCmd/ttk_scale.htm" TITLE="ttk::scale - Create and manipulate a scale widget">ttk_scale</A></DD>
<DT><A NAME="slot">slot</A></DT>
<DD>
<A HREF="../TclCmd/define.htm" TITLE="oo::define, oo::objdefine - define and configure classes and objects">define</A></DD>
<DT><A NAME="socket">socket</A></DT>
<DD>
<A HREF="../TclCmd/http.htm" TITLE="http - Client-side implementation of the HTTP/1.1 protocol">http</A>, <A HREF="../TclCmd/socket.htm" TITLE="socket - Open a TCP network connection">socket</A>, <A HREF="../TclLib/OpenTcp.htm" TITLE="Tcl_OpenTcpClient, Tcl_MakeTcpClientChannel, Tcl_OpenTcpServer - procedures to open channels using TCP sockets">OpenTcp</A></DD>
<DT><A NAME="sort">sort</A></DT>
<DD>
<A HREF="../TclCmd/lsort.htm" TITLE="lsort - Sort the elements of a list">lsort</A></DD>
<DT><A NAME="source">source</A></DT>
<DD>
<A HREF="../TclCmd/safe.htm" TITLE="safe - Creating and manipulating safe interpreters">safe</A>, <A HREF="../TkCmd/loadTk.htm" TITLE="safe::loadTk - Load Tk into a safe interpreter.">loadTk</A></DD>
<DT><A NAME="spinbox">spinbox</A></DT>
<DD>
<A HREF="../TkCmd/spinbox.htm" TITLE="spinbox - Create and manipulate spinbox widgets">spinbox</A>, <A HREF="../TkCmd/ttk_spinbox.htm" TITLE="ttk::spinbox - Selecting text field widget">ttk_spinbox</A></DD>
<DT><A NAME="split">split</A></DT>
<DD>
<A HREF="../TclCmd/split.htm" TITLE="split - Split a string into a proper Tcl list">split</A>, <A HREF="../TclLib/SplitList.htm" TITLE="Tcl_SplitList, Tcl_Merge, Tcl_ScanElement, Tcl_ConvertElement, Tcl_ScanCountedElement, Tcl_ConvertCountedElement - manipulate Tcl lists">SplitList</A>, <A HREF="../TclLib/SplitPath.htm" TITLE="Tcl_SplitPath, Tcl_JoinPath, Tcl_GetPathType - manipulate platform-dependent file paths">SplitPath</A></DD>
<DT><A NAME="splitting">splitting</A></DT>
<DD>
<A HREF="../TclCmd/regexp.htm" TITLE="regexp - Match a regular expression against a string">regexp</A></DD>
<DT><A NAME="sprintf">sprintf</A></DT>
<DD>
<A HREF="../TclCmd/format.htm" TITLE="format - Format a string in the style of sprintf">format</A></DD>
<DT><A NAME="SQL">SQL</A></DT>
<DD>
<A HREF="../TdbcCmd/tdbc.htm" TITLE="tdbc - Tcl Database Connectivity">tdbc</A>, <A HREF="../TdbcCmd/tdbc_connection.htm" TITLE="tdbc::connection - TDBC connection object">tdbc_connection</A>, <A HREF="../TdbcCmd/tdbc_mapSqlState.htm" TITLE="tdbc::mapSqlState - Map SQLSTATE to error class">tdbc_mapSqlState</A>, <A HREF="../TdbcCmd/tdbc_resultset.htm" TITLE="tdbc::resultset - TDBC result set object">tdbc_resultset</A>, <A HREF="../TdbcCmd/tdbc_statement.htm" TITLE="tdbc::statement - TDBC statement object">tdbc_statement</A>, <A HREF="../TdbcCmd/tdbc_tokenize.htm" TITLE="tdbc::tokenize - TDBC SQL tokenizer">tdbc_tokenize</A>, <A HREF="../TdbcmysqlCmd/tdbc_mysql.htm" TITLE="tdbc::mysql - TDBC-MYSQL bridge">tdbc_mysql</A>, <A HREF="../TdbcodbcCmd/tdbc_odbc.htm" TITLE="tdbc::odbc - TDBC-ODBC bridge">tdbc_odbc</A>, <A HREF="../TdbcpostgresCmd/tdbc_postgres.htm" TITLE="tdbc::postgres - TDBC-POSTGRES bridge">tdbc_postgres</A>, <A HREF="../Tdbcsqlite3Cmd/tdbc_sqlite3.htm" TITLE="tdbc::sqlite3 - TDBC driver for the SQLite3 database manager">tdbc_sqlite3</A>, <A HREF="../TdbcLib/Tdbc_Init.htm" TITLE="Tdbc_Init, Tdbc_MapSqlState, Tdbc_TokenizeSql - C procedures to facilitate writing TDBC drivers">Tdbc_Init</A></DD>
<DT><A NAME="SQLite3">SQLite3</A></DT>
<DD>
<A HREF="../Tdbcsqlite3Cmd/tdbc_sqlite3.htm" TITLE="tdbc::sqlite3 - TDBC driver for the SQLite3 database manager">tdbc_sqlite3</A></DD>
<DT><A NAME="stack">stack</A></DT>
<DD>
<A HREF="../TclLib/AddErrInfo.htm" TITLE="Tcl_GetReturnOptions, Tcl_SetReturnOptions, Tcl_AddErrorInfo, Tcl_AppendObjToErrorInfo, Tcl_AddObjErrorInfo, Tcl_SetObjErrorCode, Tcl_SetErrorCode, Tcl_SetErrorCodeVA, Tcl_SetErrorLine, Tcl_GetErrorLine, Tcl_PosixError, Tcl_LogCommandInfo - retrieve or record information about errors and other return options">AddErrInfo</A>, <A HREF="../ItclLib/Stack.htm" TITLE="Itcl_InitStack, Itcl_DeleteStack, Itcl_PushStack, Itcl_PopStack, Itcl_PeekStack, Itcl_GetStackValue, Itcl_GetStackSize - Manipulate an Itcl stack object.">Stack</A></DD>
<DT><A NAME="stack frame">stack frame</A></DT>
<DD>
<A HREF="../TclCmd/uplevel.htm" TITLE="uplevel - Execute a script in a different stack frame">uplevel</A></DD>
<DT><A NAME="stacking order">stacking order</A></DT>
<DD>
<A HREF="../TkCmd/lower.htm" TITLE="lower - Change a window's position in the stacking order">lower</A>, <A HREF="../TkCmd/raise.htm" TITLE="raise - Change a window's position in the stacking order">raise</A>, <A HREF="../TkLib/Restack.htm" TITLE="Tk_RestackWindow - Change a window's position in the stacking order">Restack</A></DD>
<DT><A NAME="stackless">stackless</A></DT>
<DD>
<A HREF="../TclLib/NRE.htm" TITLE="Tcl_NRCreateCommand, Tcl_NRCallObjProc, Tcl_NREvalObj, Tcl_NREvalObjv, Tcl_NRCmdSwap, Tcl_NRAddCallback - Non-Recursive (stackless) evaluation of Tcl scripts.">NRE</A></DD>
<DT><A NAME="standard channel">standard channel</A></DT>
<DD>
<A HREF="../TclLib/GetStdChan.htm" TITLE="Tcl_GetStdChannel, Tcl_SetStdChannel - procedures for retrieving and replacing the standard channels">GetStdChan</A></DD>
<DT><A NAME="standard channels">standard channels</A></DT>
<DD>
<A HREF="../TclLib/StdChannels.htm" TITLE="Tcl_StandardChannels - How the Tcl library deals with the standard channels">StdChannels</A>, <A HREF="../TkLib/CrtConsoleChan.htm" TITLE="Tk_InitConsoleChannels - Install the console channels as standard channels">CrtConsoleChan</A></DD>
<DT><A NAME="standard error">standard error</A></DT>
<DD>
<A HREF="../TclLib/GetStdChan.htm" TITLE="Tcl_GetStdChannel, Tcl_SetStdChannel - procedures for retrieving and replacing the standard channels">GetStdChan</A></DD>
<DT><A NAME="standard input">standard input</A></DT>
<DD>
<A HREF="../TclLib/GetStdChan.htm" TITLE="Tcl_GetStdChannel, Tcl_SetStdChannel - procedures for retrieving and replacing the standard channels">GetStdChan</A></DD>
<DT><A NAME="standard option">standard option</A></DT>
<DD>
<A HREF="../TkCmd/options.htm" TITLE="options - Standard options supported by widgets">options</A></DD>
<DT><A NAME="standard output">standard output</A></DT>
<DD>
<A HREF="../TclLib/GetStdChan.htm" TITLE="Tcl_GetStdChannel, Tcl_SetStdChannel - procedures for retrieving and replacing the standard channels">GetStdChan</A></DD>
<DT><A NAME="stat">stat</A></DT>
<DD>
<A HREF="../TclCmd/file.htm" TITLE="file - Manipulate file names and attributes">file</A>, <A HREF="../TclLib/Access.htm" TITLE="Tcl_Access, Tcl_Stat - check file permissions and other attributes">Access</A>, <A HREF="../TclLib/FileSystem.htm" TITLE="Tcl_FSRegister, Tcl_FSUnregister, Tcl_FSData, Tcl_FSMountsChanged, Tcl_FSGetFileSystemForPath, Tcl_FSGetPathType, Tcl_FSCopyFile, Tcl_FSCopyDirectory, Tcl_FSCreateDirectory, Tcl_FSDeleteFile, Tcl_FSRemoveDirectory, Tcl_FSRenameFile, Tcl_FSListVolumes, Tcl_FSEvalFile, Tcl_FSEvalFileEx, Tcl_FSLoadFile, Tcl_FSUnloadFile, Tcl_FSMatchInDirectory, Tcl_FSLink, Tcl_FSLstat, Tcl_FSUtime, Tcl_FSFileAttrsGet, Tcl_FSFileAttrsSet, Tcl_FSFileAttrStrings, Tcl_FSStat, Tcl_FSAccess, Tcl_FSOpenFileChannel, Tcl_FSGetCwd, Tcl_FSChdir, Tcl_FSPathSeparator, Tcl_FSJoinPath, Tcl_FSSplitPath, Tcl_FSEqualPaths, Tcl_FSGetNormalizedPath, Tcl_FSJoinToPath, Tcl_FSConvertToPathType, Tcl_FSGetInternalRep, Tcl_FSGetTranslatedPath, Tcl_FSGetTranslatedStringPath, Tcl_FSNewNativePath, Tcl_FSGetNativePath, Tcl_FSFileSystemInfo, Tcl_GetAccessTimeFromStat, Tcl_GetBlockSizeFromStat, Tcl_GetBlocksFromStat, Tcl_GetChangeTimeFromStat, Tcl_GetDeviceTypeFromStat, Tcl_GetFSDeviceFromStat, Tcl_GetFSInodeFromStat, Tcl_GetGroupIdFromStat, Tcl_GetLinkCountFromStat, Tcl_GetModeFromStat, Tcl_GetModificationTimeFromStat, Tcl_GetSizeFromStat, Tcl_GetUserIdFromStat, Tcl_AllocStatBuf - procedures to interact with any filesystem">FileSystem</A></DD>
<DT><A NAME="state">state</A></DT>
<DD>
<A HREF="../TkCmd/ttk_widget.htm" TITLE="ttk::widget - Standard options and commands supported by Tk themed widgets">ttk_widget</A>, <A HREF="../TdbcCmd/tdbc_mapSqlState.htm" TITLE="tdbc::mapSqlState - Map SQLSTATE to error class">tdbc_mapSqlState</A>, <A HREF="../TclLib/SaveResult.htm" TITLE="Tcl_SaveInterpState, Tcl_RestoreInterpState, Tcl_DiscardInterpState, Tcl_SaveResult, Tcl_RestoreResult, Tcl_DiscardResult - save and restore an interpreter's state">SaveResult</A></DD>
<DT><A NAME="statement">statement</A></DT>
<DD>
<A HREF="../TdbcCmd/tdbc.htm" TITLE="tdbc - Tcl Database Connectivity">tdbc</A>, <A HREF="../TdbcCmd/tdbc_connection.htm" TITLE="tdbc::connection - TDBC connection object">tdbc_connection</A>, <A HREF="../TdbcCmd/tdbc_resultset.htm" TITLE="tdbc::resultset - TDBC result set object">tdbc_resultset</A>, <A HREF="../TdbcCmd/tdbc_statement.htm" TITLE="tdbc::statement - TDBC statement object">tdbc_statement</A></DD>
<DT><A NAME="static linking">static linking</A></DT>
<DD>
<A HREF="../TclLib/StaticPkg.htm" TITLE="Tcl_StaticPackage - make a statically linked package available via the 'load' command">StaticPkg</A></DD>
<DT><A NAME="sticky">sticky</A></DT>
<DD>
<A HREF="../TkLib/ttk_Geometry.htm" TITLE="Ttk_MakeBox, Ttk_PadBox, Ttk_ExpandBox, Ttk_PackBox, Ttk_StickBox, Ttk_PlaceBox, Ttk_BoxContains, Ttk_MakePadding, Ttk_UniformPadding, Ttk_AddPadding, Ttk_RelievePadding, Ttk_GetPaddingFromObj, Ttk_GetBorderFromObj, Ttk_GetStickyFromObj - Tk themed geometry utilities">ttk_Geometry</A></DD>
<DT><A NAME="stipple">stipple</A></DT>
<DD>
<A HREF="../TkLib/CanvPsY.htm" TITLE="Tk_CanvasPsY, Tk_CanvasPsBitmap, Tk_CanvasPsColor, Tk_CanvasPsFont, Tk_CanvasPsPath, Tk_CanvasPsStipple - utility procedures for generating Postscript for canvases">CanvPsY</A></DD>
<DT><A NAME="storage">storage</A></DT>
<DD>
<A HREF="../TclLib/Preserve.htm" TITLE="Tcl_Preserve, Tcl_Release, Tcl_EventuallyFree - avoid freeing storage while it is being used">Preserve</A></DD>
<DT><A NAME="stored procedure">stored procedure</A></DT>
<DD>
<A HREF="../TdbcCmd/tdbc_resultset.htm" TITLE="tdbc::resultset - TDBC result set object">tdbc_resultset</A>, <A HREF="../TdbcCmd/tdbc_statement.htm" TITLE="tdbc::statement - TDBC statement object">tdbc_statement</A></DD>
<DT><A NAME="string">string</A></DT>
<DD>
<A HREF="../TclCmd/format.htm" TITLE="format - Format a string in the style of sprintf">format</A>, <A HREF="../TclCmd/lsearch.htm" TITLE="lsearch - See if a list contains a particular element">lsearch</A>, <A HREF="../TclCmd/re_syntax.htm" TITLE="re_syntax - Syntax of Tcl regular expressions">re_syntax</A>, <A HREF="../TclCmd/regexp.htm" TITLE="regexp - Match a regular expression against a string">regexp</A>, <A HREF="../TclCmd/split.htm" TITLE="split - Split a string into a proper Tcl list">split</A>, <A HREF="../TclCmd/string.htm" TITLE="string - Manipulate strings">string</A>, <A HREF="../TclLib/ExprLong.htm" TITLE="Tcl_ExprLong, Tcl_ExprDouble, Tcl_ExprBoolean, Tcl_ExprString - evaluate an expression">ExprLong</A>, <A HREF="../TclLib/ExprLongObj.htm" TITLE="Tcl_ExprLongObj, Tcl_ExprDoubleObj, Tcl_ExprBooleanObj, Tcl_ExprObj - evaluate an expression">ExprLongObj</A>, <A HREF="../TclLib/LinkVar.htm" TITLE="Tcl_LinkVar, Tcl_UnlinkVar, Tcl_UpdateLinkedVar - link Tcl variable to C variable">LinkVar</A>, <A HREF="../TclLib/PrintDbl.htm" TITLE="Tcl_PrintDouble - Convert floating value to string">PrintDbl</A>, <A HREF="../TclLib/RegExp.htm" TITLE="Tcl_RegExpMatch, Tcl_RegExpCompile, Tcl_RegExpExec, Tcl_RegExpRange, Tcl_GetRegExpFromObj, Tcl_RegExpMatchObj, Tcl_RegExpExecObj, Tcl_RegExpGetInfo - Pattern matching with regular expressions">RegExp</A>, <A HREF="../TclLib/StrMatch.htm" TITLE="Tcl_StringMatch, Tcl_StringCaseMatch - test whether a string matches a pattern">StrMatch</A>, <A HREF="../TkLib/GetJustify.htm" TITLE="Tk_GetJustifyFromObj, Tk_GetJustify, Tk_NameOfJustify - translate between strings and justification styles">GetJustify</A>, <A HREF="../TkLib/GetRelief.htm" TITLE="Tk_GetReliefFromObj, Tk_GetRelief, Tk_NameOfRelief - translate between strings and relief values">GetRelief</A></DD>
<DT><A NAME="string representation">string representation</A></DT>
<DD>
<A HREF="../TclLib/DoubleObj.htm" TITLE="Tcl_NewDoubleObj, Tcl_SetDoubleObj, Tcl_GetDoubleFromObj - manipulate Tcl values as floating-point values">DoubleObj</A>, <A HREF="../TclLib/IntObj.htm" TITLE="Tcl_NewIntObj, Tcl_NewLongObj, Tcl_NewWideIntObj, Tcl_SetIntObj, Tcl_SetLongObj, Tcl_SetWideIntObj, Tcl_GetIntFromObj, Tcl_GetLongFromObj, Tcl_GetWideIntFromObj, Tcl_NewBignumObj, Tcl_SetBignumObj, Tcl_GetBignumFromObj, Tcl_TakeBignumFromObj - manipulate Tcl values as integers">IntObj</A>, <A HREF="../TclLib/ListObj.htm" TITLE="Tcl_ListObjAppendList, Tcl_ListObjAppendElement, Tcl_NewListObj, Tcl_SetListObj, Tcl_ListObjGetElements, Tcl_ListObjLength, Tcl_ListObjIndex, Tcl_ListObjReplace - manipulate Tcl values as lists">ListObj</A>, <A HREF="../TclLib/Object.htm" TITLE="Tcl_NewObj, Tcl_DuplicateObj, Tcl_IncrRefCount, Tcl_DecrRefCount, Tcl_IsShared, Tcl_InvalidateStringRep - manipulate Tcl values">Object</A>, <A HREF="../TclLib/ObjectType.htm" TITLE="Tcl_RegisterObjType, Tcl_GetObjType, Tcl_AppendAllObjTypes, Tcl_ConvertToType  - manipulate Tcl value types">ObjectType</A>, <A HREF="../TclLib/StringObj.htm" TITLE="Tcl_NewStringObj, Tcl_NewUnicodeObj, Tcl_SetStringObj, Tcl_SetUnicodeObj, Tcl_GetStringFromObj, Tcl_GetString, Tcl_GetUnicodeFromObj, Tcl_GetUnicode, Tcl_GetUniChar, Tcl_GetCharLength, Tcl_GetRange, Tcl_AppendToObj, Tcl_AppendUnicodeToObj, Tcl_AppendObjToObj, Tcl_AppendStringsToObj, Tcl_AppendStringsToObjVA, Tcl_AppendLimitedToObj, Tcl_Format, Tcl_AppendFormatToObj, Tcl_ObjPrintf, Tcl_AppendPrintfToObj, Tcl_SetObjLength, Tcl_AttemptSetObjLength, Tcl_ConcatObj - manipulate Tcl values as strings">StringObj</A></DD>
<DT><A NAME="string type">string type</A></DT>
<DD>
<A HREF="../TclLib/StringObj.htm" TITLE="Tcl_NewStringObj, Tcl_NewUnicodeObj, Tcl_SetStringObj, Tcl_SetUnicodeObj, Tcl_GetStringFromObj, Tcl_GetString, Tcl_GetUnicodeFromObj, Tcl_GetUnicode, Tcl_GetUniChar, Tcl_GetCharLength, Tcl_GetRange, Tcl_AppendToObj, Tcl_AppendUnicodeToObj, Tcl_AppendObjToObj, Tcl_AppendStringsToObj, Tcl_AppendStringsToObjVA, Tcl_AppendLimitedToObj, Tcl_Format, Tcl_AppendFormatToObj, Tcl_ObjPrintf, Tcl_AppendPrintfToObj, Tcl_SetObjLength, Tcl_AttemptSetObjLength, Tcl_ConcatObj - manipulate Tcl values as strings">StringObj</A></DD>
<DT><A NAME="string value">string value</A></DT>
<DD>
<A HREF="../TclLib/StringObj.htm" TITLE="Tcl_NewStringObj, Tcl_NewUnicodeObj, Tcl_SetStringObj, Tcl_SetUnicodeObj, Tcl_GetStringFromObj, Tcl_GetString, Tcl_GetUnicodeFromObj, Tcl_GetUnicode, Tcl_GetUniChar, Tcl_GetCharLength, Tcl_GetRange, Tcl_AppendToObj, Tcl_AppendUnicodeToObj, Tcl_AppendObjToObj, Tcl_AppendStringsToObj, Tcl_AppendStringsToObjVA, Tcl_AppendLimitedToObj, Tcl_Format, Tcl_AppendFormatToObj, Tcl_ObjPrintf, Tcl_AppendPrintfToObj, Tcl_SetObjLength, Tcl_AttemptSetObjLength, Tcl_ConcatObj - manipulate Tcl values as strings">StringObj</A></DD>
<DT><A NAME="strings">strings</A></DT>
<DD>
<A HREF="../TclLib/Concat.htm" TITLE="Tcl_Concat - concatenate a collection of strings">Concat</A>, <A HREF="../TclLib/SplitList.htm" TITLE="Tcl_SplitList, Tcl_Merge, Tcl_ScanElement, Tcl_ConvertElement, Tcl_ScanCountedElement, Tcl_ConvertCountedElement - manipulate Tcl lists">SplitList</A></DD>
<DT><A NAME="stubs">stubs</A></DT>
<DD>
<A HREF="../TclLib/InitStubs.htm" TITLE="Tcl_InitStubs - initialize the Tcl stubs mechanism">InitStubs</A>, <A HREF="../TkLib/TkInitStubs.htm" TITLE="Tk_InitStubs - initialize the Tk stubs mechanism">TkInitStubs</A></DD>
<DT><A NAME="style">style</A></DT>
<DD>
<A HREF="../TkCmd/ttk_image.htm" TITLE="ttk_image - Define an element based on an image">ttk_image</A>, <A HREF="../TkCmd/ttk_style.htm" TITLE="ttk::style - Manipulate style database">ttk_style</A>, <A HREF="../TkCmd/ttk_vsapi.htm" TITLE="ttk_vsapi - Define a Microsoft Visual Styles element">ttk_vsapi</A></DD>
<DT><A NAME="subexpression">subexpression</A></DT>
<DD>
<A HREF="../TclLib/RegExp.htm" TITLE="Tcl_RegExpMatch, Tcl_RegExpCompile, Tcl_RegExpExec, Tcl_RegExpRange, Tcl_GetRegExpFromObj, Tcl_RegExpMatchObj, Tcl_RegExpExecObj, Tcl_RegExpGetInfo - Pattern matching with regular expressions">RegExp</A></DD>
<DT><A NAME="sublist">sublist</A></DT>
<DD>
<A HREF="../TclCmd/lrange.htm" TITLE="lrange - Return one or more adjacent elements from a list">lrange</A></DD>
<DT><A NAME="subprocess">subprocess</A></DT>
<DD>
<A HREF="../TclCmd/exec.htm" TITLE="exec - Invoke subprocesses">exec</A>, <A HREF="../TclCmd/tclvars.htm" TITLE="argc, argv, argv0, auto_path, env, errorCode, errorInfo, tcl_interactive, tcl_library, tcl_nonwordchars, tcl_patchLevel, tcl_pkgPath, tcl_platform, tcl_precision, tcl_rcFileName, tcl_traceCompile, tcl_traceEval, tcl_wordchars, tcl_version - Variables used by Tcl">tclvars</A></DD>
<DT><A NAME="substitution">substitution</A></DT>
<DD>
<A HREF="../TclCmd/format.htm" TITLE="format - Format a string in the style of sprintf">format</A>, <A HREF="../TclCmd/regsub.htm" TITLE="regsub - Perform substitutions based on regular expression pattern matching">regsub</A>, <A HREF="../TclCmd/subst.htm" TITLE="subst - Perform backslash, command, and variable substitutions">subst</A>, <A HREF="../TclCmd/Tcl.htm" TITLE="Tcl - Tool Command Language">Tcl</A></DD>
<DT><A NAME="switch">switch</A></DT>
<DD>
<A HREF="../TclCmd/switch.htm" TITLE="switch - Evaluate one of several scripts, depending on a given value">switch</A>, <A HREF="../TkCmd/options.htm" TITLE="options - Standard options supported by widgets">options</A></DD>
<DT><A NAME="synchronization">synchronization</A></DT>
<DD>
<A HREF="../ThreadCmd/thread.htm" TITLE="thread - Extension for script access to Tcl threading">thread</A>, <A HREF="../ThreadCmd/tsv.htm" TITLE="tsv -
Part of the Tcl threading extension allowing script level
manipulation of data shared between threads.">tsv</A></DD>
<DT><A NAME="synonym">synonym</A></DT>
<DD>
<A HREF="../TkLib/ConfigWidg.htm" TITLE="Tk_ConfigureWidget, Tk_ConfigureInfo, Tk_ConfigureValue, Tk_FreeOptions - process configuration options for widgets">ConfigWidg</A>, <A HREF="../TkLib/SetOptions.htm" TITLE="Tk_CreateOptionTable, Tk_DeleteOptionTable, Tk_InitOptions, Tk_SetOptions, Tk_FreeSavedOptions, Tk_RestoreSavedOptions, Tk_GetOptionValue,  Tk_GetOptionInfo, Tk_FreeConfigOptions, Tk_Offset - process configuration options">SetOptions</A></DD>
</DL>
<div class="copy">Copyright &copy; 1989-1994 The Regents of the University of California
Copyright &copy; 1992-1999 Karl Lehenbauer &amp; Mark Diekhans
Copyright &copy; 1992-1999 Karl Lehenbauer and Mark Diekhans
Copyright &copy; 1993-1997 Bell Labs Innovations for Lucent Technologies
Copyright &copy; 1993-1998 Lucent Technologies, Inc
Copyright &copy; 1994 The Australian National University
Copyright &copy; 1994-2000 Sun Microsystems, Inc
Copyright &copy; 1997-2000 Ajuba Solutions
Copyright &copy; 1997-2000 Scriptics Corporation
Copyright &copy; 1998 Mark Harrison
Copyright &copy; 2000 Jeffrey Hobbs
Copyright &copy; 2001 ActiveState Tool Corp
Copyright &copy; 2001 Vincent Darley
Copyright &copy; 2001-2004 ActiveState Corporation
Copyright &copy; 2001-2005 Kevin B. Kenny &lt;kennykb(at)acm.org&gt;
Copyright &copy; 2001-2012 Donal K. Fellows
Copyright &copy; 2002-2010 Andreas Kupries &lt;andreas_kupries(at)users.sourceforge.net&gt;
Copyright &copy; 2003 George Petasis &lt;petasis(at)iit.demokritos.gr&gt;
Copyright &copy; 2003 Simon Geard
Copyright &copy; 2003-2006 Joe English
Copyright &copy; 2006 Miguel Sofer
Copyright &copy; 2006-2008 ActiveState Software Inc
Copyright &copy; 2006-2008 Daniel A. Steffen &lt;das(at)users.sourceforge.net&gt;
Copyright &copy; 2006-2008 Joe Mistachkin
Copyright &copy; 2008 Arnulf Widemann
Copyright &copy; 2008 Arnulf Wiedemann
Copyright &copy; 2008 Jos Decoster
Copyright &copy; 2008 Pat Thoyts
Copyright &copy; 2008 Peter Spjuth &lt;pspjuth(at)users.sourceforge.net&gt;
Copyright &copy; 2008-2010 Kevin B. Kenny
Copyright &copy; 2011 Kevin Walzer
Copyright &copy; 2012 Trevor Davel
</div>
</BODY></HTML>
