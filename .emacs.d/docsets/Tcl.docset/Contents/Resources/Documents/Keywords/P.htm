<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD><TITLE>Tcl/Tk Keywords - P</TITLE>
<link rel="stylesheet" href="../docs.css" type="text/css" media="all">
</HEAD>
<BODY><H2><a href="../contents.htm">Tcl8.6.0/Tk8.6.0 Documentation</a> <small>&gt;</small> Tcl/Tk Keywords - P</H2>
<H3><A HREF="../UserCmd/contents.htm">Tcl/Tk Applications</A> | <A HREF="../TclCmd/contents.htm">Tcl Commands</A> | <A HREF="../TkCmd/contents.htm">Tk Commands</A> | <A HREF="../ItclCmd/contents.htm">[incr Tcl] Package Commands</A> | <A HREF="../Sqlite3Cmd/contents.htm">SQLite Package Commands</A> | <A HREF="../TdbcCmd/contents.htm">TDBC Package Commands</A> | <A HREF="../TdbcmysqlCmd/contents.htm">tdbc::mysql Package Commands</A> | <A HREF="../TdbcodbcCmd/contents.htm">tdbc::odbc Package Commands</A> | <A HREF="../TdbcpostgresCmd/contents.htm">tdbc::postgres Package Commands</A> | <A HREF="../Tdbcsqlite3Cmd/contents.htm">tdbc::sqlite3 Package Commands</A> | <A HREF="../ThreadCmd/contents.htm">Thread Package Commands</A> | <A HREF="../TclLib/contents.htm">Tcl C API</A> | <A HREF="../TkLib/contents.htm">Tk C API</A> | <A HREF="../ItclLib/contents.htm">[incr Tcl] Package C API</A> | <A HREF="../TdbcLib/contents.htm">TDBC Package C API</A></H3>
<H3><A HREF="A.htm">A</A> |
<A HREF="B.htm">B</A> |
<A HREF="C.htm">C</A> |
<A HREF="D.htm">D</A> |
<A HREF="E.htm">E</A> |
<A HREF="F.htm">F</A> |
<A HREF="G.htm">G</A> |
<A HREF="H.htm">H</A> |
<A HREF="I.htm">I</A> |
<A HREF="J.htm">J</A> |
<A HREF="K.htm">K</A> |
<A HREF="L.htm">L</A> |
<A HREF="M.htm">M</A> |
<A HREF="N.htm">N</A> |
<A HREF="O.htm">O</A> |
<A HREF="P.htm">P</A> |
<A HREF="Q.htm">Q</A> |
<A HREF="R.htm">R</A> |
<A HREF="S.htm">S</A> |
<A HREF="T.htm">T</A> |
<A HREF="U.htm">U</A> |
<A HREF="V.htm">V</A> |
<A HREF="W.htm">W</A> |
<A HREF="X.htm">X</A> |
<A HREF="Y.htm">Y</A> |
<A HREF="Z.htm">Z</A></H3>
<DL class="keylist">
<DT><A NAME="pack">pack</A></DT>
<DD>
<A HREF="../TkCmd/grid.htm" TITLE="grid - Geometry manager that arranges widgets in a grid">grid</A></DD>
<DT><A NAME="package">package</A></DT>
<DD>
<A HREF="../TclCmd/package.htm" TITLE="package - Facilities for package loading and version control">package</A>, <A HREF="../TclCmd/packagens.htm" TITLE="pkg::create - Construct an appropriate 'package ifneeded' command for a given package specification">packagens</A>, <A HREF="../TclCmd/pkgMkIndex.htm" TITLE="pkg_mkIndex - Build an index for automatic loading of packages">pkgMkIndex</A>, <A HREF="../TclCmd/tm.htm" TITLE="tm - Facilities for locating and loading of Tcl Modules">tm</A>, <A HREF="../TclLib/PkgRequire.htm" TITLE="Tcl_PkgRequire, Tcl_PkgRequireEx, Tcl_PkgRequireProc, Tcl_PkgPresent, Tcl_PkgPresentEx, Tcl_PkgProvide, Tcl_PkgProvideEx - package version control">PkgRequire</A>, <A HREF="../TclLib/StaticPkg.htm" TITLE="Tcl_StaticPackage - make a statically linked package available via the 'load' command">StaticPkg</A></DD>
<DT><A NAME="packer">packer</A></DT>
<DD>
<A HREF="../TkCmd/pack.htm" TITLE="pack - Geometry manager that packs around edges of cavity">pack</A></DD>
<DT><A NAME="padding">padding</A></DT>
<DD>
<A HREF="../TkLib/ttk_Geometry.htm" TITLE="Ttk_MakeBox, Ttk_PadBox, Ttk_ExpandBox, Ttk_PackBox, Ttk_StickBox, Ttk_PlaceBox, Ttk_BoxContains, Ttk_MakePadding, Ttk_UniformPadding, Ttk_AddPadding, Ttk_RelievePadding, Ttk_GetPaddingFromObj, Ttk_GetBorderFromObj, Ttk_GetStickyFromObj - Tk themed geometry utilities">ttk_Geometry</A></DD>
<DT><A NAME="palette">palette</A></DT>
<DD>
<A HREF="../TkCmd/palette.htm" TITLE="tk_setPalette, tk_bisque - Modify the Tk color palette">palette</A></DD>
<DT><A NAME="pane">pane</A></DT>
<DD>
<A HREF="../TkCmd/ttk_notebook.htm" TITLE="ttk::notebook - Multi-paned container widget">ttk_notebook</A></DD>
<DT><A NAME="panedwindow">panedwindow</A></DT>
<DD>
<A HREF="../TkCmd/panedwindow.htm" TITLE="panedwindow - Create and manipulate panedwindow widgets">panedwindow</A></DD>
<DT><A NAME="parcel">parcel</A></DT>
<DD>
<A HREF="../TkCmd/pack.htm" TITLE="pack - Geometry manager that packs around edges of cavity">pack</A></DD>
<DT><A NAME="parent">parent</A></DT>
<DD>
<A HREF="../TkCmd/winfo.htm" TITLE="winfo - Return window-related information">winfo</A>, <A HREF="../TkLib/MaintGeom.htm" TITLE="Tk_MaintainGeometry, Tk_UnmaintainGeometry - maintain geometry of one window relative to another">MaintGeom</A></DD>
<DT><A NAME="parse">parse</A></DT>
<DD>
<A HREF="../TclCmd/scan.htm" TITLE="scan - Parse string using conversion specifiers in the style of sscanf">scan</A>, <A HREF="../TclLib/Backslash.htm" TITLE="Tcl_Backslash - parse a backslash sequence">Backslash</A>, <A HREF="../TclLib/ParseArgs.htm" TITLE="Tcl_ParseArgsObjv - parse arguments according to a tabular description">ParseArgs</A>, <A HREF="../TclLib/ParseCmd.htm" TITLE="Tcl_ParseCommand, Tcl_ParseExpr, Tcl_ParseBraces, Tcl_ParseQuotedString, Tcl_ParseVarName, Tcl_ParseVar, Tcl_FreeParse, Tcl_EvalTokens, Tcl_EvalTokensStandard - parse Tcl scripts and expressions">ParseCmd</A>, <A HREF="../TkLib/GetScroll.htm" TITLE="Tk_GetScrollInfoObj, Tk_GetScrollInfo - parse arguments for scrolling commands">GetScroll</A></DD>
<DT><A NAME="parsing">parsing</A></DT>
<DD>
<A HREF="../TclCmd/regexp.htm" TITLE="regexp - Match a regular expression against a string">regexp</A></DD>
<DT><A NAME="part">part</A></DT>
<DD>
<A HREF="../ItclCmd/ensemble.htm" TITLE="itcl::ensemble - create or modify a composite command">ensemble</A></DD>
<DT><A NAME="partial command">partial command</A></DT>
<DD>
<A HREF="../TclLib/CmdCmplt.htm" TITLE="Tcl_CommandComplete - Check for unmatched braces in a Tcl command">CmdCmplt</A></DD>
<DT><A NAME="patchlevel">patchlevel</A></DT>
<DD>
<A HREF="../TclLib/GetVersion.htm" TITLE="Tcl_GetVersion - get the version of the library at runtime">GetVersion</A></DD>
<DT><A NAME="path">path</A></DT>
<DD>
<A HREF="../TclLib/SplitPath.htm" TITLE="Tcl_SplitPath, Tcl_JoinPath, Tcl_GetPathType - manipulate platform-dependent file paths">SplitPath</A>, <A HREF="../TkLib/CanvPsY.htm" TITLE="Tk_CanvasPsY, Tk_CanvasPsBitmap, Tk_CanvasPsColor, Tk_CanvasPsFont, Tk_CanvasPsPath, Tk_CanvasPsStipple - utility procedures for generating Postscript for canvases">CanvPsY</A></DD>
<DT><A NAME="path name">path name</A></DT>
<DD>
<A HREF="../TkCmd/winfo.htm" TITLE="winfo - Return window-related information">winfo</A>, <A HREF="../TkLib/Name.htm" TITLE="Tk_Name, Tk_PathName, Tk_NameToWindow - convert between names and window tokens">Name</A></DD>
<DT><A NAME="pattern">pattern</A></DT>
<DD>
<A HREF="../TclCmd/glob.htm" TITLE="glob - Return names of files that match patterns">glob</A>, <A HREF="../TclCmd/lsearch.htm" TITLE="lsearch - See if a list contains a particular element">lsearch</A>, <A HREF="../TclCmd/regexp.htm" TITLE="regexp - Match a regular expression against a string">regexp</A>, <A HREF="../TclCmd/regsub.htm" TITLE="regsub - Perform substitutions based on regular expression pattern matching">regsub</A>, <A HREF="../TclCmd/string.htm" TITLE="string - Manipulate strings">string</A>, <A HREF="../TclLib/RegExp.htm" TITLE="Tcl_RegExpMatch, Tcl_RegExpCompile, Tcl_RegExpExec, Tcl_RegExpRange, Tcl_GetRegExpFromObj, Tcl_RegExpMatchObj, Tcl_RegExpExecObj, Tcl_RegExpGetInfo - Pattern matching with regular expressions">RegExp</A>, <A HREF="../TclLib/StrMatch.htm" TITLE="Tcl_StringMatch, Tcl_StringCaseMatch - test whether a string matches a pattern">StrMatch</A></DD>
<DT><A NAME="permissions">permissions</A></DT>
<DD>
<A HREF="../TclCmd/open.htm" TITLE="open - Open a file-based or command pipeline channel">open</A>, <A HREF="../TclLib/GetOpnFl.htm" TITLE="Tcl_GetOpenFile - Return a FILE* for a channel registered in the given interpreter (Unix only)">GetOpnFl</A></DD>
<DT><A NAME="photo">photo</A></DT>
<DD>
<A HREF="../TkCmd/photo.htm" TITLE="photo - Full-color images">photo</A>, <A HREF="../TkLib/FindPhoto.htm" TITLE="Tk_FindPhoto, Tk_PhotoPutBlock, Tk_PhotoPutZoomedBlock, Tk_PhotoGetImage, Tk_PhotoBlank, Tk_PhotoExpand, Tk_PhotoGetSize, Tk_PhotoSetSize - manipulate the image data stored in a photo image.">FindPhoto</A></DD>
<DT><A NAME="photo image">photo image</A></DT>
<DD>
<A HREF="../TkLib/CrtPhImgFmt.htm" TITLE="Tk_CreatePhotoImageFormat - define new file format for photo images">CrtPhImgFmt</A></DD>
<DT><A NAME="pipeline">pipeline</A></DT>
<DD>
<A HREF="../TclCmd/exec.htm" TITLE="exec - Invoke subprocesses">exec</A>, <A HREF="../TclCmd/open.htm" TITLE="open - Open a file-based or command pipeline channel">open</A>, <A HREF="../TclCmd/pid.htm" TITLE="pid - Retrieve process identifiers">pid</A>, <A HREF="../TclLib/GetOpnFl.htm" TITLE="Tcl_GetOpenFile - Return a FILE* for a channel registered in the given interpreter (Unix only)">GetOpnFl</A></DD>
<DT><A NAME="pixel">pixel</A></DT>
<DD>
<A HREF="../TkLib/ConfigWind.htm" TITLE="Tk_ConfigureWindow, Tk_MoveWindow, Tk_ResizeWindow, Tk_MoveResizeWindow, Tk_SetWindowBorderWidth, Tk_ChangeWindowAttributes, Tk_SetWindowBackground, Tk_SetWindowBackgroundPixmap, Tk_SetWindowBorder, Tk_SetWindowBorderPixmap, Tk_SetWindowColormap, Tk_DefineCursor, Tk_UndefineCursor - change window configuration or attributes">ConfigWind</A></DD>
<DT><A NAME="pixel value">pixel value</A></DT>
<DD>
<A HREF="../TkLib/GetColor.htm" TITLE="Tk_AllocColorFromObj, Tk_GetColor, Tk_GetColorFromObj, Tk_GetColorByValue, Tk_NameOfColor, Tk_FreeColorFromObj, Tk_FreeColor - maintain database of colors">GetColor</A></DD>
<DT><A NAME="pixels">pixels</A></DT>
<DD>
<A HREF="../TkLib/ConfigWidg.htm" TITLE="Tk_ConfigureWidget, Tk_ConfigureInfo, Tk_ConfigureValue, Tk_FreeOptions - process configuration options for widgets">ConfigWidg</A>, <A HREF="../TkLib/GetPixels.htm" TITLE="Tk_GetPixelsFromObj, Tk_GetPixels, Tk_GetMMFromObj, Tk_GetScreenMM - translate between strings and screen units">GetPixels</A>, <A HREF="../TkLib/SetOptions.htm" TITLE="Tk_CreateOptionTable, Tk_DeleteOptionTable, Tk_InitOptions, Tk_SetOptions, Tk_FreeSavedOptions, Tk_RestoreSavedOptions, Tk_GetOptionValue,  Tk_GetOptionInfo, Tk_FreeConfigOptions, Tk_Offset - process configuration options">SetOptions</A></DD>
<DT><A NAME="pixmap">pixmap</A></DT>
<DD>
<A HREF="../TkLib/ConfigWind.htm" TITLE="Tk_ConfigureWindow, Tk_MoveWindow, Tk_ResizeWindow, Tk_MoveResizeWindow, Tk_SetWindowBorderWidth, Tk_ChangeWindowAttributes, Tk_SetWindowBackground, Tk_SetWindowBackgroundPixmap, Tk_SetWindowBorder, Tk_SetWindowBorderPixmap, Tk_SetWindowColormap, Tk_DefineCursor, Tk_UndefineCursor - change window configuration or attributes">ConfigWind</A>, <A HREF="../TkLib/GetBitmap.htm" TITLE="Tk_AllocBitmapFromObj, Tk_GetBitmap, Tk_GetBitmapFromObj, Tk_DefineBitmap, Tk_NameOfBitmap, Tk_SizeOfBitmap, Tk_FreeBitmapFromObj, Tk_FreeBitmap - maintain database of single-plane pixmaps">GetBitmap</A>, <A HREF="../TkLib/GetPixmap.htm" TITLE="Tk_GetPixmap, Tk_FreePixmap - allocate and free pixmaps">GetPixmap</A></DD>
<DT><A NAME="pixmap theme">pixmap theme</A></DT>
<DD>
<A HREF="../TkCmd/ttk_image.htm" TITLE="ttk_image - Define an element based on an image">ttk_image</A></DD>
<DT><A NAME="place">place</A></DT>
<DD>
<A HREF="../TkCmd/place.htm" TITLE="place - Geometry manager for fixed or rubber-sheet placement">place</A></DD>
<DT><A NAME="platform">platform</A></DT>
<DD>
<A HREF="../TclCmd/fconfigure.htm" TITLE="fconfigure - Set and get options on a channel">fconfigure</A>, <A HREF="../TclCmd/platform.htm" TITLE="platform - System identification support code and utilities">platform</A>, <A HREF="../TclCmd/platform_shell.htm" TITLE="platform::shell - System identification support code and utilities">platform_shell</A></DD>
<DT><A NAME="platform-specific">platform-specific</A></DT>
<DD>
<A HREF="../TkCmd/chooseDirectory.htm" TITLE="tk_chooseDirectory - pops up a dialog box for the user to select a directory.">chooseDirectory</A></DD>
<DT><A NAME="pointer events">pointer events</A></DT>
<DD>
<A HREF="../TkCmd/busy.htm" TITLE="busy - confine pointer and keyboard events to a window sub-tree">busy</A>, <A HREF="../TkCmd/grab.htm" TITLE="grab - Confine pointer and keyboard events to a window sub-tree">grab</A></DD>
<DT><A NAME="points">points</A></DT>
<DD>
<A HREF="../TkLib/GetPixels.htm" TITLE="Tk_GetPixelsFromObj, Tk_GetPixels, Tk_GetMMFromObj, Tk_GetScreenMM - translate between strings and screen units">GetPixels</A></DD>
<DT><A NAME="polygon">polygon</A></DT>
<DD>
<A HREF="../TkLib/3DBorder.htm" TITLE="Tk_Alloc3DBorderFromObj, Tk_Get3DBorder, Tk_Get3DBorderFromObj, Tk_Draw3DRectangle, Tk_Fill3DRectangle, Tk_Draw3DPolygon, Tk_Fill3DPolygon, Tk_3DVerticalBevel, Tk_3DHorizontalBevel, Tk_SetBackgroundFromBorder, Tk_NameOf3DBorder, Tk_3DBorderColor, Tk_3DBorderGC, Tk_Free3DBorderFromObj, Tk_Free3DBorder - draw borders with three-dimensional appearance">3DBorder</A></DD>
<DT><A NAME="popup">popup</A></DT>
<DD>
<A HREF="../TkCmd/popup.htm" TITLE="tk_popup - Post a popup menu">popup</A></DD>
<DT><A NAME="portability">portability</A></DT>
<DD>
<A HREF="../TclCmd/filename.htm" TITLE="filename - File name conventions supported by Tcl commands">filename</A></DD>
<DT><A NAME="position">position</A></DT>
<DD>
<A HREF="../TkCmd/wm.htm" TITLE="wm - Communicate with window manager">wm</A>, <A HREF="../TkLib/MaintGeom.htm" TITLE="Tk_MaintainGeometry, Tk_UnmaintainGeometry - maintain geometry of one window relative to another">MaintGeom</A>, <A HREF="../TkLib/MoveToplev.htm" TITLE="Tk_MoveToplevelWindow - Adjust the position of a top-level window">MoveToplev</A></DD>
<DT><A NAME="POSIX">POSIX</A></DT>
<DD>
<A HREF="../TclCmd/tclvars.htm" TITLE="argc, argv, argv0, auto_path, env, errorCode, errorInfo, tcl_interactive, tcl_library, tcl_nonwordchars, tcl_patchLevel, tcl_pkgPath, tcl_platform, tcl_precision, tcl_rcFileName, tcl_traceCompile, tcl_traceEval, tcl_wordchars, tcl_version - Variables used by Tcl">tclvars</A></DD>
<DT><A NAME="Postgres">Postgres</A></DT>
<DD>
<A HREF="../TdbcpostgresCmd/tdbc_postgres.htm" TITLE="tdbc::postgres - TDBC-POSTGRES bridge">tdbc_postgres</A></DD>
<DT><A NAME="Postscript">Postscript</A></DT>
<DD>
<A HREF="../TkLib/CanvPsY.htm" TITLE="Tk_CanvasPsY, Tk_CanvasPsBitmap, Tk_CanvasPsColor, Tk_CanvasPsFont, Tk_CanvasPsPath, Tk_CanvasPsStipple - utility procedures for generating Postscript for canvases">CanvPsY</A>, <A HREF="../TkLib/FontId.htm" TITLE="Tk_FontId, Tk_GetFontMetrics, Tk_PostscriptFontName - accessor functions for 
fonts">FontId</A></DD>
<DT><A NAME="precision">precision</A></DT>
<DD>
<A HREF="../TclCmd/tclvars.htm" TITLE="argc, argv, argv0, auto_path, env, errorCode, errorInfo, tcl_interactive, tcl_library, tcl_nonwordchars, tcl_patchLevel, tcl_pkgPath, tcl_platform, tcl_precision, tcl_rcFileName, tcl_traceCompile, tcl_traceEval, tcl_wordchars, tcl_version - Variables used by Tcl">tclvars</A></DD>
<DT><A NAME="prefix">prefix</A></DT>
<DD>
<A HREF="../TclCmd/prefix.htm" TITLE="tcl::prefix - facilities for prefix matching">prefix</A>, <A HREF="../TclCmd/refchan.htm" TITLE="refchan - command handler API of reflected channels">refchan</A>, <A HREF="../TclCmd/transchan.htm" TITLE="transchan - command handler API of channel transforms">transchan</A></DD>
<DT><A NAME="present">present</A></DT>
<DD>
<A HREF="../TclLib/PkgRequire.htm" TITLE="Tcl_PkgRequire, Tcl_PkgRequireEx, Tcl_PkgRequireProc, Tcl_PkgPresent, Tcl_PkgPresentEx, Tcl_PkgProvide, Tcl_PkgProvideEx - package version control">PkgRequire</A></DD>
<DT><A NAME="priority">priority</A></DT>
<DD>
<A HREF="../TkCmd/option.htm" TITLE="option - Add/retrieve window options to/from the option database">option</A></DD>
<DT><A NAME="private">private</A></DT>
<DD>
<A HREF="../ItclCmd/code.htm" TITLE="itcl::code - capture the namespace context for a code fragment">code</A></DD>
<DT><A NAME="private method">private method</A></DT>
<DD>
<A HREF="../TclCmd/my.htm" TITLE="my - invoke any method of current object">my</A></DD>
<DT><A NAME="proc">proc</A></DT>
<DD>
<A HREF="../ItclCmd/delete.htm" TITLE="itcl::delete - delete things in the interpreter">delete</A>, <A HREF="../ItclCmd/itcldelegate.htm" TITLE="itcl::delegation - delegate methods, procs or options to other objects">itcldelegate</A></DD>
<DT><A NAME="procedure">procedure</A></DT>
<DD>
<A HREF="../TclCmd/apply.htm" TITLE="apply - Apply an anonymous function">apply</A>, <A HREF="../TclCmd/global.htm" TITLE="global - Access global variables">global</A>, <A HREF="../TclCmd/info.htm" TITLE="info - Return information about the state of the Tcl interpreter">info</A>, <A HREF="../TclCmd/proc.htm" TITLE="proc - Create a Tcl procedure">proc</A>, <A HREF="../TclCmd/return.htm" TITLE="return - Return from a procedure, or set return code of a script">return</A>, <A HREF="../TclCmd/upvar.htm" TITLE="upvar - Create link to variable in a different stack frame">upvar</A>, <A HREF="../TclCmd/variable.htm" TITLE="variable - create and initialize a namespace variable">variable</A>, <A HREF="../ItclCmd/body.htm" TITLE="itcl::body - change the body for a class method/proc">body</A>, <A HREF="../ItclCmd/local.htm" TITLE="itcl::local - create an object local to a procedure">local</A></DD>
<DT><A NAME="process">process</A></DT>
<DD>
<A HREF="../TclCmd/exit.htm" TITLE="exit - End the application">exit</A>, <A HREF="../TclCmd/open.htm" TITLE="open - Open a file-based or command pipeline channel">open</A>, <A HREF="../TclLib/DetachPids.htm" TITLE="Tcl_DetachPids, Tcl_ReapDetachedProcs, Tcl_WaitPid - manage child processes in background">DetachPids</A></DD>
<DT><A NAME="process identifier">process identifier</A></DT>
<DD>
<A HREF="../TclCmd/pid.htm" TITLE="pid - Retrieve process identifiers">pid</A></DD>
<DT><A NAME="projecting">projecting</A></DT>
<DD>
<A HREF="../TkLib/GetCapStyl.htm" TITLE="Tk_GetCapStyle, Tk_NameOfCapStyle - translate between strings and cap styles">GetCapStyl</A></DD>
<DT><A NAME="prompt">prompt</A></DT>
<DD>
<A HREF="../UserCmd/tclsh.htm" TITLE="tclsh - Simple shell containing Tcl interpreter">tclsh</A>, <A HREF="../UserCmd/wish.htm" TITLE="wish - Simple windowing shell">wish</A></DD>
<DT><A NAME="propagation">propagation</A></DT>
<DD>
<A HREF="../TkCmd/grid.htm" TITLE="grid - Geometry manager that arranges widgets in a grid">grid</A>, <A HREF="../TkCmd/pack.htm" TITLE="pack - Geometry manager that packs around edges of cavity">pack</A></DD>
<DT><A NAME="protected">protected</A></DT>
<DD>
<A HREF="../ItclCmd/code.htm" TITLE="itcl::code - capture the namespace context for a code fragment">code</A></DD>
<DT><A NAME="provide">provide</A></DT>
<DD>
<A HREF="../TclLib/PkgRequire.htm" TITLE="Tcl_PkgRequire, Tcl_PkgRequireEx, Tcl_PkgRequireProc, Tcl_PkgPresent, Tcl_PkgPresentEx, Tcl_PkgProvide, Tcl_PkgProvideEx - package version control">PkgRequire</A></DD>
<DT><A NAME="public">public</A></DT>
<DD>
<A HREF="../ItclCmd/code.htm" TITLE="itcl::code - capture the namespace context for a code fragment">code</A></DD>
<DT><A NAME="public method">public method</A></DT>
<DD>
<A HREF="../TclCmd/my.htm" TITLE="my - invoke any method of current object">my</A></DD>
<DT><A NAME="pwd">pwd</A></DT>
<DD>
<A HREF="../TclLib/GetCwd.htm" TITLE="Tcl_GetCwd, Tcl_Chdir - manipulate the current working directory">GetCwd</A></DD>
</DL>
<div class="copy">Copyright &copy; 1989-1994 The Regents of the University of California
Copyright &copy; 1992-1999 Karl Lehenbauer &amp; Mark Diekhans
Copyright &copy; 1992-1999 Karl Lehenbauer and Mark Diekhans
Copyright &copy; 1993-1997 Bell Labs Innovations for Lucent Technologies
Copyright &copy; 1993-1998 Lucent Technologies, Inc
Copyright &copy; 1994 The Australian National University
Copyright &copy; 1994-2000 Sun Microsystems, Inc
Copyright &copy; 1997-2000 Ajuba Solutions
Copyright &copy; 1997-2000 Scriptics Corporation
Copyright &copy; 1998 Mark Harrison
Copyright &copy; 2000 Jeffrey Hobbs
Copyright &copy; 2001 ActiveState Tool Corp
Copyright &copy; 2001 Vincent Darley
Copyright &copy; 2001-2004 ActiveState Corporation
Copyright &copy; 2001-2005 Kevin B. Kenny &lt;kennykb(at)acm.org&gt;
Copyright &copy; 2001-2012 Donal K. Fellows
Copyright &copy; 2002-2010 Andreas Kupries &lt;andreas_kupries(at)users.sourceforge.net&gt;
Copyright &copy; 2003 George Petasis &lt;petasis(at)iit.demokritos.gr&gt;
Copyright &copy; 2003 Simon Geard
Copyright &copy; 2003-2006 Joe English
Copyright &copy; 2006 Miguel Sofer
Copyright &copy; 2006-2008 ActiveState Software Inc
Copyright &copy; 2006-2008 Daniel A. Steffen &lt;das(at)users.sourceforge.net&gt;
Copyright &copy; 2006-2008 Joe Mistachkin
Copyright &copy; 2008 Arnulf Widemann
Copyright &copy; 2008 Arnulf Wiedemann
Copyright &copy; 2008 Jos Decoster
Copyright &copy; 2008 Pat Thoyts
Copyright &copy; 2008 Peter Spjuth &lt;pspjuth(at)users.sourceforge.net&gt;
Copyright &copy; 2008-2010 Kevin B. Kenny
Copyright &copy; 2011 Kevin Walzer
Copyright &copy; 2012 Trevor Davel
</div>
</BODY></HTML>
