;;; flycheck-tip-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from error-tip.el

(autoload 'error-tip-error-p "error-tip" "\
Return non-nil if error is occurred in current buffer.
This function can catch error against flycheck, and flymake.")
(autoload 'error-tip-cycle-dwim "error-tip" "\
Showing error function.
This function switches proper error showing function by context.
 (whether flycheck or flymake) The REVERSE option jumps by inverse if
the value is non-nil.

(fn &optional REVERSE)" t)
(autoload 'error-tip-cycle-dwim-reverse "error-tip" "\
Same as ‘error-tip-cycle-dwim’, but it jumps to inverse direction." t)
(register-definition-prefixes "error-tip" '("error-tip-"))


;;; Generated autoloads from flycheck-tip.el

(autoload 'flycheck-tip-cycle "flycheck-tip" "\
Move to next error if it's exists.
If it wasn't exists then move to previous error.
Move to previous error if REVERSE is non-nil.

(fn &optional REVERSE)" t)
(autoload 'flycheck-tip-cycle-reverse "flycheck-tip" "\
Do `flycheck-tip-cycle by reverse order." t)
(autoload 'flycheck-tip--get "flycheck-tip" "\


(fn ELEMENT ERR)")
(register-definition-prefixes "flycheck-tip" '("flycheck-tip-"))


;;; Generated autoloads from flymake-tip.el

(autoload 'flymake-tip-cycle "flymake-tip" "\


(fn REVERSE)" t)
(autoload 'flymake-tip-cycle-reverse "flymake-tip" nil t)
(register-definition-prefixes "flymake-tip" '("flymake-tip--err-info-function"))

;;; End of scraped data

(provide 'flycheck-tip-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; flycheck-tip-autoloads.el ends here
