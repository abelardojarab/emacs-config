;;; taskpaper-mode-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from taskpaper-mode.el

(autoload 'taskpaper-add-entry "taskpaper-mode" "\
Add entry TEXT to LOCATION in FILE.
Prompt the user for entry TEXT and add it as child of the
top-level LOCATION item. The entry is filed below the target
location as a subitem. Depending on the value of
`taskpaper-reverse-note-order', it will be either the first or
last subitem. When the location is omitted, the item is simply
filed at the end of the file, as top-level item. When FILE is
specified, visit it and set this buffer as target buffer,
otherwise fall back to the current buffer.

(fn &optional TEXT LOCATION FILE)" t)
(autoload 'taskpaper-mode "taskpaper-mode" "\
Major mode for editing and querying files in TaskPaper format.
TaskPaper mode is implemented on top of Outline mode. Turning on
TaskPaper mode runs the normal hook `text-mode-hook', and then
`outline-mode-hook' and `taskpaper-mode-hook'.

(fn)" t)
(add-to-list 'auto-mode-alist '("\\.taskpaper\\'" . taskpaper-mode))
(autoload 'taskpaper-agenda-search "taskpaper-mode" "\
Promt for query string and build agenda view." t)
(autoload 'taskpaper-agenda-select "taskpaper-mode" "\
Promts for query selection and build agenda view." t)
(register-definition-prefixes "taskpaper-mode" '("taskpaper-"))

;;; End of scraped data

(provide 'taskpaper-mode-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; taskpaper-mode-autoloads.el ends here
