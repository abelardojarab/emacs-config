;;; eval-in-repl-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from eval-in-repl.el

(register-definition-prefixes "eval-in-repl" '("eir-"))


;;; Generated autoloads from eval-in-repl-cider.el

(autoload 'eir-eval-in-cider "eval-in-repl-cider" "\
eval-in-repl for cider." t)
(register-definition-prefixes "eval-in-repl-cider" '("eir-"))


;;; Generated autoloads from eval-in-repl-elm.el

(autoload 'eir-eval-in-elm "eval-in-repl-elm" "\
Provides eval-in-repl for Elm." t)
(register-definition-prefixes "eval-in-repl-elm" '("eir-send-to-elm"))


;;; Generated autoloads from eval-in-repl-erlang.el

(autoload 'eir-eval-in-erlang "eval-in-repl-erlang" "\
Provides eval-in-repl for Erlang." t)
(register-definition-prefixes "eval-in-repl-erlang" '("eir-send-to-erlang"))


;;; Generated autoloads from eval-in-repl-geiser.el

(autoload 'eir-eval-in-geiser "eval-in-repl-geiser" "\
eval-in-repl for Geiser." t)
(register-definition-prefixes "eval-in-repl-geiser" '("eir-"))


;;; Generated autoloads from eval-in-repl-hy.el

(autoload 'eir-eval-in-hy "eval-in-repl-hy" "\
eval-in-repl for Hy." t)
(register-definition-prefixes "eval-in-repl-hy" '("eir-"))


;;; Generated autoloads from eval-in-repl-ielm.el

(autoload 'eir-eval-in-ielm "eval-in-repl-ielm" "\
eval-in-repl for IELM." t)
(register-definition-prefixes "eval-in-repl-ielm" '("eir-"))


;;; Generated autoloads from eval-in-repl-iex.el

(autoload 'eir-eval-in-iex "eval-in-repl-iex" "\
Provides eval-in-repl for Elixir." t)
(register-definition-prefixes "eval-in-repl-iex" '("eir-send-to-iex"))


;;; Generated autoloads from eval-in-repl-javascript.el

(autoload 'eir-eval-in-javascript "eval-in-repl-javascript" "\
eval-in-repl for Javascript." t)
(register-definition-prefixes "eval-in-repl-javascript" '("eir-send-to-javascript"))


;;; Generated autoloads from eval-in-repl-lua.el

(autoload 'eir-eval-in-lua "eval-in-repl-lua" "\
eval-in-repl for Lua." t)
(register-definition-prefixes "eval-in-repl-lua" '("eir-send-to-lua" "eval-in-repl-run-lua"))


;;; Generated autoloads from eval-in-repl-ocaml.el

(autoload 'eir-eval-in-ocaml "eval-in-repl-ocaml" "\
eval-in-repl for OCaml." t)
(register-definition-prefixes "eval-in-repl-ocaml" '("eir-send-to-ocaml"))


;;; Generated autoloads from eval-in-repl-prolog.el

(autoload 'eir-eval-in-prolog "eval-in-repl-prolog" "\
eval-in-repl for SWI Prolog." t)
(register-definition-prefixes "eval-in-repl-prolog" '("eir-send-to-prolog"))


;;; Generated autoloads from eval-in-repl-python.el

(autoload 'eir-eval-in-python "eval-in-repl-python" "\
eval-in-repl for Python." t)
(register-definition-prefixes "eval-in-repl-python" '("eir-"))


;;; Generated autoloads from eval-in-repl-racket.el

(autoload 'eir-eval-in-racket "eval-in-repl-racket" "\
eval-in-repl for Racket." t)
(register-definition-prefixes "eval-in-repl-racket" '("eir-send-to-racket"))


;;; Generated autoloads from eval-in-repl-ruby.el

(autoload 'eir-eval-in-ruby "eval-in-repl-ruby" "\
eval-in-repl for Ruby." t)
(register-definition-prefixes "eval-in-repl-ruby" '("eir-send-to-ruby"))


;;; Generated autoloads from eval-in-repl-scheme.el

(autoload 'eir-eval-in-scheme "eval-in-repl-scheme" "\
eval-in-repl for Scheme." t)
(register-definition-prefixes "eval-in-repl-scheme" '("eir-send-to-scheme"))


;;; Generated autoloads from eval-in-repl-shell.el

(autoload 'eir-eval-in-shell "eval-in-repl-shell" "\
eval-in-repl for shell." t)
(register-definition-prefixes "eval-in-repl-shell" '("eir-"))


;;; Generated autoloads from eval-in-repl-slime.el

(autoload 'eir-eval-in-slime "eval-in-repl-slime" "\
eval-in-repl for SLIME." t)
(register-definition-prefixes "eval-in-repl-slime" '("eir-send-to-slime"))


;;; Generated autoloads from eval-in-repl-sly.el

(autoload 'eir-eval-in-sly "eval-in-repl-sly" "\
eval-in-repl for Sly." t)
(register-definition-prefixes "eval-in-repl-sly" '("eir-send-to-sly"))


;;; Generated autoloads from eval-in-repl-sml.el

(autoload 'eir-eval-in-sml "eval-in-repl-sml" "\
eval-in-repl for Standard ML." t)
(register-definition-prefixes "eval-in-repl-sml" '("eir-send-to-sml"))

;;; End of scraped data

(provide 'eval-in-repl-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; eval-in-repl-autoloads.el ends here
