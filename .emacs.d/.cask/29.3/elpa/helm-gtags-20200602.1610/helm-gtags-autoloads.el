;;; helm-gtags-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from helm-gtags.el

(autoload 'helm-gtags-clear-all-cache "helm-gtags" "\
Not documented." t)
(autoload 'helm-gtags-clear-cache "helm-gtags" "\
Not documented." t)
(autoload 'helm-gtags-next-history "helm-gtags" "\
Jump to next position on context stack" t)
(autoload 'helm-gtags-previous-history "helm-gtags" "\
Jump to previous position on context stack" t)
(autoload 'helm-gtags-select "helm-gtags" "\
Not documented." t)
(autoload 'helm-gtags-select-path "helm-gtags" "\
Not documented." t)
(autoload 'helm-gtags-tags-in-this-function "helm-gtags" "\
Show tagnames which are referenced in this function and jump to it." t)
(autoload 'helm-gtags-create-tags "helm-gtags" "\
Not documented.

(fn DIR LABEL)" t)
(autoload 'helm-gtags-delete-tags "helm-gtags" "\
Delete file GTAGS, GRTAGS, GPATH, ID etc. generated by gtags." t)
(autoload 'helm-gtags-find-tag "helm-gtags" "\
Jump to definition

(fn TAG)" t)
(autoload 'helm-gtags-find-tag-other-window "helm-gtags" "\
Jump to definition in other window.

(fn TAG)" t)
(autoload 'helm-gtags-find-rtag "helm-gtags" "\
Jump to referenced point

(fn TAG)" t)
(autoload 'helm-gtags-find-symbol "helm-gtags" "\
Jump to the symbol location

(fn TAG)" t)
(autoload 'helm-gtags-find-pattern "helm-gtags" "\
Grep and jump by gtags tag files.

(fn PATTERN)" t)
(autoload 'helm-gtags-find-files "helm-gtags" "\
Find file from tagged with gnu global.

(fn FILE)" t)
(autoload 'helm-gtags-find-tag-from-here "helm-gtags" "\
Jump point by current point information.
Jump to definition point if cursor is on its reference.
Jump to reference point if curosr is on its definition" t)
(autoload 'helm-gtags-dwim "helm-gtags" "\
Find by context. Here is
- on include statement then jump to included file
- on symbol definition then jump to its references
- on reference point then jump to its definition." t)
(autoload 'helm-gtags-parse-file "helm-gtags" "\
Parse current file with gnu global. This is similar to `imenu'.
You can jump definitions of functions, symbols in this file." t)
(autoload 'helm-gtags-push-stack "helm-gtags" "\
Push current location to the stack." t)
(autoload 'helm-gtags-pop-stack "helm-gtags" "\
Jump to previous point on the context stack and pop it from stack." t)
(autoload 'helm-gtags-show-stack "helm-gtags" "\
Show current context stack." t)
(autoload 'helm-gtags-clear-stack "helm-gtags" "\
Clear current context stack." t)
(autoload 'helm-gtags-clear-all-stacks "helm-gtags" "\
Clear all context stacks." t)
(autoload 'helm-gtags-update-tags "helm-gtags" "\
Update TAG file. Update All files with `C-u' prefix.
Generate new TAG file in selected directory with `C-u C-u'" t)
(autoload 'helm-gtags-resume "helm-gtags" "\
Resurrect previously invoked `helm-gtags` command." t)
(autoload 'helm-gtags-mode "helm-gtags" "\
Toggle Helm-Gtags mode on or off.

This is a minor mode.  If called interactively, toggle the
`Helm-Gtags mode' mode.  If the prefix argument is positive,
enable the mode, and if it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `helm-gtags-mode'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(register-definition-prefixes "helm-gtags" '("helm-"))

;;; End of scraped data

(provide 'helm-gtags-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; helm-gtags-autoloads.el ends here
