;;; wanderlust-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from acap.el

(register-definition-prefixes "acap" '("acap-"))


;;; Generated autoloads from elmo.el

(autoload 'elmo-make-folder "elmo" "\
Make an ELMO folder structure specified by NAME.
If optional argument NON-PERSISTENT is non-nil, the folder msgdb is not saved.
If optional argument MIME-CHARSET is specified, it is used for
encode and decode a multibyte string.

(fn NAME &optional NON-PERSISTENT MIME-CHARSET)")
(register-definition-prefixes "elmo" '("elmo-"))


;;; Generated autoloads from elmo-access.el

(register-definition-prefixes "elmo-access" '("elmo-access-"))


;;; Generated autoloads from elmo-archive.el

(register-definition-prefixes "elmo-archive" '("elmo-"))


;;; Generated autoloads from elmo-cache.el

(register-definition-prefixes "elmo-cache" '("elmo-cache-folder-list-message-locations"))


;;; Generated autoloads from elmo-date.el

(register-definition-prefixes "elmo-date" '("elmo-"))


;;; Generated autoloads from elmo-dop.el

(register-definition-prefixes "elmo-dop" '("elmo-"))


;;; Generated autoloads from elmo-file.el

(register-definition-prefixes "elmo-file" '("elmo-file-"))


;;; Generated autoloads from elmo-filter.el

(register-definition-prefixes "elmo-filter" '("elmo-f"))


;;; Generated autoloads from elmo-flag.el

(register-definition-prefixes "elmo-flag" '("elmo-"))


;;; Generated autoloads from elmo-imap4.el

(register-definition-prefixes "elmo-imap4" '("elmo-" "with-elmo-imap4-session-process-buffer"))


;;; Generated autoloads from elmo-internal.el

(register-definition-prefixes "elmo-internal" '("elmo-internal-"))


;;; Generated autoloads from elmo-localdir.el

(register-definition-prefixes "elmo-localdir" '("elmo-"))


;;; Generated autoloads from elmo-localnews.el

(register-definition-prefixes "elmo-localnews" '("elmo-localnews-folder-path"))


;;; Generated autoloads from elmo-maildir.el

(register-definition-prefixes "elmo-maildir" '("elmo-"))


;;; Generated autoloads from elmo-map.el

(register-definition-prefixes "elmo-map" '("elmo-"))


;;; Generated autoloads from elmo-mime.el

(register-definition-prefixes "elmo-mime" '("elmo-m"))


;;; Generated autoloads from elmo-msgdb.el

(register-definition-prefixes "elmo-msgdb" '("elmo-"))


;;; Generated autoloads from elmo-multi.el

(register-definition-prefixes "elmo-multi" '("elmo-"))


;;; Generated autoloads from elmo-net.el

(register-definition-prefixes "elmo-net" '("elmo-"))


;;; Generated autoloads from elmo-nntp.el

(register-definition-prefixes "elmo-nntp" '("elmo-nntp-"))


;;; Generated autoloads from elmo-null.el

(register-definition-prefixes "elmo-null" '("elmo-folder-append-messages-*-null"))


;;; Generated autoloads from elmo-passwd.el

(register-definition-prefixes "elmo-passwd" '("elmo-passwd-"))


;;; Generated autoloads from elmo-pipe.el

(register-definition-prefixes "elmo-pipe" '("elmo-"))


;;; Generated autoloads from elmo-pop3.el

(register-definition-prefixes "elmo-pop3" '("elmo-pop3-"))


;;; Generated autoloads from elmo-rss.el

(register-definition-prefixes "elmo-rss" '("elmo-rss-"))


;;; Generated autoloads from elmo-search.el

(register-definition-prefixes "elmo-search" '("elmo-"))


;;; Generated autoloads from elmo-sendlog.el

(register-definition-prefixes "elmo-sendlog" '("elmo-sendlog-f"))


;;; Generated autoloads from elmo-shimbun.el

(register-definition-prefixes "elmo-shimbun" '("elmo-shimbun-"))


;;; Generated autoloads from elmo-signal.el

(register-definition-prefixes "elmo-signal" '("elmo-"))


;;; Generated autoloads from elmo-spam.el

(register-definition-prefixes "elmo-spam" '("elmo-spam-"))


;;; Generated autoloads from elmo-split.el

(autoload 'elmo-split "elmo-split" "\
Split messages in the `elmo-split-folder' according to `elmo-split-rule'.
If prefix argument ARG is specified, do a reharsal (no harm).

(fn &optional ARG)" t)
(register-definition-prefixes "elmo-split" '("elmo-split-"))


;;; Generated autoloads from elmo-util.el

(register-definition-prefixes "elmo-util" '("elmo-"))


;;; Generated autoloads from elmo-vars.el

(register-definition-prefixes "elmo-vars" '("elmo-"))


;;; Generated autoloads from elmo-version.el

(register-definition-prefixes "elmo-version" '("elmo-"))


;;; Generated autoloads from elsp-bogofilter.el

(register-definition-prefixes "elsp-bogofilter" '("elmo-spam-bogofilter-" "elsp-bogofilter-register-buffer"))


;;; Generated autoloads from elsp-bsfilter.el

(register-definition-prefixes "elsp-bsfilter" '("elmo-spam-bsfilter-" "elsp-bsfilter-"))


;;; Generated autoloads from elsp-sa.el

(register-definition-prefixes "elsp-sa" '("elmo-spam"))


;;; Generated autoloads from elsp-spamfilter.el

(register-definition-prefixes "elsp-spamfilter" '("elmo-spam-spamfilter-corpus-filename" "elsp-spamfilter-"))


;;; Generated autoloads from elsp-spamoracle.el

(register-definition-prefixes "elsp-spamoracle" '("elmo-spam-spamoracle-"))


;;; Generated autoloads from mmimap.el

(register-definition-prefixes "mmimap" '("mime-imap-entity-header-string" "mmimap-"))


;;; Generated autoloads from modb.el

(register-definition-prefixes "modb" '("elmo-m"))


;;; Generated autoloads from modb-entity.el

(register-definition-prefixes "modb-entity" '("elmo-m" "modb-"))


;;; Generated autoloads from modb-legacy.el

(register-definition-prefixes "modb-legacy" '("elmo-msgdb-" "modb-legacy-"))


;;; Generated autoloads from modb-standard.el

(register-definition-prefixes "modb-standard" '("modb-standard-"))


;;; Generated autoloads from pldap.el

(register-definition-prefixes "pldap" '("ldap"))


;;; Generated autoloads from slp.el

(register-definition-prefixes "slp" '("slp-"))


;;; Generated autoloads from wl.el

(autoload 'wl "wl" "\
Start Wanderlust -- Yet Another Message Interface On Emacsen.
If ARG (prefix argument) is specified, folder checkings are skipped.

(fn &optional ARG)" t)
(autoload 'wl-other-frame "wl" "\
Pop up a frame to read messages via Wanderlust.

(fn &optional ARG)" t)
(register-definition-prefixes "wl" '("wl-"))


;;; Generated autoloads from wl-acap.el

(register-definition-prefixes "wl-acap" '("wl-acap-"))


;;; Generated autoloads from wl-action.el

(register-definition-prefixes "wl-action" '("wl-"))


;;; Generated autoloads from wl-address.el

(register-definition-prefixes "wl-address" '("wl-"))


;;; Generated autoloads from wl-addrmgr.el

(autoload 'wl-addrmgr "wl-addrmgr" "\
Start an Address manager." t)
(register-definition-prefixes "wl-addrmgr" '("wl-addrmgr-"))


;;; Generated autoloads from wl-batch.el

(register-definition-prefixes "wl-batch" '("wl-batch-prefetch"))


;;; Generated autoloads from wl-demo.el

(register-definition-prefixes "wl-demo" '("wl-"))


;;; Generated autoloads from wl-draft.el

(autoload 'wl-draft "wl-draft" "\
Write and send mail/news message with Wanderlust.

(fn &optional HEADER-ALIST CONTENT-TYPE CONTENT-TRANSFER-ENCODING BODY EDIT-AGAIN PARENT-FOLDER PARENT-NUMBER)" t)
(autoload 'wl-user-agent-compose "wl-draft" "\
Support the `compose-mail' interface for wl.
Only support for TO, SUBJECT, and OTHER-HEADERS has been implemented.
Support for CONTINUE, YANK-ACTION, SEND-ACTIONS and RETURN-ACTION has not
been implemented yet.  Partial support for SWITCH-FUNCTION now supported.

(fn &optional TO SUBJECT OTHER-HEADERS CONTINUE SWITCH-FUNCTION YANK-ACTION SEND-ACTIONS RETURN-ACTION)")
(register-definition-prefixes "wl-draft" '("wl-"))


;;; Generated autoloads from wl-e21.el

(register-definition-prefixes "wl-e21" '("wl-"))


;;; Generated autoloads from wl-expire.el

(register-definition-prefixes "wl-expire" '("wl-"))


;;; Generated autoloads from wl-fldmgr.el

(register-definition-prefixes "wl-fldmgr" '("wl-"))


;;; Generated autoloads from wl-folder.el

(register-definition-prefixes "wl-folder" '("wl-"))


;;; Generated autoloads from wl-highlight.el

(register-definition-prefixes "wl-highlight" '("wl-"))


;;; Generated autoloads from wl-message.el

(register-definition-prefixes "wl-message" '("wl-"))


;;; Generated autoloads from wl-mime.el

(register-definition-prefixes "wl-mime" '("wl-"))


;;; Generated autoloads from wl-qs.el

(autoload 'wl-quicksearch-goto-search-folder-wrapper "wl-qs" "\
Call `wl-quicksearch-goto-search-folder' on a folder
built from `wl-quicksearch-folder'." t)
(register-definition-prefixes "wl-qs" '("wl-quicksearch-"))


;;; Generated autoloads from wl-refile.el

(register-definition-prefixes "wl-refile" '("wl-refile-"))


;;; Generated autoloads from wl-score.el

(register-definition-prefixes "wl-score" '("wl-"))


;;; Generated autoloads from wl-spam.el

(register-definition-prefixes "wl-spam" '("wl-"))


;;; Generated autoloads from wl-summary.el

(register-definition-prefixes "wl-summary" '("wl-"))


;;; Generated autoloads from wl-template.el

(register-definition-prefixes "wl-template" '("wl-template"))


;;; Generated autoloads from wl-thread.el

(register-definition-prefixes "wl-thread" '("wl-thread-"))


;;; Generated autoloads from wl-util.el

(register-definition-prefixes "wl-util" '("wl-"))


;;; Generated autoloads from wl-vars.el

(register-definition-prefixes "wl-vars" '("wl-"))


;;; Generated autoloads from wl-version.el

(register-definition-prefixes "wl-version" '("wl-"))

;;; End of scraped data

(provide 'wanderlust-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; wanderlust-autoloads.el ends here
