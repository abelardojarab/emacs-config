# -*- mode: snippet -*-
# name : AtCoder starting template
# key: atcoder
# --

#include <algorithm>
#include <bitset>
#include <cassert>
#include <climits>
#include <cmath>
#include <complex>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <random>
#include <set>
#include <stack>
#include <string>
#include <vector>

#define FOR(i, a, b) for (int i = (a); i < (b); i++)
#define RFOR(i, a, b) for (int i = (b)-1; i >= (a); i--)
#define REP(i, n) for (int i = 0; i < (n); i++)
#define RREP(i, n) for (int i = (n)-1; i >= 0; i--)
#define ALL(x) (x).begin(), (x).end()
#define MP(a, b) make_pair(a, b)
#define MEM(x, val) memset(x, val, sizeof(x))
#define EB emplace_back
#define F first
#define S second

#define FASTIO                      \
  ios_base::sync_with_stdio(false); \
  cin.tie(NULL);

#ifdef DEBUG
#define DEBUG(x) cout << #x << ": " << x << endl
#define ASSERT(x)                                                            \
  {                                                                          \
    if (!(x)) {                                                              \
      cerr << "Assertion failed at line " << __LINE__ << ": " << #x << " = " \
           << (x) << "\n";                                                   \
      exit(1);                                                               \
    }                                                                        \
  }
#else
#define DEBUG(x)
#define ASSERT(x)
#endif

// `(file-name-nondirectory (buffer-file-name))` --- $0
// author: Seong Yong-ju <sei40kr@gmail.com>

using namespace std;

typedef long long LL;
typedef long double LD;
typedef vector<int> VI;
typedef vector<LL> VLL;
typedef vector<VI> VVI;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;

const int MOD = 1e9 + 7;
const double PI = acos(-1.0);

template <typename T>
T gcd(T a, T b) {
  return (b ? __gcd(a, b) : a);
}
template <typename T>
T lcm(T a, T b) {
  return (a * (b / gcd(a, b)));
}

int main() {
  FASTIO;

  $1
}
