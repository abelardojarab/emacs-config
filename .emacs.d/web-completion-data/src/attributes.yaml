# Tag's Attributes
# Note: only attributes with doc (that have 'd' property) are generated.
attributes:
  - accept:
      t: [ input ]
      d: |
        accept
        
        If the value of the type attribute is file, this attribute indicates the types of files that the server accepts; otherwise it is ignored. The value must be a comma-separated list of unique content type specifiers:
          A file extension starting with the STOP character (U+002E). (E.g.: ".jpg,.png,.doc")
          A valid MIME type with no extensions
          audio/* representing sound files HTML5
          video/* representing video files HTML5
          image/* representing image files HTML5

  - accept:
      t: [ form ]
      d: |
        accept [HTML4] [Trash]
        
        A comma-separated list of content types that the server accepts.
        
        Usage note: 
        This attribute has been removed in HTML5 and should no longer be used. Instead, use the accept attribute of the specific <input> element.

  - accept-charset:
      t: [ form ]
      d: |
        accept-charset
        
        A space- or comma-delimited list of character encodings that the server accepts. The browser uses them in the order in which they are listed. The default value, the reserved string "UNKNOWN", indicates the same encoding as that of the document containing the form element.
        In previous versions of HTML, the different character encodings could be delimited by spaces or commas. In HTML5, only spaces are allowed as delimiters.

  - accesskey:
      t: [ global ]
      d: |
        Defines a keyboard shortcut to activate or add focus to the element.
        
        This attribute provides a hint for generating a keyboard shortcut for the current element. This attribute consists of a space-separated list of characters (one single Unicode code point). The browser should use the first one that exists on the computer keyboard layout.
        
        HTML4 Note:
        In previous versions of HTML, only one character could be specified. Also it wasn't a global attribute and could be applied only to <a>, <area>, <button>, <input>, <label>, <legend> and <textarea>.
        
        Usage note:
        The operation to activate the accesskey depends on browser and its platform.

  - accesskey:
      t: [ label ]
      d: |
        accesskey [HTML4] [HTML5]
        
        A shortcut key to access this element from the keyboard.
        
        [global attribute]

  - action:
      t: [ form ]
      d: |
        action
        
        The URI of a program that processes the form information. This value can be overridden by a formaction attribute on a <button> or <input> element.

  - action:
      t: [ isindex ]
      d: ""

  - action:
      t: [ insindex ]
      d: |
        action [Deprecated]
        
        This attribute can be used in the case of needing to send query to a different URL. Action is not defined by W3C.

  - align:
      t: [ applet ]
      d: ""

  - align:
      t: [ spacer ]
      d: ""

  - align:
      t: [ caption ]
      d: |
        align [Deprecated since HTML4.01] [Obsolete since HTML5]
        
        This enumerated attribute indicates how the caption must be aligned with respect to the table. It may have the following values:
          left, displayed to the left of the table
          top, displayed before the the table
          right, displayed to the right of the table
          bottom, displayed under the table
          
        Usage note: 
        Do not use this attribute, as it has been deprecated: the <caption> element should be styled using CSS. To give a similar effect to the align attribute, use the the CSS properties caption-side and text-align.

  - align:
      t: [ col ]
      d: |
        align [Deprecated since HTML4.01] [Obsolete since HTML5]
        
        This enumerated attribute specifies how horizontal alignment of each column cell content will be handled. Possible values are:
          left, aligning the content to the left of the cell
          center, centering the content in the cell
          right, aligning the content to the right of the cell
          justify, inserting spaces into the textual content so that the content is justified in the cell
          char, aligning the textual content on a special character with a minimal offset, defined by the char and charoff attributes Unimplemented (see bug 2212).

  - align:
      t: [ hr ]
      d: |
        align [Deprecated since HTML4.01] [Obsolete since HTML5]
        
        Sets the alignment of the rule on the page. If no value is specified, the default value is left.

  - align:
      t: [ iframe ]
      d: |
        align [Deprecated since HTML4.01] [Obsolete since HTML5]
        
        The alignment of this element with respect to the surrounding context.

  - align:
      t: [ img ]
      d: |
        align [Deprecated since HTML4.01] [Obsolete since HTML5]
        
        Use the vertical-align CSS property instead.
        
        The alignment of the image with respect to its surrounding context.

  - allowfullscreen:
      t: [ iframe ]
      d: |
        allowfullscreen
        
        This attribute can be set to true if the frame is allowed to be placed into full screen mode by calling its element.mozRequestFullScreen() method. If this isn't set, the element can't be placed into full screen mode.

  - alt:
      t: [ applet ]
      d: ""

  - alt:
      t: [ area ]
      d: |
        alt
        
        A text string alternative to display on browsers that do not display images. The text should be phrased so that it presents the user with the same kind of choice as the image would offer when displayed without the alternative text. In HTML4, this attribute is required, but may be the empty string (""). In HTML5, this attribute is required only if the href attribute is used.

  - alt:
      t: [ img ]
      d: |
        alt
        
        This attribute defines the alternative text describing the image. Users will see this displayed if the image URL is wrong, the image is not in one of the supported formats, or until the image is downloaded.
        
        Usage note: 
        Omitting this attribute indicates that the image is a key part of the content, but no textual equivalent is available. Setting this attribute to the empty string indicates that this image is not a key part of the content; non-visual browsers may omit it from rendering.

  - archive:
      t: [ applet ]
      d: ""

  - archive:
      t: [ object ]
      d: |
        archive [HTML4 only] [Obsolete since HTML5]
        
        A space-separated list of URIs for archives of resources for the object.

  - async:
      t: [ script ]
      d: |
        async [HTML5]
        
        Set this Boolean attribute to indicate that the browser should, if possible, execute the script asynchronously. It has no effect on inline scripts (i.e., scripts that don't have the src attribute).
        
        See Browser compatibility for notes on browser support. See also Async scripts for asm.js.

  - autobuffer:
      t: [ audio ]
      d: |
        autobuffer [Obsolete since Gecko 2.0]
        
        A Boolean attribute; if specified, the audio will automatically begin being downloaded, even if not set to automatically play. This continues until the media cache is full, or the entire audio file has been downloaded, whichever comes first. This should only be used when it is expected that the user will choose to play the audio; for example, if the user has navigated to a page using a "Play this audio" link. This attribute was removed in Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1) in favor of the preload attribute.

  - autocapitalize:
      t: [ form ]
      d: |
        autocapitalize [!]
        
        This is a nonstandard attribute used by iOS Safari Mobile which controls whether and how the text value for textual form control descendants should be automatically capitalized as it is entered/edited by the user. If the autocapitalize attribute is specified on an individual form control descendant, it trumps the form-wide autocapitalize setting. The non-deprecated values are available in iOS 5 and later. The default value is sentences. Possible values are:
          none: Completely disables automatic capitalization
          sentences: Automatically capitalize the first letter of sentences.
          words: Automatically capitalize the first letter of words.
          characters: Automatically capitalize all characters.
          on:  Deprecated since iOS 5.
          off:  Deprecated since iOS 5.

  - autocapitalize:
      t: [ input ]
      d: |
        autocapitalize [!]
        
        This is a nonstandard attribute used by iOS Safari Mobile which controls whether and how the text value should be automatically capitalized as it is entered/edited by the user. The non-deprecated values are available in iOS 5 and later. Possible values are:
          none: Completely disables automatic capitalization
          sentences: Automatically capitalize the first letter of sentences.
          words: Automatically capitalize the first letter of words.
          characters: Automatically capitalize all characters.
          on: Deprecated since iOS 5.
          off: Deprecated since iOS 5.

  - autocapitalize:
      t: [ textarea ]
      d: |
        autocapitalize [!]
        
        This is a nonstandard attribute used by iOS Safari Mobile which controls whether and how the text value should be automatically capitalized as it is entered/edited by the user. The non-deprecated values are available in iOS 5 and later. Possible values are:
          none: Completely disables automatic capitalization
          sentences: Automatically capitalize the first letter of sentences.
          words: Automatically capitalize the first letter of words.
          characters: Automatically capitalize all characters.
          on:  Deprecated since iOS 5.
          off:  Deprecated since iOS 5.

  - autocomplete:
      t: [ button ]
      d: |
        autocomplete [!]
        
        The use of this attribute on a <button> is nonstandard and Firefox-specific. By default, unlike other browsers, Firefox persists the dynamic disabled state of a <button> across page loads. Setting the value of this attribute to off (i.e. autocomplete="off") disables this feature. See bug 654072.

  - autocomplete:
      t: [ form ]
      d: |
        autocomplete [HTML5]
        
        Indicates whether input elements can by default have their values automatically completed by the browser. This setting can be overridden by an autocomplete attribute on an element belonging to the form. Possible values are:
          off: The user must explicitly enter a value into each field for every use, or the document provides its own auto-completion method; the browser does not automatically complete entries.
          on: The browser can automatically complete values based on values that the user has previously entered in the form.
          
        Note: 
        If you set autocomplete to off in a form because the document provides its own auto-completion, then you should also set autocomplete to off for each of the form's input elements that the document can auto-complete. For details, see Google Chrome notes.

  - autocomplete:
      t: [ input ]
      d: |
        autocomplete [HTML5]
        
        This attribute indicates whether the value of the control can be automatically completed by the browser. This attribute is ignored if the value of the type attribute is hidden, password, checkbox, radio, file, or a button type (button, submit, reset, image). Possible values are:
          off: The user must explicitly enter a value into this field for every use, or the document provides its own auto-completion method; the browser does not automatically complete the entry.
          on: The browser can automatically complete the value based on values that the user has entered during previous uses.
        
        If the autocomplete attribute is not specified on an input element, then the browser uses the autocomplete attribute value of the <input> element's form owner. The form owner is either the form element that this <input> element is a descendant of or the form element whose id is specified by the form attribute of the input element. For more information, see the autocomplete attribute in <form>.
        
        The autocomplete attribute also controls whether Firefox will, unlike other browsers, persist the dynamic disabled state and (if applicable) dynamic checkedness of an <input> across page loads. The persistence feature is enabled by default. Setting the value of the autocomplete attribute to off disables this feature; this works even when the autocomplete attribute would normally not apply to the <input> by virtue of its type. See bug 654072.

  - autocomplete:
      t: [ textarea ]
      d: |
        autocomplete [HTML5]
        
        This attribute indicates whether the value of the control can be automatically completed by the browser. Possible values are:
          off: The user must explicitly enter a value into this field for every use, or the document provides its own auto-completion method; the browser does not automatically complete the entry.
          on: The browser can automatically complete the value based on values that the user has entered during previous uses.
        
        If the autocomplete attribute is not specified on an textarea element, then the browser uses the autocomplete attribute value of the <textarea> element's form owner. The form owner is either the form element that this <textarea> element is a descendant of or the form element whose id is specified by the form attribute of the input element. For more information, see the autocomplete attribute in <form>.

  - autocorrect:
      t: [ input ]
      d: |
        autocorrect [!]
        
        This is a nonstandard attribute supported by Safari that is used to control whether autocorrection should be enabled when the user is entering/editing the text value of the <input>. Possible attribute values are:
          on: Enable autocorrection
          off: Disable autocorrection

  - autofocus:
      t: [ button ]
      d: |
        autofocus [HTML5]
        
        This Boolean attribute lets you specify that the button should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form-associated element in a document can have this attribute specified.

  - autofocus:
      t: [ input ]
      d: |
        autofocus [HTML5]
        
        This Boolean attribute lets you specify that a form control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form element in a document can have the autofocus attribute, which is a Boolean. It cannot be applied if the type attribute is set to hidden (that is, you cannot automatically set focus to a hidden control).

  - autofocus:
      t: [ keygen ]
      d: |
        autofocus
        
        This Boolean attribute lets you specify that the control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form element in a document can have the autofocus attribute, which is a Boolean.

  - autofocus:
      t: [ select ]
      d: |
        autofocus [HTML5]
        
        This attribute lets you specify that a form control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form element in a document can have the autofocus attribute, which is a Boolean.

  - autofocus:
      t: [ textarea ]
      d: |
        autofocus [HTML5]
        
        This Boolean attribute lets you specify that a form control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form-associated element in a document can have this attribute specified. 

  - autoplay:
      t: [ audio ]
      d: |
        autoplay
        
        A Boolean attribute; if specified (even if the value is "false"!), the audio will automatically begin to play back as soon as it can do so without stopping to finish loading the data.

  - autoplay:
      t: [ video ]
      d: |
        autoplay
        
        A Boolean attribute; if specified, the video will automatically begin to play back as soon as it can do so without stopping to finish loading the data.

  - autosave:
      t: [ input ]
      d: |
        autosave [HTML5]
        
        This attribute should be defined as a unique value. If the value of the type attribute is search, previous search term values will persist in the dropdown across page load.

  - balance:
      t: [ bgsound ]
      d: ""

  - behavior:
      t: [ marquee ]
      d: ""

  - bgcolor:
      t: [ col ]
      d: ""

  - bgcolor:
      t: [ colgroup ]
      d: ""

  - bgcolor:
      t: [ marquee ]
      d: ""

  - border:
      t: [ img ]
      d: |
        border [Deprecated since HTML4.01] [Obsolete since HTML5]
        
        The width of a border around the image.

  - border:
      t: [ object ]
      d: |
        border  [Deprecated since HTML4.01] [Obsolete since HTML5]
        
        The width of a border around the control, in pixels.

  - buffered:
      t: [ audio ]
      d: |
        An attribute you can read to determine which time ranges of the media have been buffered. This attribute contains a TimeRanges object.

  - buffered:
      t: [ video ]
      d: |
        buffered
        
        An attribute you can read to determine which time ranges of the media have been buffered. This attribute contains a TimeRanges object.

  - challenge:
      t: [ keygen ]
      d: |
        challenge
        
        A challenge string that is submitted along with the public key. Defaults to an empty string if not specified.

  - charset:
      t: [ meta ]
      d: |
        charset [HTML5]
        
        This attribute declares the character encoding used of the page. It can be locally overridden using the lang attribute on any element. This attribute is a literal string and must be one of the preferred MIME name for a character encoding as defined by the IANA. Though the standard doesn't request a specific character encoding, it gives some recommendations:
          Authors are encouraged to use UTF-8.
          Authors should not use ASCII-incompatible encodings (i.e. those that don't map the 8-bit code points 0x20 to 0x7E to the Unicode 0x0020 to 0x007E code points) as these represent a security risk: browsers not supporting them may interpret benign content as HTML Elements. This is the case of at least the following charsets: JIS_C6226-1983, JIS_X0212-1990, HZ-GB-2312, JOHAB, the ISO-2022 family, and the EBCDIC family.
          Authors must not use CESU-8, UTF-7, BOCU-1 and SCSU, also falling in that category and not intended to be used on the web. Cross-scripting attacks with some of these encodings have been documented.
          Authors should not use UTF-32 because not all HTML5 encoding algorithms can distinguish it from UTF-16.
          
        Notes:
          The declared character set must match the one of the page. There is no valid reason to declare an inaccurate character set.
          This <meta> element must be inside the <head> element and within the 512 first bytes of the page, as some browsers only look at these first bytes before choosing a character set for the page.
          This <meta> element is only a part of the algorithm to determine the character set of a page that browsers apply. The HTTP Content-Type header and any BOM elements have precedence over this element.
          It is good practice, and strongly recommended, to define the character set using this attribute. If no character set is defined for a page, several cross-scripting techniques may be able to harm the page user, such as the UTF-7 fallback cross-scripting technique. Always setting this meta will protect against these risks.
          This <meta> element is a synonym for the pre-HTML5 <meta http-equiv="Content-Type" content="text/html; charset=IANAcharset"> where IANAcharset corresponds of the value of the equivalent charset attribute. This syntax is still allowed, although obsolete and no more recommended.

  - charset:
      t: [ a ]
      d: |
        charset [Obsolete since HTML5]
        
        This attribute defines the character encoding of the linked resource. The value is a space- and/or comma-delimited list of character sets as defined in RFC 2045. The default value is ISO-8859-1.
        
        Usage note: 
        
        This attribute is obsolete in HTML5 and should not be used by authors. To achieve its effect, use the HTTP Content-Type header on the linked resource.

  - charset:
      t: [ link ]
      d: |
        charset [Trashed]
        
        This attribute defines the character encoding of the linked resource. The value is a space- and/or comma-delimited list of character sets as defined in RFC 2045. The default value is ISO-8859-1.
        
        Usage note: 
        This attribute is obsolete in HTML5 and must not be used by authors. To achieve its effect, use the Content-Type: HTTP header on the linked resource.

  - checked:
      t: [ input ]
      d: |
        checked [Boolean]
        
        When the value of the type attribute is radio or checkbox, the presence of this Boolean attribute indicates that the control is selected by default; otherwise it is ignored.
        
        Firefox will, unlike other browsers, by default, persist the dynamic checked state of an <input> across page loads. Use the autocomplete attribute to control this feature.

  - checked:
      t: [ menuitem ]
      d: |
        checked
        
        Boolean attribute which indicates whether the command is selected. May only be used when the type attribute is checkbox or radio.

  - cite:
      t: [ blockquote ]
      d: |
        cite
        
        A URL that designates a source document or message for the information quoted. This attribute is intended to point to information explaining the context or the reference for the quote.

  - cite:
      t: [ del ]
      d: |
        cite
        
        A URI for a resource that explains the change (for example, meeting minutes).

  - cite:
      t: [ ins ]
      d: |
        cite
        
        This attribute defines the URI of a resource that explains the change, like a link to some meeting minutes or a ticket in a troubleshooting sytem.

  - cite:
      t: [ q ]
      d: |
        cite
        
        The value of this attribute is a URL that designates a source document or message for the information quoted. This attribute is intended to point to information explaining the context or the reference for the quote.

  - class:
      t: [ global ]
      d: |
        Often used with CSS to style elements with common properties.
        
        This attribute is a space-separated list of the classes of the element. Classes allows CSS and Javascript to select and access specific elements via the class selectors or functions like the DOM method document.getElementsByClassName.
        
        Usage note:
        Though the specification doesn't put requirements on the name of classes, web developers are encouraged to use names that describe the semantic purpose of the element, rather to the presentation of the element (e.g., attribute to describe an attribute rather than italics, although an element of this class may be presented by italics). Semantic names remain logical even if the presentation of the page changes.

  - classid:
      t: [ object ]
      d: |
        classid [HTML4 only] [Obsolete since HTML5]
        
        The URI of the object's implementation. It can be used together with, or in place of, the data attribute.

  - clear:
      t: [ br ]
      d: |
        clear [Deprecated since HTML4.01] [Obsolete since HTML5]
        
        Indicates where to begin the next line after the break.
        
        Usage note: 
        This attribute is obsolete in HTML5 and should not be used by authors. Use the CSS clear property instead.

  - code:
      t: [ applet ]
      d: ""

  - codebase:
      t: [ applet ]
      d: ""

  - codebase:
      t: [ object ]
      d: |
        codebase [HTML4 only] [Obsolete since HTML5]
        
        The base path used to resolve relative URIs specified by classid, data, or archive. If not specified, the default is the base URI of the current document.

  - codetype:
      t: [ object ]
      d: |
        codetype [HTML4 only] [Obsolete since HTML5]
        
        The content type of the data specified by classid.

  - color:
      t: [ basefont ]
      d: ""

  - color:
      t: [ hr ]
      d: |
        color [!]
        
        Sets the color of the rule through color name or hexadecimal value.

  - cols:
      t: [ frameset ]
      d: |
        cols [Deprecated]
        
        This attribute is specify the number and size of horizontal spaces in a frameset.

  - cols:
      t: [ textarea ]
      d: |
        cols
        
        The visible width of the text control, in average character widths. If it is specified, it must be a positive integer. If it is not specified, the default value is 20 (HTML5).

  - cols:
      t: [ pre ]
      d: |
        cols [!] [Trashed]
        
        Contains the preferred count of characters that a line should have. It was a non-standard synonym of width. To achieve such an effect, use CSS styling instead.

  - colspan:
      t: [ td ]
      d: |
        colspan
        
        This attribute contains a non-negative integer value that indicates for how many columns the cell extends. Its default value is 1; if its value is set to 0, it extends until the end of the <colgroup>, even if implicitly defined, that the cell belongs to. Values higher than 1000 will be considered as incorrect and will be set to the default value (1).
        
        Note: 
        In HTML5 this attribute only accepts values greater than zero since it must not be used to overlap cells. Besides, Firefox is the only browser to support the 0 value as defined in the HTML 4.01 specification.

  - colspan:
      t: [ th ]
      d: |
        colspan
        
        This attribute contains a non-negative integer value that indicates on how many columns does the cell extend. Its default value is 1; if its value is set to 0, it does extend until the end of the <colgroup>, eventually implicitly defined, the cell belongs to. Values higher than 1000 are clipped down to 1000.

  - command:
      t: [ menuitem ]
      d: |
        command
        
        Specifies the ID of a separate element, indicating a command to be invoked indirectly. May not be used within a menu item that also includes the attributes checked, disabled, icon, label, radiogroup or type.

  - compact:
      t: [ dl ]
      d: ""

  - compact:
      t: [ ol ]
      d: ""

  - compat:
      t: [ dl ]
      d: |
        compact [!]
        
        Forces the description to appear on the same line as the term. This attribute is currently unsupported

  - content:
      t: [ meta ]
      d: |
        content
        
        This attribute gives the value associated with the http-equiv or name attribute, depending of the context.

  - contenteditable:
      t: [ global ]
      d: |
        Indicates whether the element's content is editable.
        
        This enumerated attribute indicates if the element should be editable by the user. If so, the browser modifies its widget to allow editing. The attribute must take one of the following values:
        
        true or the empty string, which indicates that the element must be editable;
        
        false, which indicates that the element must not be editable.
        
        If this attribute is not set, its default value is inherited from its parent element.
        
        Usage note:
        This attribute is an enumerated one and not a Boolean one. This means that the explicit usage of one of the values true, false or the empty string is mandatory and that a shorthand like <label contenteditable>Example Label</label> is not allowed. The correct usage is <label contenteditable="true">Example Label</label>.
        

  - contextmenu:
      t: [ global ]
      d: |
        Defines the ID of a <menu> element which will serve as the element's context menu.
        
        A context menu is a menu that appears upon user interaction, such as a right-click. HTML5 now allows us to customize this menu. Here are some implementation examples, including nested menus.

  - controls:
      t: [ audio ]
      d: |
        controls
        
        If this attribute is present, the browser will offer controls to allow the user to control audio playback, including volume, seeking, and pause/resume playback.

  - controls:
      t: [ video ]
      d: |
        controls
        
        If this attribute is present, Gecko will offer controls to allow the user to control video playback, including volume, seeking, and pause/resume playback.

  - coords:
      t: [ area ]
      d: |
        coords
        
        A set of values specifying the coordinates of the hot-spot region. The number and meaning of the values depend upon the value specified for the shape attribute. For a rect or rectangle shape, the coords value is two x,y pairs: left, top, right, and bottom. For a circle shape, the value is x,y,r where x,y is a pair specifying the center of the circle and r is a value for the radius. For a poly or polygon< shape, the value is a set of x,y pairs for each point in the polygon: x1,y1,x2,y2,x3,y3, and so on. In HTML4, the values are numbers of pixels or percentages, if a percent sign (%) is appended; in HTML5, the values are numbers of CSS pixels.

  - coords:
      t: [ a ]
      d: |
        coords [HTML4 only] [Obsolete since HTML5]
        
        For use with object shapes, this attribute uses a comma-separated list of numbers to define the coordinates of the object on the page.

  - crossorigin:
      t: [ img ]
      d: |
        crossorigin [HTML5]
        
        This enumerated attribute indicates if the fetching of the related image must be done using CORS or not. CORS-enabled images can be reused in the <canvas> element without being tainted. The allowed values are:
        
          anonymous
        
            A cross-origin request (i.e. with Origin: HTTP header) is performed. But no credential is sent (i.e. no cookie, no X.509 certificate and no HTTP Basic authentication is sent). If the server does not give credentials to the origin site (by not setting the Access-Control-Allow-Origin: HTTP header), the image will be tainted and its usage restricted..
        
          use-credentials
        
            A cross-origin request (i.e. with Origin: HTTP header) performed with credential is sent (i.e. a cookie, a certificate and HTTP Basic authentication is performed). If the server does not give credentials to the origin site (through Access-Control-Allow-Credentials: HTTP header), the image will be tainted and its usage restricted.
        
        When not present, the resource is fetched without a CORS request (i.e. without sending the Origin: HTTP header), preventing its non-tainted usage in <canvas> elements. If invalid, it is handled as if the enumerated keyword anonymous was used. See CORS settings attributes for additional information.

  - crossorigin:
      t: [ link ]
      d: |
        crossorigin [HTML5]
        
        This enumerated attribute indicates if the fetching of the related image must be done using CORS or not. CORS-enabled images can be reused in the <canvas> element without being tainted. The allowed values are:
        
          anonymous
        A cross-origin request (i.e. with Origin: HTTP header) is performed. But no credential is sent (i.e. no cookie, no X.509 certificate and no HTTP Basic authentication is sent). If the server does not give credentials to the origin site (by not setting the Access-Control-Allow-Origin: HTTP header), the image will be tainted and its usage restricted..
        
          use-credentials
        A cross-origin request (i.e. with Origin: HTTP header) is performed with credential is sent (i.e. a cookie, a certificate and HTTP Basic authentication is performed). If the server does not give credentials to the origin site (through Access-Control-Allow-Credentials: HTTP header), the image will be tainted and its usage restricted.
        
        When not present, the resource is fetched without a CORS request (i.e. without sending the Origin: HTTP header), preventing its non-tainted used in <canvas> elements. If invalid, it is handled as if the enumerated keyword anonymous was used. See CORS settings attributes for additional information.

  - crossorigin:
      t: [ script ]
      d: |
        crossorigin [!]
        
        Normal script tags will pass minimal information to the window.onerror for scripts which do not pass the standard CORS checks. To allow error logging for sites which use a separate domain for static media, several browsers have enabled the crossorigin attribute for scripts using the same definition as the standard img crossorigin attribute. Efforts to standardize this attribute are underway on the WHATWG mailing list.

  - crossorigin:
      t: [ video ]
      d: |
        crossorigin
        
        This enumerated attribute indicates if the fetching of the related image must be done using CORS or not. CORS-enabled resources can be reused in the <canvas> element without being tainted. The allowed values are:
        
        anonymous
          A cross-origin request (i.e. with Origin: HTTP header) is performed. But no credential is sent (i.e. no cookie, no X.509 certificate and no HTTP Basic authentication is sent). If the server does not give credentials to the origin site (by not setting the Access-Control-Allow-Origin: HTTP header), the image will be tainted and its usage restricted..
        
        use-credentials
          A cross-origin request (i.e. with Origin: HTTP header) is performed with credential is sent (i.e. a cookie, a certificate and HTTP Basic authentication is performed). If the server does not give credentials to the origin site (through Access-Control-Allow-Credentials: HTTP header), the image will be tainted and its usage restricted.
        
        When not present, the resource is fetched without a CORS request (i.e. without sending the Origin: HTTP header), preventing its non-tainted used in <canvas> elements. If invalid, it is handled as if the enumerated keyword anonymous was used. See CORS settings attributes for additional information.

  - data:
      t: [ object ]
      d: |
        data
        
        The address of the resource as a valid URL. At least one of data and type must be defined.

  - data-:
      t: [ global ]
      d: |
        Lets you attach custom attributes to an HTML element.
        
        This class of attributes, called custom data attributes, allows proprietary information to be exchanged between the HTML and its DOM representation that may be used by scripts. All such custom data are available via the HTMLElement interface of the element the attribute is set on. The HTMLElement.dataset property gives access to them.
        The * may be replaced by any name following the production rule of xml names with the following restrictions:
        
        the name must not start with xml, whatever case is used for these letters;
        the name must not contain any semicolon (U+003A);
        the name must not contain capital A to Z letters.
        Note that the HTMLElement.dataset attribute is a StringMap and the name of the custom data attribute data-test-value will be accessible via HTMLElement.dataset.testValue as any dash (U+002D) is replaced by the capitalization of the next letter (camelcase).

  - datafld:
      t: [ a ]
      d: ""

  - datafld:
      t: [ applet ]
      d: ""

  - datasrc:
      t: [ a ]
      d: ""

  - datasrc:
      t: [ applet ]
      d: ""

  - datetime:
      t: [ del, ins ]
      d: |
        datetime
        
        This attribute indicates the time and date of the change and must be a valid date with an optional time string. If the value cannot be parsed as a date with an optional time string, the element does not have an associated time stamp.

  - datetime:
      t: [ time ]
      d: |
        datetime
        
        This attribute indicates the time and date of the element and must be a valid date with an optional time string. If the value cannot be parsed as a date with an optional time string, the element does not have an associated time stamp.

  - declare:
      t: [ object ]
      d: |
        declare [HTML4 only] [Obsolete since HTML5]
        
        The presence of this Boolean attribute makes this element a declaration only. The object must be instantiated by a subsequent <object> element. In HTML5, repeat the <object> element completely each that that the resource is reused.

  - default:
      t: [ menuitem ]
      d: |
        default
        
        This Boolean attribute indicates use of the same command as the menu's subject element (such as a button or input).

  - default:
      t: [ track ]
      d: |
        default
        
        This attribute indicates that the track should be enabled unless the user's preferences indicate that another track is more appropriate. This may only be used on one track element per media element.

  - defer:
      t: [ script ]
      d: |
        defer
        
        This Boolean attribute is set to indicate to a browser that the script is meant to be executed after the document has been parsed. Since this feature hasn't yet been implemented by all other major browsers, authors should not assume that the script’s execution will actually be deferred. The defer attribute shouldn't be used on scripts that don't have the src attribute. Since Gecko 1.9.2, the defer attribute is ignored on scripts that don't have the src attribute. However, in Gecko 1.9.1 even inline scripts are deferred if the defer attribute is set.

  - dir:
      t: [ bdo ]
      d: |
        dir
        
        Text direction in this element. Possible values are:
          ltr: Indicates that the text should go in a left-to-right direction.
          rtl: Indicates that the text should go in a right-to-left direction.
          auto: The browser decides which direction based on the element's content.

  - dir:
      t: [ global ]
      d: |
        Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
        
        This enumerated attribute indicates the directionality of the element's text. It can have the following values:
        
        ltr, which means left to right and is to be used for languages that are written from the left to the right (like English);
        rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic);
        auto, which let the user agent decides. It uses a basic algorithm as it parses the characters inside the element until it finds a character with a strong directionality, then apply that directionality to the whole element.
        
        Usage notes:
        This attribute is mandatory for the <bdo> element where it has a different semantic meaning.
        This attribute is not inherited by the <bdi> element. If not set, its value is auto.
        This attribute can be overridden by the CSS properties direction and unicode-bidi, if a CSS page is active and the element supports these properties.
        As the directionality of the text is semantically related to its content and not to its presentation, it is recommended that web developers use this attribute instead of the related CSS properties when possible. That way, the text will display correctly even on a browser that doesn't support CSS or has the CSS deactivated.
        The auto value should be used for data with an unknown directionality, like data coming from user input, eventually stored in a database.

  - dir:
      t: [ bdi ]
      d: |
        dir
        
        Like all other HTML elements, this element has the global attributes, with a slight semantic difference: the dir attribute is not inherited. If not set, its default value is the auto which let the browser decide the direction based on the element's content.
        
        [global attribute]
        
        Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
        
        This enumerated attribute indicates the directionality of the element's text. It can have the following values:
        
        ltr, which means left to right and is to be used for languages that are written from the left to the right (like English);
        rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic);
        auto, which let the user agent decides. It uses a basic algorithm as it parses the characters inside the element until it finds a character with a strong directionality, then apply that directionality to the whole element.
        
        Usage notes:
        This attribute is mandatory for the <bdo> element where it has a different semantic meaning.
        This attribute is not inherited by the <bdi> element. If not set, its value is auto.
        This attribute can be overridden by the CSS properties direction and unicode-bidi, if a CSS page is active and the element supports these properties.
        As the directionality of the text is semantically related to its content and not to its presentation, it is recommended that web developers use this attribute instead of the related CSS properties when possible. That way, the text will display correctly even on a browser that doesn't support CSS or has the CSS deactivated.
        The auto value should be used for data with an unknown directionality, like data coming from user input, eventually stored in a database.

  - direction:
      t: [ marquee ]
      d: ""

  - disable:
      t: [ button ]
      d: |
        disabled
        
        This Boolean attribute indicates that the user cannot interact with the button. If this attribute is not specified, the button inherits its setting from the containing element, for example <fieldset>; if there is no containing element with the disabled attribute set, then the button is enabled.
        
        Firefox will, unlike other browsers, by default, persist the dynamic disabled state of a <button> across page loads. Use the autocomplete attribute to control this feature.

  - disabled:
      t: [ button ]
      d: ""

  - disabled:
      t: [ fieldset ]
      d: |
        disabled [HTML5]
        
        If this Boolean attribute is set, the form controls that are its descendants, except descendants of its first optional <legend> element, are disabled, i.e., not editable. They won't receive any browsing events, like mouse clicks or focus-related ones. Often browsers display such controls as gray.

  - disabled:
      t: [ input ]
      d: |
        disabled
        
        This Boolean attribute indicates that the form control is not available for interaction. In particular, the click event will not be dispatched on disabled controls. Also, a disabled control's value isn't submitted with the form.
        
        Firefox will, unlike other browsers, by default, persist the dynamic disabled state of an <input> across page loads. Use the autocomplete attribute to control this feature.

  - disabled:
      t: [ keygen ]
      d: |
        disabled
        
        This Boolean attribute indicates that the form control is not available for interaction.

  - disabled:
      t: [ link ]
      d: |
        disabled [!]
        
        This attribute is used to disable a link relationship. In conjunction with scripting, this attribute could be used to turn on and off various style sheet relationships.
        
        Note: 
        While there is no disabled attribute in the HTML standard, there is a disabled attribute on the HTMLLinkElement DOM object.
        
        The use of disabled as an HTML attribute is non-standard and only used by some browsers. Do not use it. To achieve a similar effect, use one of the following techniques:
        
          If the disabled attribute has been added directly to the element on the page, do not include the <link> element instead;
          Set the disabled property of the StyleSheet DOM object via scripting.

  - disabled:
      t: [ menuitem ]
      d: |
        disabled
        
        Boolean attribute which indicates that the command is not available in the current state. Note that disabled is distinct from hidden; the disabled attribute is appropriate in any context where a change in circumstances might render the command relevant.

  - disabled:
      t: [ optgroup ]
      d: |
        disabled
        
        If this Boolean attribute is set, none of the items in this option group is selectable. Often browsers grey out such control and it won't receive any browsing events, like mouse clicks or focus-related ones.

  - disabled:
      t: [ option ]
      d: |
        disabled
        
        If this Boolean attribute is set, this option is not checkable. Often browsers grey out such control and it won't receive any browsing event, like mouse clicks or focus-related ones. If this attribute is not set, the element can still be disabled if one its ancestors is a disabled <optgroup> element.

  - disabled:
      t: [ select ]
      d: |
        disabled
        
        This Boolean attribute indicates that the user cannot interact with the control. If this attribute is not specified, the control inherits its setting from the containing element, for example fieldset; if there is no containing element with the disabled attribute set, then the control is enabled.

  - disabled:
      t: [ style ]
      d: |
        disabled
        
        If set, disables (does not apply) the style rules to the Document that are specified within the element.

  - disabled:
      t: [ textarea ]
      d: |
        disabled
        
        This Boolean attribute indicates that the user cannot interact with the control. (If this attribute is not specified, the control inherits its setting from the containing element, for example <fieldset>; if there is no containing element with the disabled attribute set, then the control is enabled.)

  - download:
      t: [ a ]
      d: |
        download [HTML5]
        
        This attribute, if present, indicates that the author intends the hyperlink to be used for downloading a resource so that when the user clicks on the link they will be prompted to save it as a local file. If the attribute has a value, the value will be used as the pre-filled file name in the Save prompt that opens when the user clicks on the link (the user can change the name before actually saving the file of course). There are no restrictions on allowed values (though / and \ will be converted to underscores, preventing specific path hints), but you should consider that most file systems have limitations with regard to what punctuation is supported in file names, and browsers are likely to adjust file names accordingly.
        
        Note:
        
        Can be used with blob: URLs and data: URLs, to make it easy for users to download content that is generated programmatically using JavaScript (e.g. a picture created using an online drawing Web app).
        If the HTTP header Content-Disposition: is present and gives a different filename than this attribute, the HTTP header has priority over this attribute.
        If this attribute is present and Content-Disposition: is set to inline, Firefox gives priority to Content-Disposition, like for the filename case, while Chrome gives priority to the download attribute.
        In Firefox 20 this attribute is only honored for links to resources with the same-origin.

  - download:
      t: [ area ]
      d: |
        download [HTML5]
        
        This attribute, if present, indicates that the author intends the hyperlink to be used for downloading a resource. See <a> for a full description of the download attribute.

  - draggable:
      t: [ global ]
      d: |
        Defines whether the element can be dragged.
        
        This enumerated attribute indicates whether the element can be dragged, using the Drag and Drop API. It can have the following values:
        
        true, which indicates that the element may be dragged.
        false, which indicates that the element may not be dragged.
        
        If this attribute is not set, its default value is auto, meaning the behavior should be the one defined by default by the browser.
        
        Usage notes:
        This attribute is an enumerated one and not a Boolean one. This means that the explicit usage of one of the values true or false is mandatory and that a shorthand like <label draggable>Example Label</label> is not allowed. The correct usage is <label draggable="true">Example Label</label>.
        By default, only text selections, images, and links can be dragged. For all others elements, the event ondragstart must be set in order to the drag and drop mechanism to work, as shown in this comprehensive example.

  - dropzone:
      t: [ global ]
      d: |
        Indicates that the element accept the dropping of content on it.
        
        HTML5.
        Unimplemented.
        This enumerated attribute indicates what types of content can be dropped on an element, using the Drag and Drop API. It can have the following values:
        
        copy, which indicates that dropping will create a copy of the element that was dragged
        move, which indicates that the element that was dragged will be moved to this new location.
        link, will create a link to the dragged data.

  - enctype:
      t: [ form ]
      d: |
        enctype
        
        When the value of the method attribute is post, enctype is the MIME type of content that is used to submit the form to the server. Possible values are:
          application/x-www-form-urlencoded: The default value if the attribute is not specified.
          multipart/form-data: The value used for an <input> element with the type attribute set to "file".
          text/plain (HTML5)
        This value can be overridden by a formenctype attribute on a <button> or <input> element.

  - face:
      t: [ basefont ]
      d: ""

  - for:
      t: [ label ]
      d: |
        for
        
        The ID of a labelable form-related element in the same document as the label element. The first such element in the document with an ID matching the value of the for attribute is the labeled control for this label element.
        
        Note: 
        A label element can have both a for attribute and a contained control element, as long as the for attribute points to the contained control element.

  - for:
      t: [ output ]
      d: |
        for
        
        A list of IDs of other elements, indicating that those elements contributed input values to (or otherwise affected) the calculation.

  - form:
      t: [ button ]
      d: |
        form [HTML5]
        
        The form element that the button is associated with (its form owner). The value of the attribute must be the id attribute of a <form> element in the same document. If this attribute is not specified, the <button> element must be a descendant of a form element. This attribute enables you to place <button> elements anywhere within a document, not just as descendants of their <form> elements.

  - form:
      t: [ fieldset ]
      d: |
        form [HTML5]
        
        This attribute has the value of the id attribute of the <form> element its related to. Its default value is the id of the nearest <form> element it is a descendant of.

  - form:
      t: [ input ]
      d: |
        form [HTML5]
        
        The form element that the input element is associated with (its form owner). The value of the attribute must be an id of a <form> element in the same document. If this attribute is not specified, this <input> element must be a descendant of a <form> element. This attribute enables you to place <input> elements anywhere within a document, not just as descendants of their form elements. An input can only be associated with one form.

  - form:
      t: [ keygen ]
      d: |
        form
        
        The form element that this element is associated with (its form owner). The value of the attribute must be an id of a <form> element in the same document. If this attribute is not specified, this element must be a descendant of a <form> element. This attribute enables you to place <keygen> elements anywhere within a document, not just as descendants of their form elements.

  - form:
      t: [ label ]
      d: |
        form [HTML5]
        
        The form element that the label element is associated with (its form owner). The value of the attribute must be an ID of a <form> element in the same document. If this attribute is not specified, this <label> element must be a descendant of a <form> element. This attribute enables you to place label elements anywhere within a document, not just as descendants of their form elements.

  - form:
      t: [ meter ]
      d: |
        form
        
        This attribute associates the element with a form element that has ownership of the meter element. For example, a meter might be displaying a range corresponding to an input element of type number. This attribute is only used if the meter element is being used as a form-associated element; even then, it may be omitted if the element appears as a descendant of a form element.

  - form:
      t: [ object ]
      d: |
        form [HTML5]
        
        The form element, if any, that the object element is associated with (its form owner). The value of the attribute must be an ID of a <form> element in the same document.

  - form:
      t: [ output ]
      d: |
        form
        
        The form element that this element is associated with (its "form owner"). The value of the attribute must be an ID of a form element in the same document. If this attribute is not specified, the output element must be a descendant of a form element. This attribute enables you to place output elements anywhere within a document, not just as descendants of their form elements.

  - form:
      t: [ select ]
      d: |
        form [HTML5]
        
        The form element that the select element is associated with (its "form owner"). If this attribute is specified, its value must be the ID of a form element in the same document. This enables you to place select elements anywhere within a document, not just as descendants of their form elements.

  - form:
      t: [ textarea ]
      d: |
        form [HTML5]
        
        The form element that the textarea element is associated with (its "form owner"). The value of the attribute must be an ID of a form element in the same document. If this attribute is not specified, the textarea element must be a descendant of a form element. This attribute enables you to place textarea elements anywhere within a document, not just as descendants of their form elements.

  - formaction:
      t: [ button ]
      d: |
        formaction [HTML5]
        
        The URI of a program that processes the information submitted by the button. If specified, it overrides the action attribute of the button's form owner.

  - formaction:
      t: [ input ]
      d: |
        formaction [HTML5]
        
        The URI of a program that processes the information submitted by the input element, if it is a submit button or image. If specified, it overrides the action attribute of the element's form owner.

  - formenctype:
      t: [ button ]
      d: |
        formenctype [HTML5]
        
        If the button is a submit button, this attribute specifies the type of content that is used to submit the form to the server. Possible values are:
          application/x-www-form-urlencoded: The default value if the attribute is not specified.
          multipart/form-data: Use this value if you are using an <input> element with the type attribute set to file.
          text/plain
          
        If this attribute is specified, it overrides the enctype attribute of the button's form owner.

  - formenctype:
      t: [ input ]
      d: |
        formenctype [HTML5]
        
        If the input element is a submit button or image, this attribute specifies the type of content that is used to submit the form to the server. Possible values are:
          application/x-www-form-urlencoded: The default value if the attribute is not specified.
          multipart/form-data: Use this value if you are using an <input> element with the type attribute set to file.
          text/plain
        
        If this attribute is specified, it overrides the enctype attribute of the element's form owner.

  - formmethod:
      t: [ button ]
      d: |
        formmethod [HTML5]
        
        If the button is a submit button, this attribute specifies the HTTP method that the browser uses to submit the form. Possible values are:
        
          post: The data from the form is included in the body of the form and is sent to the server.
          get: The data from the form are appended to the form attribute URI, with a '?' as a separator, and the resulting URI is sent to the server. Use this method when the form has no side-effects and contains only ASCII characters.
        
        If specified, this attribute overrides the method attribute of the button's form owner.

  - formmethod:
      t: [ input ]
      d: |
        formmethod [HTML5]
        
        If the input element is a submit button or image, this attribute specifies the HTTP method that the browser uses to submit the form. Possible values are:
          post: The data from the form is included in the body of the form and is sent to the server.
          get: The data from the form are appended to the form attribute URI, with a '?' as a separator, and the resulting URI is sent to the server. Use this method when the form has no side-effects and contains only ASCII characters.
          
        If specified, this attribute overrides the method attribute of the element's form owner.

  - formnovalidate:
      t: [ button ]
      d: ""

  - formnovalidate:
      t: [ input ]
      d: |
        formnovalidate [HTML5]
        
        If the input element is a submit button or image, this Boolean attribute specifies that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the novalidate attribute of the element's form owner.

  - formtarget:
      t: [ button ]
      d: |
        formtarget [HTML5]
        
        If the button is a submit button, this attribute is a name or keyword indicating where to display the response that is received after submitting the form. This is a name of, or keyword for, a browsing context (for example, tab, window, or inline frame). If this attribute is specified, it overrides the target attribute of the button's form owner. The following keywords have special meanings:
          _self: Load the response into the same browsing context as the current one. This value is the default if the attribute is not specified.
          _blank: Load the response into a new unnamed browsing context.
          _parent: Load the response into the parent browsing context of the current one. If there is no parent, this option behaves the same way as _self.
          _top: Load the response into the top-level browsing context (that is, the browsing context that is an ancestor of the current one, and has no parent). If there is no parent, this option behaves the same way as _self.

  - formtarget:
      t: [ input ]
      d: |
        formtarget [HTML5]
        
        If the input element is a submit button or image, this attribute is a name or keyword indicating where to display the response that is received after submitting the form. This is a name of, or keyword for, a browsing context (for example, tab, window, or inline frame). If this attribute is specified, it overrides the target attribute of the elements's form owner. The following keywords have special meanings:
          _self: Load the response into the same browsing context as the current one. This value is the default if the attribute is not specified.
          _blank: Load the response into a new unnamed browsing context.
          _parent: Load the response into the parent browsing context of the current one. If there is no parent, this option behaves the same way as _self.
          _top: Load the response into the top-level browsing context (that is, the browsing context that is an ancestor of the current one, and has no parent). If there is no parent, this option behaves the same way as _self.

  - formvalidate:
      t: [ button ]
      d: |
        formvalidate [HTML5]
        
        If the button is a submit button, this Boolean attribute specifies that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the novalidate attribute of the button's form owner.

  - frameborder:
      t: [ frame ]
      d: |
        frameborder [Deprecated]
        
        This attribute allows you to put borders for frames.

  - frameborder:
      t: [ iframe ]
      d: |
        frameborder [HTML4 only]
        
        The value 1 (the default) tells the browser to draw a border between this frame and every other frame. The value 0 tells the browser not to draw a border between this frame and other frames.

  - headers:
      t: [ td ]
      d: |
        headers
        
        This attribute contains a list of space-separated strings, each corresponding to the id attribute of the <th> elements that apply to this element.

  - headers:
      t: [ th ]
      d: |
        headers
        
        This attributes a list of space-separated strings, each corresponding to the id attribute of the <th> elements that applies to this element.

  - height:
      t: [ applet ]
      d: ""

  - height:
      t: [ canvas ]
      d: |
        height
        
        The height of the coordinate space in CSS pixels. Defaults to 150.

  - height:
      t: [ embed ]
      d: |
        height
        
        The displayed height of the resource, in CSS pixels.

  - height:
      t: [ iframe ]
      d: |
        height
        
        Indicates the height of the frame HTML5 in CSS pixels, or HTML 4.01 in pixels or as a percentage.

  - height:
      t: [ img ]
      d: |
        height
        
        The height of the image in HTML5 CSS pixels, or HTML 4 in pixels or as a percentage.

  - height:
      t: [ input ]
      d: |
        height [HTML5]
        
        If the value of the type attribute is image, this attribute defines the height of the image displayed for the button.

  - height:
      t: [ marquee ]
      d: ""

  - height:
      t: [ object ]
      d: |
        height
        
        The height of the displayed resource, in CSS pixels.

  - height:
      t: [ spacer ]
      d: ""

  - height:
      t: [ video ]
      d: |
        height
        
        The height of the video's display area, in CSS pixels.

  - hidden:
      t: [ global ]
      d: |
        Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
        
        This Boolean attribute indicates that the element is not yet, or is no longer, relevant. For example, it can be used to hide elements of the page that can't be used until the login process has been completed. The browser won't render such elements.
        
        Usage notes:
        This attribute must not be used to hide content that could legitimately be shown. For example, it shouldn't be used to hide tabs panels of a tabbed interface, as this is a styling decision and another style showing them would lead to a perfectly correct page.
        Hidden elements shouldn't be linked from non-hidden elements.
        Elements that are descendants of a hidden element are still active, which means that script elements can still execute and form elements can still submit.
        Changing the display CSS value of an element with the hidden attribute overrides the behavior. For instance, an element styled display: flex will be displayed on screen regardless of the hidden attribute being present.

  - high:
      t: [ meter ]
      d: |
        high
        
        The lower numeric bound of the high end of the measured range. This must be less than the maximum value (max attribute), and it also must be greater than the low value and minimum value (low attribute and min attribute, respectively), if any are specified. If unspecified, or if greater than the maximum value, the high value is equal to the maximum value.

  - href:
      t: [ a ]
      d: |
        This was the single required attribute for anchors defining a hypertext source link, but is no longer required in HTML5. Omitting this attribute creates a placeholder link. The href attribute indicates the link target, either a URL or a URL fragment. A URL fragment is a name preceded by a hash mark (#), which specifies an internal target location (an ID) within the current document. URLs are not restricted to Web (HTTP)-based documents. URLs might use any protocol supported by the browser. For example, file, ftp, and mailto work in most user agents.
        
        Note: 
        
        You can use the special fragment "top" to create a link back to the top of the page; for example <a href="#top">Return to top</a>. This behavior is specified by HTML5.

  - href:
      t: [ area ]
      d: |
        href
        
        The hyperlink target for the area. Its value is a valid URL. In HTML4, either this attribute or the nohref attribute must be present in the element. In HTML5, this attribute may be omitted; if so, the area element does not represent a hyperlink.

  - href:
      t: [ base ]
      d: |
        href
        
        The base URL to be used throughout the document for relative URL addresses. If this attribute is specified, this element must come before any other elements with attributes whose values are URLs.
        Absolute and relative URIs are allowed (but see note section below).

  - href:
      t: [ link ]
      d: |
        href
        
        This attribute specifies the URL of the linked resource. A URL might be absolute or relative.

  - hreflang:
      t: [ a ]
      d: |
        hreflang
        
        This attribute indicates the language of the linked resource. It is purely advisory. Allowed values are determined by BCP47 for HTML5 and by RFC1766 for HTML4. Use this attribute only if the href attribute is present.

  - hreflang:
      t: [ area ]
      d: |
        hreflang [HTML5]
        
        Indicates the language of the linked resource. Allowed values are determined by BCP47. Use this attribute only if the href attribute is present.

  - hreflang:
      t: [ link ]
      d: |
        hreflang
        
        This attribute indicates the language of the linked resource. It is purely advisory. Allowed values are determined by BCP47 for HTML5 and by RFC1766 for HTML 4. Use this attribute only if the href attribute is present.

  - hspace:
      t: [ applet ]
      d: ""

  - hspace:
      t: [ marquee ]
      d: ""

  - hspace:
      t: [ img ]
      d: |
        hspace [Deprecated since HTML4.01] [Obsolete since HTML5]
        
        The number of pixels of white space to insert to the left and right of the image.

  - http-equiv:
      t: [ meta ]
      d: |
        http-equiv
        
        This enumerated attribute defines the pragma that can alter servers and user-agents behavior. The value of the pragma is defined using the content and can be one of the following:
        
        content-language [Trashed]
        This pragma defines the default language of the page.
        Usage note: 
        do not use this pragma as it is obsolete. Use the global lang attribute on the <body> element instead.
        
        content-type [Trashed]
        This attribute defines the MIME type of the document, eventually followed by its character set. It follows the same syntax as the HTTP content-type entity-header field, but as it is inside an HTML Element, most values are not possible. Therefore the valid syntax for its content is the literal string 'text/html' eventually followed by a character set with the following syntax:'; charset=IANAcharset' where IANAcharset is the preferred MIME name for a character set as defined by the IANA.
        Usage note:
          Do not use this pragma as it is obsolete. Use the charset attribute on the <meta> element instead.
          As the <meta> may not be used to change the type of a document in an XHTML document, or in an HTML5 document following the XHTML syntax, never set MIME type to an XHTML MIME type that way. It would be incorrect.
          Only an HTML document can use the content-type, so most of it is redundant: that's why it has been obsoleted and replaced by the charset attribute.
          
        default-style
        This pragma specifies the preferred stylesheet to be used on the page. The content attribute must contain the id of a <link> element whose href attribute links to a CSS stylesheet, or the id of a <style> element which contains a CSS stylesheet.
        
        refresh
        This pragma specifies:
        the number of seconds until the page should be reloaded, if the content attribute contains only a positive integer number;
        the number of seconds until the page should be redirected to another, if the content attribute contains a positive integer number followed by the string ';url=' and a valid URL.
        
        set-cookie [Trashed]
        This pragma defines a cookie for the page. Its content must follows the syntax defines in the IETF HTTP Cookie Specification.
        Note: 
        Do not use this pragma as it is obsolete. Use the HTTP header set-cookie instead.

  - icon:
      t: [ menuitem ]
      d: |
        icon
        
        Image URL, used to provide a picture to represent the command.

  - id:
      t: [ global ]
      d: |
        id
        
        This attribute defines a unique identifier (ID) which must be unique in the whole document. Its purpose is to identify the element when linking (using a fragment identifier), scripting, or styling (with CSS).
        
        Usage note:
        This attribute's value is an opaque string: this means that web author must not use it to convey any information. Particular meaning, for example semantic meaning, must not be derived from the string.
        This attribute's value must not contain white spaces. Browsers treat non-conforming IDs that contains white spaces as if the white space is part of the ID. In contrast to the class attribute, which allows space-separated values, elements can only have one single ID defined through the id attribute. Note that an element may have several IDs, but the others should be set by another means, such as via a script interfacing with the DOM interface of the element.
        Using characters except ASCII letters and digits, '_', '-' and '.' may cause compatibility problems, as they weren't allowed in HTML 4. Though this restriction has been lifted in HTML 5, an ID should start with a letter for compatibility.

  - incremental:
      t: [ input ]
      d: |
        incremental [!]
        
        This is a nonstandard attribute supported by Safari that only applies when the type is search. If the attribute is present, regardless of what its value is, the <input> fires search events as the user edits the text value. The event is only fired after an implementation-defined timeout has elapsed since the most recent keystroke; new keystrokes reset the timeout. In other words, the event firing is debounced. If the attribute is absent, the search event is only fired when the user explicitly initiates a search (e.g. by pressing the Enter key while within field).

  - inputmode:
      t: [ input ]
      d: |
        inputmode [HTML5]
        
        A hint to the browser for which keyboard to display. This attribute applies when the value of the type attribute is text, password, email, or url.

  - ismap:
      t: [ img ]
      d: |
        ismap
        
        This Boolean attribute indicates that the image is part of a server-side map. If so, the precise coordinates of a click are sent to the server.
        
        Usage note: 
        This attribute is allowed only if the <img> element is a descendant of an <a> element with a valid href attribute.

  - itemid:
      t: [ global ]
      d: ""

  - itemprop:
      t: [ global ]
      d: ""

  - itemprop:
      t: [ meta ]
      d: ""

  - itemref:
      t: [ global ]
      d: ""

  - itemscope:
      t: [ global ]
      d: ""

  - itemtype:
      t: [ global ]
      d: ""

  - keytype:
      t: [ keygen ]
      d: |
        keytype
        
        The type of key generated. The default value is RSA.

  - kind:
      t: [ track ]
      d: |
        kind
        
        How the text track is meant to be used. If omitted the default kind is subtitles.

  - label:
      t: [ menu ]
      d: |
        label
        
        The name of the menu as shown to the user. Used within nested menus, to provide a label through which the submenu can be accessed. Must only be specified when the parent element is a <menu> in the popup menu state.

  - label:
      t: [ menuitem ]
      d: |
        label
        
        The name of the command as shown to the user. Required when a command attribute is not present.

  - label:
      t: [ optgroup ]
      d: |
        label
        
        The name of the group of options, which the browser can use when labeling the options in the user interface. This attribute is mandatory if this element is used.

  - label:
      t: [ option ]
      d: |
        label
        
        This attribute is text for the label indicating the meaning of the option. If the label attribute isn't defined, its value is that of the element text content.
        Usage note: 
        the label attribute is designed to contain a short label typically used in a hierarchical menu. The value attribute describes a longer label designed to be used near a radio button, for example.

  - label:
      t: [ track ]
      d: |
        label
        
        A user-readable title of the text track which is used by the browser when listing available text tracks.

  - lang:
      t: [ global ]
      d: |
        Defines the language used in the element.
        
        This attribute participates in defining the language of the element, the language that non-editable elements are written in or the language that editable elements should be written in. The tag contains one single entry value in the format defines in the Tags for Identifying Languages (BCP47) IETF document. If the tag content is the empty string the language is set to unknown; if the tag content is not valid, regarding to BCP47, it is set to invalid.
        
        Usage note:
        Even if the lang attribute is set, it may not be taken into account, as the xml:lang attribute has priority. Read the algorithm determining the language of an element's content to see how the language is determined in all cases.
        For the CSS pseudo-class :lang, two invalid language names are different if their names are different.

  - language:
      t: [ script ]
      d: |
        language [Deprecated]
        
        Like the type attribute, this attribute identifies the scripting language in use. Unlike the type attribute, however, this attribute’s possible values were never standardized. The type attribute should be used instead.

  - list:
      t: [ input ]
      d: |
        list [HTML5]
        
        Identifies a list of pre-defined options to suggest to the user. The value must be the id of a <datalist> element in the same document. The browser displays only options that are valid values for this input element. This attribute is ignored when the type attribute's value is hidden, checkbox, radio, file, or a button type.s

  - longdesc:
      t: [ iframe ]
      d: |
        longdesc [HTML4 only]
        
        A URI of a long description of the frame. Due to widespread misuse, this is not helpful for non-visual browsers.

  - longdesc:
      t: [ img ]
      d: |
        longdesc [HTML4 only]
        
        The URL of a description of the image to be displayed, which supplements the alt text. In HTML5, use a regular <a> element to link to the description.

  - loop:
      t: [ audio ]
      d: |
        loop
        
        A Boolean attribute; if specified, we will, upon reaching the end of the audio, automatically seek back to the start.

  - loop:
      t: [ bgsound ]
      d: ""

  - loop:
      t: [ marquee ]
      d: ""

  - loop:
      t: [ video ]
      d: |
        loop
        
        A Boolean attribute; if specified, we will, upon reaching the end of the video, automatically seek back to the start.

  - low:
      t: [ meter ]
      d: |
        low
        
        The upper numeric bound of the low end of the measured range. This must be greater than the minimum value (min attribute), and it also must be less than the high value and maximum value (high attribute and max attribute, respectively), if any are specified. If unspecified, or if less than the minimum value, the low value is equal to the minimum value.
        

  - manifest:
      t: [ html ]
      d: |
        manifest [HTML5]
        
        Specifies the URI of a resource manifest indicating resources that should be cached locally. See Using the application cache for details.

  - marginheight:
      t: [ frame ]
      d: |
        marginheight [Deprecated]
        
        This attribute defines how tall the margin between frames will be.

  - marginheight:
      t: [ iframe ]
      d: |
        marginheight [HTML4 only]
        
        The amount of space in pixels between the frame's content and its top and bottom margins.

  - marginwidth:
      t: [ frame ]
      d: |
        marginwidth [Deprecated]
        
        This attribute defines how wide the margin between frames will be.

  - marginwidth:
      t: [ iframe ]
      d: |
        marginwidth [HTML4 only]
        
        The amount of space in pixels between the frame's content and its left and right margins.

  - max:
      t: [ input ]
      d: |
        max [HTML5]
        
        The maximum (numeric or date-time) value for this item, which must not be less than its minimum (min attribute) value.

  - max:
      t: [ meter ]
      d: |
        max
        
        The upper numeric bound of the measured range. This must be greater than the minimum value (min attribute), if specified. If unspecified, the maximum value is 1.

  - max:
      t: [ progress ]
      d: |
        max
        
        This attribute describes how much work the task indicated by the progress element requires. The max attribute, if present, must have a value greater than zero and be a valid floating point number.

  - maxlength:
      t: [ input ]
      d: |
        maxlength
        
        If the value of the type attribute is text, email, search, password, tel, or url, this attribute specifies the maximum number of characters (in Unicode code points) that the user can enter; for other control types, it is ignored. It can exceed the value of the size attribute. If it is not specified, the user can enter an unlimited number of characters. Specifying a negative number results in the default behavior; that is, the user can enter an unlimited number of characters. The constraint is evaluated only when the value of the attribute has been changed.

  - maxlength:
      t: [ textarea ]
      d: |
        maxlength [HTML5]
        
        The maximum number of characters (Unicode code points) that the user can enter. If it is not specified, the user can enter an unlimited number of characters.

  - mayscript:
      t: [ applet ]
      d: ""

  - media:
      t: [ a ]
      d: |
        media [html5]
        
        This attribute specifies the media which the linked resource applies to. Its value must be a media query. This attribute is mainly useful when linking to external stylesheets by allowing the user agent to pick the best adapted one for the device it runs on.
        
        Usage note:
        
        In HTML 4, only simple white-space-separated list of media description literals, i.e. media types and groups, where defined and allowed as values for this attribute, like print, screen, aural, braille, ... HTML 5 extended this to any kind of media queries, which are a superset of the allowed values of HTML 4.
        Browsers not supporting the CSS3 Media Queries won't necessarily recognize the adequate link; do not forget to set fallback links, the restricted set of media queries defined in HTML 4.

  - media:
      t: [ area ]
      d: |
        media [HTML5]
        
        A hint of the media for which the linked resource was designed, for example print and screen. If omitted, it defaults to all. Use this attribute only if the href attribute is present.

  - media:
      t: [ link ]
      d: |
        media
        
        This attribute specifies the media which the linked resource applies to. Its value must be a media query. This attribute is mainly useful when linking to external stylesheets by allowing the user agent to pick the best adapted one for the device it runs on.
        
        Usage note:
          In HTML 4, this can only be a simple white-space-separated list of media description literals, i.e., media types and groups, where defined and allowed as values for this attribute, such as print, screen, aural, braille. HTML5 extended this to any kind of media queries, which are a superset of the allowed values of HTML 4.
          Browsers not supporting the CSS3 Media Queries won't necessarily recognize the adequate link; do not forget to set fallback links, the restricted set of media queries defined in HTML 4.

  - media:
      t: [ source ]
      d: |
        media [Experimental]
        
        Media query of the resource's intended media; this should be used only in a <picture> element.

  - media:
      t: [ style ]
      d: |
        media
        
        Which media should this style apply to. Should be a media query, see http://dev.w3.org/csswg/css3-mediaqueries.

  - method:
      t: [ form ]
      d: |
        method
        
        The HTTP method that the browser uses to submit the form. Possible values are:
          post: Corresponds to the HTTP POST method ; form data are included in the body of the form and sent to the server.
          get: Corresponds to the HTTP GET method; form data are appended to the action attribute URI with a '?' as separator, and the resulting URI is sent to the server. Use this method when the form has no side-effects and contains only ASCII characters.
        This value can be overridden by a formmethod attribute on a <button> or <input> element.

  - methods:
      t: [ a ]
      d: |
        methods [!]
        
        The value of this attribute provides information about the functions that might be performed on an object. The values generally are given by the HTTP protocol when it is used, but it might (for similar reasons as for the title attribute) be useful to include advisory information in advance in the link. For example, the browser might choose a different rendering of a link as a function of the methods specified; something that is searchable might get a different icon, or an outside link might render with an indication of leaving the current site. This attribute is not well understood nor supported, even by the defining browser, Internet Explorer 4. Methods Property (MSDN)

  - methods:
      t: [ link ]
      d: |
        methods [!]
        
        The value of this attribute provides information about the functions that might be performed on an object. The values generally are given by the HTTP protocol when it is used, but it might (for similar reasons as for the title attribute) be useful to include advisory information in advance in the link. For example, the browser might choose a different rendering of a link as a function of the methods specified; something that is searchable might get a different icon, or an outside link might render with an indication of leaving the current site. This attribute is not well understood nor supported, even by the defining browser, Internet Explorer 4. See Methods Property (MSDN).

  - min:
      t: [ input ]
      d: |
        min [HTML5]
        
        The minimum (numeric or date-time) value for this item, which must not be greater than its maximum (max attribute) value.

  - min:
      t: [ meter ]
      d: |
        min
        
        The lower numeric bound of the measured range. This must be less than the maximum value (max attribute), if specified. If unspecified, the minimum value is 0.

  - minlength:
      t: [ input ]
      d: |
        minlength [HTML5]
        
        If the value of the type attribute is text, email, search, password, tel, or url, this attribute specifies the minimum number of characters (in Unicode code points) that the user can enter; for other control types, it is ignored.

  - minlength:
      t: [ textarea ]
      d: |
        minlength [HTML5]
        
        The minimum number of characters (Unicode code points) required that the user should enter.

  - mosCurrentSampleOffset:
      t: [ audio ]
      d: ""

  - moz-opaque:
      t: [ canvas ]
      d: |
        moz-opaque
        
        Lets the canvas know whether or not translucency will be a factor. If the canvas knows there's no translucency, painting performance can be optimized.

  - mozCurrentSampleOffset:
      t: [ audio ]
      d: |
        mozCurrentSampleOffset
        
        The offset, specified as the number of samples since the beginning of the audio stream, at which the audio is currently playing.

  - mozactionhint:
      t: [ input ]
      d: |
        mozactionhint [!]
        
        Specifies an "action hint" used to determine how to label the enter key on mobile devices with virtual keyboards. Supported values are go, done, next, search, and send; these automatically get mapped to the appropriate string (and are case-insensitive).

  - mozallowfullscreen:
      t: [ iframe ]
      d: |
        mozallowfullscreen [!] [Deprecated]
        
        Use allowfullscreen instead. In Gecko 9.0 or later, this attribute can be set to true if the frame is allowed to be placed into full screen mode by calling its element.mozRequestFullScreen() method. If this isn't set, the element can't be placed into full screen mode.

  - mozapp:
      t: [ iframe ]
      d: |
        mozapp [!] [Only available on Firefox OS]
        
        For frames hosting an open web app, this specifies the URL of the app manifest. This ensures that the app is loaded with the right permissions. See Using the Browser API for details. Available in Gecko 13.0 and later.

  - mozbrowser:
      t: [ iframe ]
      d: |
        mozbrowser [!] [Only available on Firefox OS]
        
        Indicates that the frame is to appear like a top-level browser window to the embedded content. This means that window.top, window.parent, window.frameElement, etc. will not reflect the frame hierarchy. This allows for a web browser UI to be implemented entirely with web technology, given the right permissions. See Using the Browser API for details. Available in Gecko 13.0 and later.

  - multiple:
      t: [ input ]
      d: |
        multiple [HTML5]
        
        This Boolean attribute indicates whether the user can enter more than one value. This attribute applies when the type attribute is set to email or file; otherwise it is ignored.

  - multiple:
      t: [ select ]
      d: |
        multiple
        
        This Boolean attribute indicates that multiple options can be selected in the list. If it is not specified, then only one option can be selected at a time.

  - muted:
      t: [ audio ]
      d: |
        A Boolean attribute which indicates whether the audio will be initially silenced. Its default value is false, meaning that the audio will be played.

  - muted:
      t: [ video ]
      d: |
        muted
        
        A Boolean attribute which indicates the default setting of the audio contained in the video. If set, the audio will be initially silenced. Its default value is false, meaning that the audio will be played when the video is played.

  - name:
      t: [ a ]
      d: |
        name [HTML4 only] [Obsolete since HTML5]
        
        This attribute is required in an anchor defining a target location within a page. A value for name is similar to a value for the id core attribute and should be an alphanumeric identifier unique to the document. Under the HTML 4.01 specification, id and name both can be used with the <a> element as long as they have identical values.
        
        Usage note: 
        
        This attribute is obsolete in HTML5, use global attribute id instead.

  - name:
      t: [ applet ]
      d: ""

  - name:
      t: [ button ]
      d: |
        name
        
        The name of the button, which is submitted with the form data.

  - name:
      t: [ fieldset ]
      d: |
        name [HTML5]
        
        The name associated with the group, which is submitted with the form data.
        
        The label for the field set is given by the first <legend> element that is a child of this field set.

  - name:
      t: [ form ]
      d: |
        name
        
        The name of the form. In HTML 4,its use is deprecated (id should be used instead). It must be unique among the forms in a document and not just an empty string in HTML 5.

  - name:
      t: [ frame ]
      d: |
        name [Deprecated]
        
        This attribute is used to labeling frames. Without labeling all links will open in the frame that they are in.

  - name:
      t: [ iframe ]
      d: |
        name
        
        A name for the embedded browsing context (or frame). This can be used as the value of the target attribute of an <a> or <form> element, or the formtarget attribute of an <input> or <button> element.

  - name:
      t: [ input, keygen ]
      d: |
        name
        
        The name of the control, which is submitted with the form data.

  - name:
      t: [ map ]
      d: |
        name
        
        The name attribute gives the map a name so that it can be referenced. The attribute must be present and must have a non-empty value with no space characters. The value of the name attribute must not be a compatibility-caseless match for the value of the name attribute of another map element in the same document. If the id attribute is also specified, both attributes must have the same value.

  - name:
      t: [ meta ]
      d: |
        name
        
        This attribute defines the name of a document-level metadata. It should not be set if one of the attributes itemprop, http-equiv or charset is also set.
        This document-level metadata name is associated with a value, contained by the content attribute.

  - name:
      t: [ object ]
      d: |
        The name of valid browsing context (HTML5), or the name of the control (HTML 4).

  - name:
      t: [ output ]
      d: |
        name
        
        The name of the element.

  - name:
      t: [ param ]
      d: |
        name
        
        Name of the parameter.

  - name:
      t: [ select, textarea ]
      d: |
        name
        
        The name of the control.

  - name:
      t: [ area ]
      d: |
        name [HTML4 only] [Obsolete since Gecko 5.0]
        
        Define a names for the clickable area so that it can be scripted by older browsers.

  - name:
      t: [ img ]
      d: |
        name [Deprecated since HTML4.01] [Obsolete since HTML5]
        
        A name for the element. It is supported in HTML 4 only for backward compatibility. Use the id attribute instead.

  - nohref:
      t: [ area ]
      d: |
        nohref [HTML4 only] [Obsolete since Gecko 5.0]
        
        Indicates that no hyperlink exists for the associated area. Either this attribute or the href attribute must be present in the element.
        
        Usage note: 
        This attribute is obsolete in HTML5, instead omitting the href attribute is sufficient.

  - noresize:
      t: [ frame ]
      d: |
        noresize [Deprecated]
        
        This attribute avoid resizing of frames by users.

  - noshade:
      t: [ hr ]
      d: |
        noshade [Deprecated since HTML4.01] [Obsolete since HTML5]
        
        Sets the rule to have no shading.

  - novalidate:
      t: [ form ]
      d: |
        no-validate [HTML5]
        
        This Boolean attribute indicates that the form is not to be validated when submitted. If this attribute is not specified (and therefore the form is validated), this default setting can be overridden by a formnovalidate attribute on a <button> or <input> element belonging to the form.

  - nowrap:
      t: [ dd ]
      d: |
        nowrap [!]
        
        If the value of this attribute is set to yes, the definition text will not wrap. The default value is no.

  - object:
      t: [ applet ]
      d: ""

  - open:
      t: [ details ]
      d: |
        open
        
        This Boolean attribute indicates whether the details will be shown to the user on page load. Default is false and so details will be hidden.

  - open:
      t: [ dialog ]
      d: |
        open
        
        Indicates that the dialog is active and available for interaction. When the open attribute is not set, it shouldn't be shown to the user.

  - optimum:
      t: [ meter ]
      d: |
        optimum
        
        This attribute indicates the optimal numeric value. It must be within the range (as defined by the min attribute and max attribute). When used with the low attribute and high attribute, it gives an indication where along the range is considered preferable. For example, if it is between the min attribute and the low attribute, then the lower range is considered preferred.

  - pattern:
      t: [ input ]
      d: |
        pattern [HTML5]
        
        A regular expression that the control's value is checked against. The pattern must match the entire value, not just some subset. Use the title attribute to describe the pattern to help the user. This attribute applies when the value of the type attribute is text, search, tel, url or email; otherwise it is ignored. The regular expression language is the same as JavaScript's. The pattern is not surrounded by forward slashes.

  - ping:
      t: [ a ]
      d: |
        ping [html5]
        
        The 'ping' attribute, if present, sends the URLs of the resources a notification/ping if the user follows the hyperlink.

  - placeholder:
      t: [ input ]
      d: |
        placeholder [HTML5]
        
        A hint to the user of what can be entered in the control . The placeholder text must not contain carriage returns or line-feeds. This attribute applies when the value of the type attribute is text, search, tel, url or email; otherwise it is ignored.
        
        Note:
        Do not use the placeholder attribute instead of a <label> element. Their purposes are different: the <label> attribute describes the role of the form element; that is, it indicates what kind of information is expected, the placeholder attribute is a hint about the format the content should take. There are cases in which the placeholder attribute is never displayed to the user, so the form must be understandable without it.

  - placeholder:
      t: [ textarea ]
      d: |
        placeholder [HTML5]
        
        A hint to the user of what can be entered in the control. The placeholder text must not contain carriage returns or line-feeds.

  - played:
      t: [ audio ]
      d: |
        A TimeRanges object indicating all the ranges of the audio that have been played.

  - played:
      t: [ video ]
      d: |
        played
        
        A TimeRanges object indicating all the ranges of the video that have been played.

  - poster:
      t: [ video ]
      d: |
        poster
        
        A URL indicating a poster frame to show until the user plays or seeks. If this attribute isn't specified, nothing is displayed until the first frame is available; then the first frame is displayed as the poster frame.

  - preload:
      t: [ audio ]
      d: |
        preload
        
        This enumerated attribute is intended to provide a hint to the browser about what the author thinks will lead to the best user experience. It may have one of the following values:
          none: hints that either the author thinks that the user won't need to consult that audio or that the server wants to minimize its traffic; in others terms this hint indicates that the audio should not be cached;
          metadata: hints that though the author thinks that the user won't need to consult that audio, fetching the metadata (e.g. length) is reasonable;
          auto: hints that the user needs have priority; in others terms this hint indicated that, if needed, the whole audio could be downloaded, even if the user is not expected to use it;
          the empty string: which is a synonym of the auto value.
        
        If not set, its default value is browser-defined (i.e. each browser can choose its own default value), though the spec advises it to be set to metadata.
        
        Usage notes:
        
        The autoplay attribute has precedence over this one as if one wants to automatically play a audio, the browser will obviously need to download it. Setting both the autoplay and the preload attributes is allowed by the specification.
        The browser is not forced by the specification to follow the value of this attribute; it is a mere hint.

  - preload:
      t: [ video ]
      d: |
        preload
        
        This enumerated attribute is intended to provide a hint to the browser about what the author thinks will lead to the best user experience. It may have one of the following values:
          none: hints that either the author thinks that the user won't need to consult that video or that the server wants to minimize its traffic; in others terms this hint indicates that the video should not be cached.
          metadata: hints that though the author thinks that the user won't need to consult that video, fetching the metadata (e.g. length) is reasonable.
          auto: hints that the user needs have priority; in others terms this hint indicated that, if needed, the whole video could be downloaded, even if the user is not expected to use it.
          the empty string: which is a synonym of the auto value.
        
        If not set, its default value is browser-defined (i.e. each browser can choose its own default value), though the spec advises it to be set to metadata.
        
        Usage notes:
          The autoplay attribute has precedence over this one as if one wants to automatically play a video, the browser will obviously need to download it. Setting both the autoplay and the preload attributes is allowed by the specification.
          The browser is not forced by the specification to follow the value of this attribute; it is a mere hint.

  - profile:
      t: [ head ]
      d: |
        profile [HTML4 only] [Trash in HTML5]
        
        The URIs of one or more metadata profiles, separated by white space.

  - prompt:
      t: [ isindex ]
      d: ""

  - prompt:
      t: [ insindex ]
      d: |
        prompt [Deprecated]
        
        This attribute adds its value as a prompt for text field.

  - radiogroup:
      t: [ menuitem ]
      d: |
        radiogroup
        
        This attribute specifies the name of a group of commands to be toggled as radio buttons when selected. May only be used where the type attribute is radio.

  - readonly:
      t: [ input ]
      d: |
        readonly
        
        This Boolean attribute indicates that the user cannot modify the value of the control.
        [HTML5] This attribute is ignored if the value of the type attribute is hidden, range, color, checkbox, radio, file, or a button type.

  - readonly:
      t: [ textarea ]
      d: |
        readonly
        
        This Boolean attribute indicates that the user cannot modify the value of the control. Unlike the disabled attribute, the readonly attribute does not prevent the user from clicking or selecting in the control. The value of a read-only control is still submitted with the form.

  - ref:
      t: [ area ]
      d: |
        rel [HTML5]
        
        For anchors containing the href attribute, this attribute specifies the relationship of the target object to the link object. The value is a comma-separated list of link types values. The values and their semantics will be registered by some authority that might have meaning to the document author. The default relationship, if no other is given, is void. Use this attribute only if the href attribute is present.

  - rel:
      t: [ a ]
      d: |
        rel
        
        For anchors containing the href attribute, this attribute specifies the relationship of the target object to the link object. The value is a comma-separated list of link types values. The values and their semantics will be registered by some authority that might have meaning to the document author. The default relationship, if no other is given, is void. Use this attribute only if the href attribute is present.

  - rel:
      t: [ area ]
      d: ""

  - rel:
      t: [ link ]
      d: |
        rel
        
        This attribute names a relationship of the linked document to the current document. The attribute must be a space-separated list of the link types values. The most common use of this attribute is to specify a link to an external style sheet: the rel attribute is set to stylesheet, and the href attribute is set to the URL of an external style sheet to format the page. WebTV also supports the use of the value next for rel to preload the next page in a document series.

  - remote:
      t: [ iframe ]
      d: |
        remote [!] [Only available on Firefox OS]
        
        Load the frame's page in a separate content process.

  - required:
      t: [ input ]
      d: |
        required [HTML5]
        
        This attribute specifies that the user must fill in a value before submitting a form. It cannot be used when the type attribute is hidden, image, or a button type (submit, reset, or button). The :optional and :required CSS pseudo-classes will be applied to the field as appropriate.

  - required:
      t: [ select ]
      d: |
        required [HTML5]
        
        A Boolean attribute indicating that an option with a non-empty string value must be selected.

  - required:
      t: [ textarea ]
      d: |
        required [HTML5]
        
        This attribute specifies that the user must fill in a value before submitting a form.

  - rev:
      t: [ a ]
      d: |
        rev [HTML4 only] [Obsolete since HTML5]
        
        This attribute specifies a reverse link, the inverse relationship of the rel attribute. It is useful for indicating where an object came from, such as the author of a document.

  - rev:
      t: [ link ]
      d: |
        rev [Trashed]
        
        The value of this attribute shows the relationship of the current document to the linked document, as defined by the href attribute. The attribute thus defines the reverse relationship compared to the value of the rel attribute. Link types values for the attribute are similar to the possible values for rel.
        
        Usage note: 
        This attribute is obsolete in HTML5. Do not use it. To achieve its effect, use the rel attribute with the opposite link types values, e.g. made should be replaced by author. Also this attribute doesn't mean revision and must not be used with a version number, which is unfortunately the case on numerous sites.

  - reversed:
      t: [ ol ]
      d: |
        reversed [HTML5]
        
        This Boolean attribute specifies that the items of the item are specified in the reverse order, i.e. that the least important one is listed first.

  - rows:
      t: [ frameset ]
      d: |
        rows [Deprecated]
        
        This attribute is specify the number and size of vertical spaces in a frameset.

  - rows:
      t: [ textarea ]
      d: |
        rows
        
        The number of visible text lines for the control.

  - rowspan:
      t: [ td ]
      d: |
        rowspan
        
        This attribute contains a non-negative integer value that indicates for how many rows the cell extends. Its default value is 1; if its value is set to 0, it extends until the end of the table section (<thead>, <tbody>, <tfoot>, even if implicitly defined, that the cell belongs to. Values higher than 65534 are clipped down to 65534.

  - rowspan:
      t: [ th ]
      d: |
        rowspan
        
        This attribute contains a non-negative integer value that indicates on how many rows does the cell extend. Its default value is 1; if its value is set to 0, it does extend until the end of the table section (<thead>, <tbody>, <tfoot>, eventually implicitly defined) the cell belongs to. Values higher than 65534 are clipped down to 65534.

  - sandbox:
      t: [ iframe ]
      d: |
        sandbox [HTML5 only]
        
        If specified as an empty string, this attribute enables extra restrictions on the content that can appear in the inline frame. The value of the attribute can either be an empty string (all the restrictions are applied), or a space-separated list of tokens that lift particular restrictions. Valid tokens are:
          allow-same-origin: Allows the content to be treated as being from its normal origin. If this keyword is not used, the embedded content is treated as being from a unique origin.
          allow-top-navigation: Allows the embedded browsing context to navigate (load) content to the top-level browsing context. If this keyword is not used, this operation is not allowed.
          allow-forms: Allows the embedded browsing context to submit forms. If this keyword is not used, this operation is not allowed.
          allow-popups: Allows popups (like from window.open).
          allow-scripts: Allows the embedded browsing context to run scripts (but not create pop-up windows). If this keyword is not used, this operation is not allowed.
          allow-pointer-lock: Allows the embedded browsing context to use the Pointer Lock API.
          
        Note:
        
          When the embedded document has the same origin as the main page, it is strongly discouraged to use both allow-scripts and allow-same-origin at the same time, as that allows the embedded document to programmatically remove the sandbox attribute. Although it is accepted, this case is no more secure than not using the sandbox attribute.
          Sandboxing in general is only of minimal help if the attacker can arrange for the potentially hostile content to be displayed in the user's browser outside a sandboxed iframe. It is recommended that such content should be served from a separate dedicated domain, to limit the potential damage.
          The sandbox attribute is not supported in Internet Explorer 9 and earlier versions, or in Opera.

  - scheme:
      t: [ meta ]
      d: |
        scheme [Trashed]
        
        This attribute defines the scheme in which the metadata is described. A scheme is a context leading to the correct interpretations of the content value, like a format.
        
        Notes: 
        Do not use this attribute as it is obsolete. There is no replacement for it as there was no real usage for it. Omit it altogether.

  - scope:
      t: [ th ]
      d: |
        scope
        
        This enumerated attribute defines the cells that the header defined in this <th> element relates to. It may have the following values:
          row, which means that the header relates to all cells in the row that this element belongs to;
          col, which means that the header relates to all cells in the column that this element belongs to;
          rowgroup, which means that the header relates to all remaining cells in the row that this element belongs to. The remaining cells are either those to the right of this element, or to his left depending of the value ofdir attribute defined on the <table> element;
          colgroup, which means that the header relates to all remaining cells in the column that this element belongs to;
        auto

  - scoped:
      t: [ style ]
      d: |
        scoped
        
        If this attribute is present, then the style applies only to its parent element. If absent, the style applies to the whole document.

  - scrollamount:
      t: [ marquee ]
      d: ""

  - scrolldelay:
      t: [ marquee ]
      d: ""

  - scrolling:
      t: [ frame ]
      d: |
        scrolling [Deprecated]
        
        This attribute defines existence of scrollbar. If this attribute is not used, browser put a scrollbar when necessary. There are two choices; "yes" for showing a scrollbar even when it is not necessary and "no" for do not showing a scrollbar even when it is necessary.

  - scrolling:
      t: [ iframe ]
      d: |
        scrolling [HTML4 only]
        
        Enumerated attribute indicating when the browser should provide a scroll bar (or other scrolling device) for the frame:
          auto: Only when needed.
          yes: Always provide a scroll bar.
          no: Never provide a scoll bar.

  - seamless:
      t: [ iframe ]
      d: |
        seamless [HTML5 only]
        
        This Boolean attribute indicates that the browser should render the inline frame in a way that makes it appear to be part of the containing document, for example by applying CSS styles that apply to the <iframe> to the contained document before styles specified in that document, and by opening links in the contained documents in the parent browsing context (unless another setting prevents this). In XHTML, attribute minimization is forbidden, and the seamless attribute must be defined as <iframe seamless="seamless">.

  - selected:
      t: [ option ]
      d: |
        selected
        
        If present, this Boolean attribute indicates that the option is initially selected. If the <option> element is the descendant of a<select> element whose multiple attribute is not set, only one single <option> of this <select> element may have the selected attribute.

  - selectionDirection:
      t: [ input ]
      d: |
        selectionDirection [HTML5]
        
        The direction in which selection occurred. This is "forward" if the selection was made from left-to-right in an LTR locale or right-to-left in an RTL locale, or "backward" if the selection was made in the opposite direction. This can be "none" if the selection direction is unknown.

  - selectionDirection:
      t: [ textarea ]
      d: |
        selectionDirection [HTML5]
        
        The direction in which selection occurred. This is "forward" if the selection was made from left-to-right in an LTR locale or right-to-left in an RTL locale, or "backward" if the selection was made in the opposite direction. This can be "none" if the selection direction is unknown.
        

  - selectionEnd:
      t: [ textarea ]
      d: |
        selectionEnd
        
        The index to the last character in the current selection.

  - selectionStart:
      t: [ textarea ]
      d: |
        selectionStart
        
        The index to the first character in the current selection.

  - shape:
      t: [ a ]
      d: |
        shape [HTML4 only] [Obsolete since HTML5]
        
        This attribute is used to define a selectable region for hypertext source links associated with a figure to create an image map. The values for the attribute are circle, default, polygon, and rect. The format of the coords attribute depends on the value of shape. For circle, the value is x,y,r where x and y are the pixel coordinates for the center of the circle and r is the radius value in pixels. For rect, the coords attribute should be x,y,w,h. The x,y values define the upper-left-hand corner of the rectangle, while w and h define the width and height respectively. A value of polygon for shape requires x1,y1,x2,y2,... values for coords. Each of the x,y pairs defines a point in the polygon, with successive points being joined by straight lines and the last point joined to the first. The value default for shape requires that the entire enclosed area, typically an image, be used.
        
        Note: 
        It is advisable to use the usemap attribute for the <img> element and the associated <map> element to define hotspots instead of the shape attribute.

  - shape:
      t: [ area ]
      d: |
        shape
        
        The shape of the associated hot spot. The specifications for HTML 5 and HTML 4 define the values rect, which defines a rectangular region; circle, which defines a circular region; poly, which defines a polygon; and default, which indicates the entire region beyond any defined shapes. Many browsers, notably Internet Explorer 4 and higher, support circ, polygon, and rectangle as valid values for shape; these values are [!].

  - size:
      t: [ basefont ]
      d: ""

  - size:
      t: [ input ]
      d: |
        size
        
        The initial size of the control. This value is in pixels unless the value of the type attribute is text or password, in which case, it is an integer number of characters. Starting in HTML5, this attribute applies only when the type attribute is set to text, search, tel, url, email, or password; otherwise it is ignored. In addition, the size must be greater than zero. If you don't specify a size, a default value of 20 is used.

  - size:
      t: [ select ]
      d: |
        size
        
        If the control is presented as a scrolled list box, this attribute represents the number of rows in the list that should be visible at one time. Browsers are not required to present a select elements as a scrolled list box. The default value is 0.

  - size:
      t: [ spacer ]
      d: ""

  - size:
      t: [ hr ]
      d: |
        size [Deprecated since HTML4.01] [Obsolete since HTML5]
        
        Sets the height, in pixels, of the rule.

  - sizes:
      t: [ img ]
      d: |
        sizes [HTML5]
        
        A list of one or more strings separated by commas indicating a set of source sizes. Each source size consists of:
          1.an optional media condition,
          2.a source size value. The default, if missing, is 100vw.
          
        Source sizes values are used to specify the intended size of the image, for the purpose of selecting a source from the list supplied by the srcset attribute. The selected size becomes the intrinsic size of the image (images inherent size if no explicit CSS styling is applied). If the srcset attribute is absent, or contains no values with a width descriptor, then the sizes attribute has no effect.

  - sizes:
      t: [ link ]
      d: |
        sizes [HTML5]
        
        This attribute defines the sizes of the icons for visual media contained in the resource. It must be present only if the rel contains the icon link types value. It may have the following values:
          any, meaning that the icon can be scaled to any size as it is in a vectorial format, like image/svg+xml.
          a white-space separated list of sizes, each in the format <width in pixels>x<height in pixels> or <width in pixels>X<height in pixels>. Each of these sizes must be contained in the resource.
        
        Usage note:
          Most icon format are only able to store one single icon; therefore most of the time the sizes contains only one entry. Among the major browsers, only the Apple's ICNS format allows the storage of multiple icons, and this format is only supported in WebKit.
          Apple's iOS does not support this attribute, hence Apple's iPhone and iPad use special, non-standard link types values to define icon to be used as Web Clip or start-up placeholder: apple-touch-icon and apple-touch-startup-icon.

  - sizes:
      t: [ source ]
      d: |
        sizes [Experimental]
        
        Is a list of source sizes that describes the final rendered width of the image represented by the source. Each source size consists of a comma-separated list of media condition-length pairs. This information is used by the browser to determine, before laying the page out, which image defined in srcset to use.
        The sizes attribute has an effect only when the <source> element is the direct child of a <picture> element.

  - span:
      t: [ col ]
      d: |
        span
        
        This attribute contains a positive integer indicating the number of consecutive columns the <col> element spans. If not present, its default value is 1.

  - span:
      t: [ colgroup ]
      d: |
        span
        
        This attribute contains a positive integer indicating the number of consecutive columns the <colgroup> element spans. If not present, its default value is 1.
        
        Note: 
        This attribute is applied on the attributes of the column group, it has no effect on the CSS styling rules associated with it or, even more, to the cells of the column's members of the group.
          The span attribute may not be present if there are one or more <col> elements within the <colgroup>.

  - spellcheck:
      t: [ global ]
      d: |
        Indicates whether spell checking is allowed for the element.
        
        This enumerated attribute defines whether the element may be checked for spelling errors. It may have the following values:
        
        true, which indicates that the element should be, if possible, checked for spelling errors;
        false, which indicates that the element should not be checked for spelling errors.
        
        If this attribute is not set, its default value is element-type and browser-defined. This default value may also be inherited, which means that the element content will be checked for spelling errors only if its nearest ancestor has a spellcheck state of true.
        
        Usage note:
        his attribute is an enumerated one and not a Boolean one. This means that the explicit usage of one of the values true or false is mandatory and that a shorthand like <label spellcheck>Example Label</label> is not allowed. The correct usage is <label spellcheck="true">Example Label</label>.
        This attribute is merely a hint for the browser: browsers are not required to be able to check for spelling errors. Typically non-editable elements are not checked for spelling errors, even if the spellcheck attribute is set to true and the browser supports spellchecking.
        The default value of this attribute is browser and element-dependant.

  - spellcheck:
      t: [ input, textarea ]
      d: |
        spellcheck [HTML5]
        
        Setting the value of this attribute to true indicates that the element needs to have its spelling and grammar checked. The value default indicates that the element is to act according to a default behavior, possibly based on the parent element's own spellcheck value. The value false indicates that the element should not be checked.

  - src:
      t: [ applet ]
      d: ""

  - src:
      t: [ audio ]
      d: |
        src
        
        The URL of the audio to embed. This is subject to HTTP access controls. This is optional; you may instead use the <source> element within the audio block to specify the audio to embed.

  - src:
      t: [ bgsound ]
      d: ""

  - src:
      t: [ embed ]
      d: |
        src
        
        The URL of the resource being embedded.

  - src:
      t: [ frame ]
      d: |
        src [Deprecated]
        
        This attribute is specify document which will be displayed by frame.

  - src:
      t: [ iframe ]
      d: |
        src
        
        The URL of the page to embed.

  - src:
      t: [ img ]
      d: |
        src
        
        Image URL, this attribute is obligatory for the <img> element. On browsers supporting srcset, src is ignored if this one is provided.

  - src:
      t: [ input ]
      d: |
        src
        
        If the value of the type attribute is image, this attribute specifies a URI for the location of an image to display on the graphical submit button; otherwise it is ignored.

  - src:
      t: [ script ]
      d: |
        src
        
        This attribute specifies the URI of an external script; this can be used as an alternative to embedding a script directly within a document. script elements with an src attribute specified should not have a script embedded within its tags.

  - src:
      t: [ source ]
      d: |
        src
        
        Required, address of the media resource. The value of this attribute is ignored when the <source> element is placed inside a <picture> element.

  - src:
      t: [ track ]
      d: |
        src
        
        Address of the track. Must be a valid URL. This attribute must be defined.

  - src:
      t: [ video ]
      d: |
        src
        
        The URL of the video to embed. This is optional; you may instead use the <source> element within the video block to specify the video to embed.

  - srcdoc:
      t: [ iframe ]
      d: |
        srcdoc [HTML5 only]
        
        The content of the page that the embedded context is to contain. This attribute is expected to be used together with the sandbox and seamless attributes. If a browser supports the srcdoc attribute, it will override the content specified in the src attribute (if present). If a browser does NOT support the srcdoc attribute, it will show the file specified in the src attribute instead (if present).

  - srclang:
      t: [ track ]
      d: |
        srclang
        
        Language of the track text data. It must be a valid BCP 47 language tag. If the kind attribute is set to subtitles, then srclang must be defined.

  - srcset:
      t: [ img ]
      d: |
        srcset [HTML5]
        
        A list of one or more strings separated by commas indicating a set of possible images for the user agent to use. Each string is composed of:
          1. one URL to an image,
          2. a width descriptor, that is a positive integer directly followed by 'w'. The default value, if missing, is the infinity.
          3. a pixel density descriptor, that is a positive floating number directly followed by 'x'. The default value, if missing, is 1x.
        
        Each string in the list must have at least a width descriptor or a pixel density descriptor to be valid. Among the list, there must be only one string containing the same tuple of width descriptor and pixel density descriptor.
        The browser chooses the most adequate image to display at a given point of time.

  - srcset:
      t: [ source ]
      d: |
        srcset [Experimental]
        
        A list of one or more strings separated by commas indicating a set of possible images represented by the source for the browser to use. Each string is composed of:
          1. one URL to an image,
          2. a width descriptor, that is a positive integer directly followed by 'w'. The default value, if missing, is the infinity.
          3. a pixel density descriptor, that is a positive floating number directly followed by 'x'. The default value, if missing, is 1x.
        
        Each string in the list must have at least a width descriptor or a pixel density descriptor to be valid. Among the list, there must be only one string containing the same tuple of width descriptor and pixel density descriptor.
        The browser chooses the most adequate image to display at a given point of time.
        The srcset attribute has an effect only when the <source> element is the direct child of a <picture> element.

  - standby:
      t: [ object ]
      d: |
        standby [HTML4 only] [Obsolete since HTML5]
        
        A message that the browser can show while loading the object's implementation and data.

  - start:
      t: [ marquee ]
      d: ""

  - start:
      t: [ ol ]
      d: |
        start [HTML5]
        
        This integer attribute specifies the start value for numbering the individual list items. Although the ordering type of list elements might be Roman numerals, such as XXXI, or letters, the value of start is always represented as a number. To start numbering elements from the letter "C", use <ol start="3">.
        
        Note: 
        This attribute was deprecated in HTML4, but reintroduced in HTML5.

  - step:
      t: [ input ]
      d: |
        step [HTML5]
        
        Works with the min and max attributes to limit the increments at which a numeric or date-time value can be set. It can be the string any or a positive floating point number. If this attribute is not set to any, the control accepts only values at multiples of the step value greater than the minimum.

  - stop:
      t: [ marquee ]
      d: ""

  - style:
      t: [ global ]
      d: |
        Defines CSS styles which will override styles previously set.
        
        This attribute contains CSS styling declarations to be applied to the element. Note that it is recommended for styles to be defined in a separate file or files. This attribute and the <style> element have mainly the purpose of allowing for quick styling, for example for testing purposes.
        
        Usage note:
        This attribute must not be used to convey semantic information. Even if all styling is removed, a page should remain semantically correct. Typically it shouldn't be used to hide irrelevant information; this should be done using the hidden attribute.

  - tabindex:
      t: [ global ]
      d: |
        This integer attribute indicates if the element can take input focus (is focusable), if it should participate to sequential keyboard navigation, and if so, at what position. It can takes several values:
        
        a negative value means that the element should be focusable, but should not be reachable via sequential keyboard navigation;
        
        0 means that the element should be focusable and reachable via sequential keyboard navigation, but its relative order is defined by the platform convention;
        
        a positive value which means should be focusable and reachable via sequential keyboard navigation; its relative order is defined by the value of the attribute: the sequential follow the increasing number of the tabindex. If several elements share the same tabindex, their relative order follows their relative position in the document).
        
        An element with a 0 value, an invalid value, or no tabindex value should be placed after elements with a positive tabindex in the sequential keyboard navigation order.
        
        You can consult this article to see a comprehensive explanation of focus management.

  - tabindex:
      t: [ area ]
      d: |
        tabindex [HTML4 only] [Obsolete since Gecko 5.0]
        
        A numeric value specifying the position of the defined area in the browser tabbing order. This attribute is global in HTML5.

  - target:
      t: [ a ]
      d: |
        target
        
        This attribute specifies where to display the linked resource. In HTML4, this is the name of, or a keyword for, a frame. In HTML5, it is a name of, or keyword for, a browsing context (for example, tab, window, or inline frame). The following keywords have special meanings:
          _self: Load the response into the same HTML4 frame (or HTML5 browsing context) as the current one. This value is the default if the attribute is not specified.
          _blank: Load the response into a new unnamed HTML4 window or HTML5 browsing context.
          _parent: Load the response into the HTML4 frameset parent of the current frame or HTML5 parent browsing context of the current one. If there is no parent, this option behaves the same way as _self.
          _top: In HTML4: Load the response into the full, original window, canceling all other frames. In HTML5: Load the response into the top-level browsing context (that is, the browsing context that is an ancestor of the current one, and has no parent). If there is no parent, this option behaves the same way as _self.
          
        Use this attribute only if the href attribute is present.

  - target:
      t: [ area ]
      d: |
        target
        
        This attribute specifies where to display the linked resource. In HTML4, this is the name of, or a keyword for, a frame. In HTML5, it is a name of, or keyword for, a browsing context (for example, tab, window, or inline frame). The following keywords have special meanings:
          _self: Load the response into the same HTML4 frame (or HTML5 browsing context) as the current one. This value is the default if the attribute is not specified.
          _blank: Load the response into a new unnamed HTML4 window or HTML5 browsing context.
          _parent: Load the response into the HMTL4 frameset parent of the current frame or HTML5 parent browsing context of the current one. If there is no parent, this option behaves the same way as _self.
          _top: In HTML4: Load the response into the full, original window, canceling all other frames. In HTML5: Load the response into the top-level browsing context (that is, the browsing context that is an ancestor of the current one, and has no parent). If there is no parent, this option behaves the same way as _self.
          
        Use this attribute only if the href attribute is present.

  - target:
      t: [ base ]
      d: |
        target
        
        A name or keyword indicating the default location to display the result when hyperlinks or forms cause navigation, for elements that do not have an explicit target reference. In HTML4, this is the name of, or a keyword for, a frame. In HTML5, it is a name of, or keyword for, a browsing context (for example, tab, window, or inline frame). The following keywords have special meanings:
          _self: Load the result into the same HTML4 frame (or HTML5 browsing context) as the current one. This value is the default if the attribute is not specified.
          _blank: Load the result into a new unnamed HTML4 window or HTML5 browsing context.
          _parent: Load the result into the HTML4 frameset parent of the current frame or HTML5 parent browsing context of the current one. If there is no parent, this option behaves the same way as _self.
          _top: In HTML4: Load the result into the full, original window, canceling all other frames. In HTML5: Load the result into the top-level browsing context (that is, the browsing context that is an ancestor of the current one, and has no parent). If there is no parent, this option behaves the same way as _self.

  - target:
      t: [ form ]
      d: |
        target
        
        A name or keyword indicating where to display the response that is received after submitting the form. In HTML 4, this is the name/keyword for a frame. In HTML5, it is a name/keyword for a browsing context (for example, tab, window, or inline frame). The following keywords have special meanings:
          _self: Load the response into the same HTML 4 frame (or HTML5 browsing context) as the current one. This value is the default if the attribute is not specified.
          _blank: Load the response into a new unnamed HTML 4 window or HTML5 browsing context.
          _parent: Load the response into the HTML 4 frameset parent of the current frame, or HTML5 parent browsing context of the current one. If there is no parent, this option behaves the same way as _self.
          _top: HTML 4: Load the response into the full original window, and cancel all other frames. HTML5: Load the response into the top-level browsing context (i.e., the browsing context that is an ancestor of the current one, and has no parent). If there is no parent, this option behaves the same way as _self.
          iframename: The response is displayed in a named <iframe>.
          
        HTML5: This value can be overridden by a formtarget attribute on a <button> or <input> element.

  - target:
      t: [ link ]
      d: |
        target [!]
        
        Defines the frame or window name that has the defined linking relationship or that will show the rendering of any linked resource.

  - title:
      t: [ global ]
      d: |
        Text to be displayed in a tooltip when hovering over the element.
        
        This attribute contains a text representing advisory information related to the element it belongs to. Such information can typically, but not necessarily, be presented to the user as a tooltip. Here are some typical uses of this attribute:
        
        Link: the title or a description of the linked document
        Media element like an image: a description or associated credits
        Paragraph: a footnote or a commentary about it
        Quotation: some information about the author, and so on.
        
        If this attribute is omitted, it means that the title of the nearest ancestor of this element is still relevant for it (and can legitimately be used as the tooltip for that element. If this attribute is set to the empty string, it explicitly means that its nearest ancestor's title is not relevant for this element (and shouldn't be used in the tooltip for that element).
        
        Additional semantics are attached to the title attributes of the <link>, <abbr>, <input> and <menuitem> elements.
        
        Usage note:
        The title attribute may contains several lines. Each U+000A LINE FEED (LF) inserted represents such a newline. Some caution must be taken though, as that means that:
        
        <p>Newlines in title should be taken into account,like this <abbr title="This is a
        multiline title">example</abbr>.</p>
        
        defines a two-line title.
        
        Support for multi-line titles was added to Gecko in Gecko 12.0 (Firefox 12.0 / Thunderbird 12.0 / SeaMonkey 2.9).

  - title:
      t: [ style ]
      d: |
        title
        
        Specifies alternative style sheet sets.

  - title:
      t: [ abbr ]
      d: |
        title
        
        Use the title attribute to define the full description of the abbreviation. Many user agents present this as a tooltip.
        
        [global attribute]
        
        Text to be displayed in a tooltip when hovering over the element.
        
        This attribute contains a text representing advisory information related to the element it belongs to. Such information can typically, but not necessarily, be presented to the user as a tooltip. Here are some typical uses of this attribute:
        
        Link: the title or a description of the linked document
        Media element like an image: a description or associated credits
        Paragraph: a footnote or a commentary about it
        Quotation: some information about the author, and so on.
        
        If this attribute is omitted, it means that the title of the nearest ancestor of this element is still relevant for it (and can legitimately be used as the tooltip for that element. If this attribute is set to the empty string, it explicitly means that its nearest ancestor's title is not relevant for this element (and shouldn't be used in the tooltip for that element).
        
        Additional semantics are attached to the title attributes of the <link>, <abbr>, <input> and <menuitem> elements.
        
        Usage note:
        The title attribute may contains several lines. Each U+000A LINE FEED (LF) inserted represents such a newline. Some caution must be taken though, as that means that:
        
        <p>Newlines in title should be taken into account,like this <abbr title="This is a
        multiline title">example</abbr>.</p>
        
        defines a two-line title.
        
        Support for multi-line titles was added to Gecko in Gecko 12.0 (Firefox 12.0 / Thunderbird 12.0 / SeaMonkey 2.9).

  - title:
      t: [ dfn ]
      d: |
        dfn
        
        In HTML5, the title attribute has special meaning.
        
        Text to be displayed in a tooltip when hovering over the element.
        
        This attribute contains a text representing advisory information related to the element it belongs to. Such information can typically, but not necessarily, be presented to the user as a tooltip. Here are some typical uses of this attribute:
        
        Link: the title or a description of the linked document
        Media element like an image: a description or associated credits
        Paragraph: a footnote or a commentary about it
        Quotation: some information about the author, and so on.
        
        If this attribute is omitted, it means that the title of the nearest ancestor of this element is still relevant for it (and can legitimately be used as the tooltip for that element. If this attribute is set to the empty string, it explicitly means that its nearest ancestor's title is not relevant for this element (and shouldn't be used in the tooltip for that element).
        
        Additional semantics are attached to the title attributes of the <link>, <abbr>, <input> and <menuitem> elements.
        
        Usage note:
        The title attribute may contains several lines. Each U+000A LINE FEED (LF) inserted represents such a newline. Some caution must be taken though, as that means that:
        
        <p>Newlines in title should be taken into account,like this <abbr title="This is a
        multiline title">example</abbr>.</p>
        
        defines a two-line title.
        
        Support for multi-line titles was added to Gecko in Gecko 12.0 (Firefox 12.0 / Thunderbird 12.0 / SeaMonkey 2.9).

  - truespeed:
      t: [ marquee ]
      d: ""

  - type:
      t: [ a, area ]
      d: |
        type
        
        This attribute specifies the media type in the form of a MIME type for the link target. Generally, this is provided strictly as advisory information; however, in the future a browser might add a small icon for multimedia types. For example, a browser might add a small speaker icon when type is set to audio/wav. For a complete list of recognized MIME types, see http://www.w3.org/TR/html4/references.html#ref-MIMETYPES. Use this attribute only if the href attribute is present.

  - type:
      t: [ button ]
      d: |
        type
        
        The type of the button. Possible values are:
          submit: The button submits the form data to the server. This is the default if the attribute is not specified, or if the attribute is dynamically changed to an empty or invalid value.
          reset: The button resets all the controls to their initial values.
          button: The button has no default behavior. It can have client-side scripts associated with the element's events, which are triggered when the events occur.

  - type:
      t: [ embed ]
      d: |
        type
        
        The MIME type to use to select the plug-in to instantiate.

  - type:
      t: [ input ]
      d: |
        type
        
        The type of control to display. The default type is text, if this attribute is not specified.

  - type:
      t: [ link ]
      d: |
        type
        
        This attribute is used to define the type of the content linked to. The value of the attribute should be a MIME type such as text/html, text/css, and so on. The common use of this attribute is to define the type of style sheet linked and the most common current value is text/css, which indicates a Cascading Style Sheet format.

  - type:
      t: [ menu ]
      d: |
        type
        
        This attribute indicates the kind of menu being declared, and can be one of two values.
          popup: The popup menu state, which represents a group of commands activated through another element. This might be through the menu attribute of a <button>, or an element with a contextmenu attribute. When nesting <menu> elements directly within one another, this is the missing value default if the parent is already in this state.
          toolbar: The toolbar menu state, which represents a series of commands for user interaction. This is the missing value default, except where the parent element is a <menu> in the popup menu state.

  - type:
      t: [ menuitem ]
      d: |
        This attribute indicates the kind of command, and can be one of three values.
          command: A regular command with an associated action. This is the missing value default.
          checkbox: Represents a command that can be toggled between two different states.
          radio: Represent one selection from a group of commands that can be toggled as radio buttons.

  - type:
      t: [ object ]
      d: |
        type
        
        The content type of the resource specified by data. At least one of data and type must be defined.

  - type:
      t: [ ol ]
      d: |
        type
        
        Indicates the numbering type.
        The type set is used for the entire list unless a different type attribute is used within an enclosed <li> element.
        
        Note: 
        This attribute was deprecated in HTML4, but reintroduced in HTML5. Unless the value of the list number matters (e.g. in legal or technical documents where items are to be referenced by their number/letter), the CSS list-style-type property should be used instead.

  - type:
      t: [ script ]
      d: |
        type
        
        This attribute identifies the scripting language of code embedded within a script element or referenced via the element’s src attribute. This is specified as a MIME type; examples of supported MIME types include text/javascript, text/ecmascript, application/javascript, and application/ecmascript. If this attribute is absent, the script is treated as JavaScript.

  - type:
      t: [ source ]
      d: |
        type
        
        The MIME-type of the resource, optionally with a codecs parameter. See RFC 4281 for information about how to specify codecs.

  - type:
      t: [ spacer ]
      d: ""

  - type:
      t: [ style ]
      d: |
        type
        
        This attribute defines the styling language as a MIME type (charset should not be specified). 'text/css' is assumed if this attribute is absent.

  - type:
      t: [ li ]
      d: |
        type [Deprecated]
        
        This type overrides the one used by its parent <ol> element, if any.
        
        Usage note: 
        This attribute has been deprecated: use the CSS list-style-type property instead.

  - type:
      t: [ param ]
      d: |
        type [Trashed]
        
        Only used if the valuetype is set to "ref". Specifies the MIME type of values found at the URI specified by value.

  - typemustmatch:
      t: [ object ]
      d: |
        typemustmatch [HTML5]
        
        This Boolean attribute indicates if the type and the actual content type resource must match in order of this one to be used.

  - urn:
      t: [ a ]
      d: |
        urn [!]
        
        This supposedly Microsoft-supported attribute relates a uniform resource name (URN) with the link. While it is based on standards work years back, the meaning of URNs is still not well defined, so this attribute is meaningless. urn Property (MSDN)

  - use-credentials:
      t: [ link ]
      d: ""

  - usemap:
      t: [ img ]
      d: |
        usemap
        
        The partial URL (starting with '#') of an image map associated with the element.
        
        Usage note: 
        You cannot use this attribute if the <img> element is a descendant of an <a> or <button> element.

  - usemap:
      t: [ object ]
      d: |
        usemap
        
        A hash-name reference to a <map> element; that is a '#' followed by the value of a name of a map element.

  - usemap:
      t: [ input ]
      d: |
        usemap [HTML4 only] [Obsolete since HTML5]
        
        The name of a <map> element to as an image map.

  - value:
      t: [ button ]
      d: |
        value
        
        The initial value of the button.

  - value:
      t: [ data ]
      d: |
        value
        
        This attribute specifies the machine-readable translation of the content of the element.
        
        Browser compatibility:
        
        Desktop: F
        
        Mobile: None.

  - value:
      t: [ input ]
      d: |
        value
        
        The initial value of the control. This attribute is optional except when the value of the type attribute is radio or checkbox.
        Note that when reloading the page, Gecko and IE will ignore the value specified in the HTML source, if the value was changed before the reload.

  - value:
      t: [ li ]
      d: |
        value
        
        This integer attributes indicates the current ordinal value of the item in the list as defined by the <ol> element. The only allowed value for this attribute is a number, even if the list is displayed with Roman numerals or letters. List items that follow this one continue numbering from the value set. The value attribute has no meaning for unordered lists (<ul>) or for menus (<menu>).
        
        Note: 
        
        This attribute was deprecated in HTML4, but reintroduced in HTML5.
        
        Prior to Gecko 9.0, negative values were incorrectly converted to 0. Starting in Gecko 9.0 all integer values are correctly parsed.

  - value:
      t: [ meter ]
      d: |
        value
        
        The current numeric value. This must be between the minimum and maximum values (min attribute and max attribute) if they are specified. If unspecified or malformed, the value is 0. If specified, but not within the range given by the min attribute and max attribute, the value is equal to the nearest end of the range.

  - value:
      t: [ option ]
      d: |
        value
        
        The textual content of this attribute represents the label explaining the option. If it is not defined, its default value is the text content of the element.
        
        Usage note: 
        the label attribute is designed to contain a short label typically used in a hierarchical menu. The value attribute describes a longer label designed to be used near a radio button, for example.

  - value:
      t: [ progress ]
      d: |
        value
        
        This attribute specifies how much of the task that has been completed. It must be a valid floating point number between 0 and max, or between 0 and 1 if max is omitted. If there is no value attribute, the progress bar is indeterminate; this indicates that an activity is ongoing with no indication of how long it is expected to take.

  - value:
      t: [ param ]
      d: |
        value
        
        Specifies the value of the parameter.

  - valuetype:
      t: [ param ]
      d: |
        valuetype [Trashed]
        
        Specifies the type of the value attribute. Possible values are:
          data: Default value. The value is passed to the object's implementation as a string.
          ref: The value is a URI to a resource where run-time values are stored.
          object: An ID of another <object> in the same document.

  - version:
      t: [ html ]
      d: |
        version [Deprecated since HTML4.01] [Obsolete since HTML5]
        
        Specifies the version of the HTML Document Type Definition that governs the current document. This attribute is not needed, because it is redundant with the version information in the document type declaration.

  - volume:
      t: [ audio ]
      d: |
        volume
        
        The playback volume of any audio portions, in the range 0.0 (silent) to 1.0 (loudest).

  - volume:
      t: [ bgsound ]
      d: ""

  - vspace:
      t: [ applet ]
      d: ""

  - vspace:
      t: [ marquee ]
      d: ""

  - vspace:
      t: [ img ]
      d: |
        vspace [Deprecated since HTML4.01] [Obsolete since HTML5]
        
        The number of pixels of white space to insert above and below the image.

  - webkitallowfullscreen:
      t: [ iframe ]
      d: |
        webkitallowfullscreen [!] [Deprecated]
        
        Use allowfullscreen instead. In Chrome 17 or later (and maybe earlier), this attribute can be set to true if the frame is allowed to be placed into full screen mode by calling its element.webkitRequestFullScreen() method. If this isn't set, the element can't be placed into full screen mode.

  - width:
      t: [ applet ]
      d: ""

  - width:
      t: [ canvas ]
      d: |
        width
        
        The width of the coordinate space in CSS pixels. Defaults to 300.

  - width:
      t: [ embed ]
      d: |
        width
        
        The displayed width of the resource, in CSS pixels.

  - width:
      t: [ iframe ]
      d: |
        width
        
        Indicates the width of the frame HTML5 in CSS pixels, or HTML 4.01 in pixels or as a percentage.

  - width:
      t: [ img ]
      d: |
        width
        
        The width of the image in pixels or percent.

  - width:
      t: [ input ]
      d: |
        width [HTML5]
        
        If the value of the type attribute is image, this attribute defines the width of the image displayed for the button.

  - width:
      t: [ marquee ]
      d: ""

  - width:
      t: [ object ]
      d: |
        width
        
        The width of the display resource, in CSS pixels.

  - width:
      t: [ spacer ]
      d: ""

  - width:
      t: [ video ]
      d: |
        width
        
        The width of the video's display area, in CSS pixels.

  - width:
      t: [ hr ]
      d: |
        width [Deprecated since HTML4.01] [Obsolete since HTML5]
        
        Sets the length of the rule on the page through a pixel or percentage value.

  - width:
      t: [ pre ]
      d: |
        width [Trashed]
        
        Contains the preferred count of characters that a line should have. Though technically still implemented, this attribute has no visual effect; to achieve such an effect, use CSS styling instead.

  - wrap:
      t: [ textarea ]
      d: |
        wrap [HTML5]
        
        Indicates how the control wraps text. Possible values are:
          hard: The browser automatically inserts line breaks (CR+LF) so that each line has no more than the width of the control; the cols attribute must be specified.
          soft: The browser ensures that all line breaks in the value consist of a CR+LF pair, but does not insert any additional line breaks.
        
        If this attribute is not specified, soft is its default value.

  - wrap:
      t: [ pre ]
      d: |
        wrap [!]
        
        Is a hint indicating how the overflow must happen. In modern browser this hint is ignored and no visual effect results in its present; to achieve such an effect, use CSS styling instead.

  - x-moz-errormessage:
      t: [ input ]
      d: |
        x-moz-errormessage [!]
        
        This Mozilla extension allows you to specify the error message to display when a field doesn't successfully validate.

