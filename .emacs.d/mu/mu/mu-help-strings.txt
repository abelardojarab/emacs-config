#-*-mode:org-*-
#
# Copyright (C) 2012-2013 Dirk-Jan C. Binnema <djcb@djcbsoftware.nl>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.


#BEGIN MU_CONFIG_CMD_ADD
#STRING
mu add <file> [<files>]
#STRING
mu add is the command to add specific measage files to the database. Each of the
files must be specified with an absolute path.
#END

#BEGIN MU_CONFIG_CMD_CFIND
#STRING
mu cfind [options] [--format=<format>] [--personal] [--after=<T>] [<pattern>]
#STRING
mu cfind is the mu command to find contacts in the mu database and export them
for use in other programs.

<format> is one of:
 plain
 mutt-alias
 mutt-ab
 wl
 csv
 org-contact
 bbdb

'plain' is the default.

If you specify '--personal', only addresses that were found in mails
that include 'my' e-mail addres will be listed - so to exclude e.g.
mailing-list posts. Use the --my-address= option in 'mu index' to
specify what addresses are considered 'my' address.

With '--after=T' you can tell mu to only show addresses that were seen after
T. T is a Unix timestamp. For example, to get only addresses seen after the
beginning of 2012, you could use
         --after=`date +%%s -d 2012-01-01`
#END

#BEGIN MU_CONFIG_CMD_EXTRACT
#STRING
mu extract [options] <file>
#STRING
mu extract is the mu command to display and save message parts
(attachments), and open them with other tools.
#END

#BEGIN MU_CONFIG_CMD_FIND
#STRING
mu find [options] <search expression>
#STRING
mu find is the mu command for searching e-mail message that were
stored earlier using mu index(1).

Some examples:
 # get all messages with 'bananas' in body, subject or recipient fields:
 $ mu find bananas

 # get all messages regarding bananas from John with an attachment:
 $ mu find from:john flag:attach bananas

 # get all messages with subject wombat in June 2009
 $ mu find subject:wombat date:20090601..20090630

See the `mu-find' and `mu-easy' man-pages for more information.
#END

#BEGIN MU_CONFIG_CMD_HELP
#STRING
mu help <command>
#STRING
mu find is the mu command to get help about <command>, where <command>
is one of:
  add     - add message to database
  cfind   - find a contact
  extract - extract parts/attachments from messages
  find    - query the message database
  help    - get help
  index   - index messages
  mkdir   - create a maildir
  remove  - remove a message from the database
  script  - run a script (available only when mu was built with guile-support)
  server  - start mu server
  verify  - verify signatures of a message
  view    - view a specific message
#END

#BEGIN MU_CONFIG_CMD_INDEX
#STRING
mu index [options]
#STRING
mu index is the mu command for scanning the contents of Maildir
directories and storing the results in a Xapian database.The
data can then be queried using mu-find(1).
#END

#BEGIN MU_CONFIG_CMD_MKDIR
#STRING
mu mkdir [options] <dir> [<dirs>]
#STRING
mu mkdir is the mu command for creating Maildirs.It does not
use the mu database.
#END


#BEGIN MU_CONFIG_CMD_REMOVE
#STRING
mu remove [options] <file> [<files>]
#STRING
mu remove is the mu command to remove messages from the database.
#END


#BEGIN MU_CONFIG_CMD_SERVER
#STRING
mu server [options]
#STRING
mu server starts a simple shell in which one can query and
manipulate the mu database.The output of the commands is terms
of Lisp symbolic expressions (s-exps).mu server is not meant for
use by humans; instead, it is designed specificallyfor the
mu4e e-mail client.
#END


#BEGIN MU_CONFIG_CMD_SCRIPT
#STRING
mu script [<pattern>] [-v]
mu <script-name> [<script options>]
#STRING

List the available scripts and/or run them (if mu was built with support for
scripts). With <pattern>, list only those scripts whose name or one-line
description matches it.  With -v, get a longer description for each script.

Some examples:

List all available scripts matching 'month' (long descriptions):
  $ mu script -v month

Run the 'msgs-per-month' script, and pass it the '--textonly' parameter:
  $ mu msgs-per-month --textonly
#END


#BEGIN MU_CONFIG_CMD_VERIFY
#STRING
mu verify [options] <msgfile>
#STRING
mu verify is the mu command for verifying message signatures
(such as PGP/GPG signatures)and displaying information about them.
The command works on message files, and does not require
the message to be indexed in the database.
#END

#BEGIN MU_CONFIG_CMD_VIEW
#STRING
mu view [options] <file> [<files>]
#STRING
mu view is the mu command for displaying e-mail message files. It
works on message files and does not require the message to be
indexed in the database.
#END
