# .fvwm/.fvwm2rc
# Updated March 2014 for Fvwm 2.6.5-3 on Arch Linux
# Dr. David M. MacMillan.  www.CircuitousRoot.com   GNU GPL 3+

SetEnv fvwm_wallpaper $[HOME]/Downloads/Wallpapers/1468177.png

# Location of FvwmScripts
#####
*FvwmScript: Path /nfs/pdx/home/ajaraber/.fvwmrc

# Viewport and Virtual Desktop Setup
#####
DeskTopSize 4x4
EdgeScroll 0 0

# You can use EwmhBaseStruts to stop Maximised windows from obscuring TaskBars/ButtonBars
# or anything else you always want to be visible.
#
# This Setting makes sure my ButtonBar on the left and taskbar along the bottom is always
# visible.
#####
EwmhBaseStruts 0 128 0 20

# OpaqueMoveSize allows you to stop Large windows from being moved opaquely,
# I like the effect, and have Cycles to burn, so all windows can use it.
#
# SnapAttraction lets nearby windows snap together, or snap to edges so that they
# are easier to align on your desktop, The default is off, if you set it too large
# it's annoying as hell, 3 pixels is just right.
#####
OpaqueMoveSize -1
Style * SnapAttraction 3

# Set visual styles for components
#####

# Window Style
# I prefer very thin borders around windows.
# Use "HandleWidth" here as in an Fvwm window the non-title borders are all
# actually Handles.  (If you try to use BorderWidth, which requires !Handles,
# you cannot actually resize the windows.)
# 3 pixel Handles are wide enough to grab without using much screen space.
Style * HandleWidth 3

# In the title bar, use a 10-pixel font in a 13-pixel bar
TitleStyle Height 13
WindowFont -misc-fixed-medium-r-normal-*-10-*-*-*-*-*-iso10646-1
#           foundry
#                familyname
#                      weightname
#                             slant
#                               setwidthname
#                                      additionalstyle
#                                        pixelsize
#                                           point size in tenths of a
point
#                                             ...
#                                                     charset encoding
# This is an XLFD (X Logical Font Description)
# Use xlsfonts and grep to find out what fonts are installed.

# Transient Windows
# By default FVWM will not put any decorations (borders) around transient
# popup windows (such as FileChooser dialogs).  It is useful to have such
# decorations, as without them you cannot grab the window to move it
# (sometimes a dialog window pops up in the wrong place and you do want
# to move it).  See http://fvwm.org/doc/unstable/commands/Style.html
Style * DecorateTransient

# These set the colors for my FvwmScript-DayDate script.
# For reasons I don't understand, setting ForeColor and BackColor in the
# widgets in the script itself doesn't work.
*FvwmScript: DefaultFore blue
*FvwmScript: DefaultBack black

# Title Bar Buttons
#####

AddButtonStyle 6 Pixmap button-close.xpm
AddButtonStyle 4 Pixmap mini.iconify1.xpm
AddButtonStyle 2 Pixmap mini.maximize1.xpm
# Mouse Actions for the Title Bar Buttons: left 1 3 5 7 8   0 8 6 4 2
right
Mouse 0 1       A       Menu Window-Ops Close
Mouse 0 6       A       Close
Mouse 0 4       A       Iconify
Mouse 0 2       A       Maximize

# Modules (configuration of)
#####

# Note: FvwmPager will be swallowed by FvwmButtons (below)
*FvwmPager: Fore blue
*FvwmPager: Back black
*FvwmPager: Hilight gray
*FvwmPager: SolidSeparators
*FvwmPager: Label 0 "0: General"
*FvwmPager: Label 1 "1: Graphein"
*FvwmPager: Label 2 "2: OpenSCAD"
*FvwmPager: Label 3 "3: other"

# See: http://www.fvwm.org/documentation/manpages/unstable/fvwm.php
AddToFunc StartFunction
+ I FvwmButtons
+ I FvwmTaskBar
+ I FvwmAuto FvwmAutohide -menter FuncAutoEnter
+ I Test (Init) Exec exec fvwm-root --dither --retain-pixmap $[fvwm_wallpaper]
+ I Test (Init) StartHiddenConsole

Style FvwmButtons  NeverFocus, NoHandles, NoTitle, StaysOnBottom, Sticky
Style FvwmPager    NeverFocus, NoHandles, NoTitle, StaysOnBottom, Sticky

# Set up the geometry so that the buttons stack vertically on the left.
#
# 100 pixel width is arbitrary, but works with the date display
# of my FvwmScript-DayDate script and gives a reasonable size for
# the 1366x768 display of my Lenovo g500S laptop.
#
# Method here: Define a rectangulary "half-button" 110x55 pixels
#              Use 1x2 of them for Pager and analog xclock
#              Use 1x1 of them for two digital xclocks
#              Thus need 6 rows (and 1 column, redundantly)
#              Use the FvwmButton geometry to specify the above,
#              and also to specify the position of the button +x+y
*FvwmButtonsFont -adobe-helvetica-bold-r-*-*-10-*
*FvwmButtons: ButtonGeometry 100x50+0+0
*FvwmButtonsFore blick
*FvwmButtons: BoxSize fixed
*FvwmButtons: Rows 8
*FvwmButtons: Columns 1
*FvwmButtons: Frame 1
*FvwmButtons: (1x2+0+0, Swallow "FvwmPager" 'FvwmPager *')
*FvwmButtons(Title XTerm, Icon xterm.xpm, Action 'Exec "xterm" xterm -ls &')
*FvwmButtons(Title Emacs, Icon emacs.xpm, Action 'Exec "Emacs Server" emacs &')
*FvwmButtons(Title Emacs Client, Icon emacs.xpm, Action 'Exec "Emacs Client" emacsclient --server-file ~/.emacs.cache/server/server -c &')
# *FvwmButtons: (1x2+0+2, Back #dedbde, Frame 1, Action (Mouse 1) `Nop`)
# *FvwmButtons: (Id AnalogDial, 1x2+0+4, Swallow (NoClose, UseOld) "xclock" 'Exec xclock &')

# Key Bindings: ctrl-arrow shifts viewports, alt-arrow shifts desktops
#####
#               A = All contexts
#               M = meta = alt key
#               C = control key
# Do not wrap viewports.  Do wrap desktops.

Key Left  A C GotoPage -1p +0p
Key Right A C GotoPage +1p +0p
Key Up    A C GotoPage +0p -1p
Key Down  A C GotoPage +0p +1p
Key Left  A M GotoDesk -1 0 3
Key Right A M GotoDesk 1 0 3

# Popup Menus From Desktop Background
#####################################

# AutoHiding Console
Style HiddenConsole Sticky, WindowListSkip, Notitle, StaysOnTop, NoHandles
Style HiddenConsole WindowShadeSteps 100

# Notes: Must define submenus first
#        Cannot use '&' in menu names, but '/' ok

DestroyMenu GraphicsCADSubMenu
AddToMenu GraphicsCADSubMenu "Graphics/CAD" Title
+ "dia"   Exec exec dia
+ "Glade"   Exec exec glade-3

DestroyMenu NetSubMenu
AddToMenu NetSubMenu "Net" Title
+ "firefox"  Exec exec firefox

DestroyMenu OfficeTextSubMenu
AddToMenu OfficeTextSubMenu "Office/Text" Title
+ "Emacs Client"  Exec exec emacsclient
+ "Emacs Server"  Exec exec emacs
+ "LibreOffice"  Exec exec soffice

# Fvwm ships with a hardcoded "Builtin" menu linked to mouse button 0.
# Replace Mouse Button 0 with my main ("start button") menu.
Mouse 0 R N Menu MainMenu

AddToMenu MainMenu "Main Menu" Title
+ "xterm" Exec exec xterm -fg green -bg black -vb
+ "Net" Popup NetSubMenu
+ "Graphics/CAD" Popup GraphicsCADSubMenu
+ "Office/Text" Popup OfficeTextSubMenu
+ "" Nop
+ "RestartFvwm" Restart
+ "Quit Fvwm" Quit

# Menus from window title-bar buttons
#####

# Window-Ops is the leftmost window button.
# See Title-Bar Buttons (above) for the code which links it to the
button.
AddToMenu Window-Ops    "&Move"         Move
+                       "&Resize"       Resize
+                       "R&aise"        Raise
+                       "&Lower"        Lower
+                       "(De)&Iconify"  Iconify
+                       "(Un)&Stick"    Stick
+                       "(Un)Ma&ximize" Maximize
+                       ""              Nop
+                       "&Delete"       Delete
+                       "&Close"        Close
+                       "Destroy"       Destroy

#####
# Miscellaneous Module Settings.
#####

# FvwmIdent is an xwininfo replacement.
DestroyModuleConfig FvwmIdent: *
*FvwmIdent: Back MidnightBlue
*FvwmIdent: Fore #f6f6f6
*FvwmIdent: Font "xft:snap"

# FvwmScroll swallows applications into smaller containers.
DestroyModuleConfig FvwmScroll: *
*FvwmScroll: Back #f6f6f6
*FvwmScroll: Fore #f6f6f6

#####
# Name:     Thumbnail
# Purpose:  Iconify a window with a reduced screenshot of the application
#           Window, looks really cool.
#
#           Uses FvwmEvent to remove the Icon when deiconified, you will want
#           to remove this if you use WindowStyle elsewhere.
#
#           Thumbnailing example: [6]http://dev.gentoo.org/~taviso/step2.png
#
#####

DestroyFunc Thumbnail
AddToFunc Thumbnail
+ I Raise
+ I SetEnv Icon-$[w.id] $[w.iconfile]
+ I ThisWindow (!Shaded Iconifiable !Iconic) PipeRead \
    "xwd -silent -id $[w.id] | convert -scale $$(($[w.width]/5)) -frame 1x1 \
    -mattecolor black -quality 0 xwd:- png:$[fvwm_tmp]/icon.tmp.$[w.id].png \
    && echo Nop"
+ I TestRc (Match) Test (f $[fvwm_icon]/$[w.iconfile], f $[fvwm_tmp]/icon.tmp.$[w.id].png) \
    PipeRead "composite -geometry +2+4 \
    $[fvwm_icon]/$[w.iconfile] $[fvwm_tmp]/icon.tmp.$[w.id].png \
    $[fvwm_tmp]/icon.tmp.$[w.id].png && \
    echo WindowStyle IconOverride, Icon $[fvwm_tmp]/icon.tmp.$[w.id].png || echo Nop"
+ I TestRc (NoMatch) WindowStyle IconOverride, Icon $[fvwm_tmp]/icon.tmp.$[w.id].png
+ I Iconify

DestroyFunc DeThumbnail
AddToFunc DeThumbnail
+ I PipeRead "echo WindowStyle Icon \\$\\[Icon-$[w.id]\\]"
+ I UnsetEnv Icon-$[w.id]
+ I Exec rm -f $[fvwm_tmp]/icon.tmp.$[w.id].png

#####
# FvwmEvent
#####
DestroyModuleConfig FvwmEvent: *
*FvwmEvent: deiconify DeThumbnail

DestroyFunc ReThumbnail
AddToFunc   ReThumbnail
+ I Iconify
+ I Thumbnail

#####
# FvwmExpose
#####
DestroyFunc FvwmExpose
AddToFunc FvwmExpose
+ I AddToMenu FvwmExposeMenu "e x p o s e" Title
+ I + DynamicPopDownAction DestroyMenu FvwmExposeMenu
+ I All (!Iconic !Shaded AcceptsFocus)\
    PipeRead "echo Raise; \
        xwd -silent -id $[w.id] | convert -scale $$(($[w.width]/10)) -quality 0 xwd:- \
        png:$[fvwm_home]/tmp/icon.exp.$[w.id].png \
    && echo AddToMenu FvwmExposeMenu \
    %$[fvwm_home]/tmp/icon.exp.$[w.id].png%\\\'\"$[w.name]\"\\\' WindowID $[w.id] WarpToWindow 50 50 \
        && echo AddToMenu FvwmExposeMenu \\\"\\\" Nop \
    || Nop"
+ I Popup FvwmExposeMenu
+ I Exec exec rm -f $[fvwm_home]/tmp/icon.exp.*

#####
# Autohide console example: [4]http://dev.gentoo.org/~taviso/autohide_console.png
##################
DestroyFunc StartHiddenConsole
AddToFunc StartHiddenConsole
+ I Exec exec rxvt +sb -geometry 144x8+2+0 -name HiddenConsole
+ I Wait HiddenConsole
+ I Autohide HiddenConsole 250 0 N

####
# These functions modified from the functions provided in the fvwm FAQ.
# [8]http://www.fvwm.org/documentation/faq/#7.17
####
AddToFunc Autohide
+ I ThisWindow ($0) Deschedule $[w.id]
+ I TestRc (!Match) Deschedule -$[w.id]
+ I ThisWindow ($0) ThisWindow (shaded) AutohideShow $1 $3
+ I TestRc (!Match) All ($0, !shaded) AutohideHide $2 $3

AddToFunc AutohideShow
+ I Schedule $0 -$[w.id] WindowShade $1 off
+ I Schedule $0 -$[w.id] Raise
+ I Schedule $0 -$[w.id] Deschedule $[w.id]
+ I Schedule $0 -$[w.id] Deschedule -$[w.id]

AddToFunc AutohideHide
+ I Schedule $0 $[w.id] WindowShade $1 on
+ I Schedule $0 $[w.id] Deschedule $[w.id]
+ I Schedule $0 $[w.id] Deschedule -$[w.id]

AddToFunc WindowListFunc I WarpToWindow 50 50

DestroyFunc FuncAutoEnter
AddToFunc FuncAutoEnter I Autohide HiddenConsole 250 500 N

Style FvwmTaskBar NoTitle, WindowListSkip, CirculateSkip, Sticky, BorderWidth 0, NoHandles, StaysOnBottom
Style FvwmTaskBar NeverFocus, Layer 0

#####
# WindowOps, Main window controls menu.
#####
DestroyMenu MenuFvwmWindowOps
AddToMenu MenuFvwmWindowOps
+   %paper_geometry.png%"Resize"            Pick Resize
+   "Iconify   "                            Pick Iconify
+   "Thumbnail "                            Pick Thumbnail
+   "Maxmimise"                             Pick Maximize
+   %hardware_mouse.png%"Move"              Popup FvwmMoveMethods
+   %window-blind.png%"Shade"               Pick WindowShade Toggle
+   ""  Nop
+   %capture_mouse-trap.png%"Stick"         Pick Stick
+   %hardware_mouse.png%"Scroll"            Pick Module FvwmScroll
+   %graphics_convert_polaroid.png%"Refresh"    Pick RefreshWindow
+   ""  Nop
+   %label_tag_version.png%"Identify"       Pick Module FvwmIdent
+   %document_database_view.png%"Zoom"      Pick Exec exec xmag -source $[w.width]x$[w.height]+$[w.x]+$[w.y] -mag 2
+   ""  Nop
+   %bomb.png%"Close"%alt_f4.png%           Pick Close
+   %warning_symbol.png%"Destroy"%win_x.png%    Pick Destroy

DestroyMenu MenuFvwmModules
AddToMenu MenuFvwmModules
+   "Animation          "   Module FvwmAnimate
+   "Button-Bar         "   Module FvwmButtons
+   "Identify           "   Module FvwmIdent
+   "IconMan            "   Module FvwmIconMan
+   "Banner             "   Module FvwmBanner
+   "Console            "   Module FvwmConsole -terminal rxvt
+   "Pager              "   Module FvwmPager 0 1
+   "Backer             "   Module FvwmBacker
+   "ScrollBar          "   Module FvwmScroll 50 50
+   "FvwmTaskBar        "   Module FvwmTaskBar
+   "AutoRaise          "   Module FvwmAuto 200 Raise Nop
+   "WinList            "   Module FvwmWinList
+   ""                      Nop
+   "Stop Module        "   Popup  MenuFvwmStopModule

DestroyMenu MenuFvwmStopModule
AddToMenu MenuFvwmStopModule
+   "Stop Button-Bar    "   KillModule FvwmButtons
+   "Stop IconMan       "   KillModule FvwmIconMan
+   "Stop Pager         "   KillModule FvwmPager
+   "Stop Backer        "   KillModule FvwmBacker
+   "Stop ScrollBar     "   KillModule FvwmScroll
+   "Stop FvwmTaskBar   "   KillModule FvwmTaskBar
+   "Stop AutoRaise     "   KillModule FvwmAuto
+   "Stop WinList       "   KillModule FvwmWinList

#####
# Name:     FuncFvwmFocusPolicyChange
# Bound:    MenuFvwmConfig, Focus Policy Changes.
# Purpose:  Start using a new Focus Policy.
#
#####
DestroyFunc FuncFvwmFocusPolicyChange
AddToFunc FuncFvwmFocusPolicyChange
+ I Style * $0
+ I Recapture

#####
# Name:     PackWindowUp
# Bound:    Alt+Shift+Up When a window is active
# Purpose:  Interrogate all windows on the current page, find the window with an edge
#           closest to active window, and slide the Active window upto that edge, or
#           the Page edge, if no window is in the way.
#
#           The Wrappers are required to look after the Context while we're testing
#           windows. Could also do it with a load of variables, but this is nicer.
#
#           See PackWindowLeft for a description of the logic (i know it looks a little
#           cryptic).
#
#           Sometimes terminals seem to need WindowRefresh, but 99% of the time it just
#           works, it creates a little flicker so I'll leave it out until it starts to bug
#           me.
#
#           Windows are also Raised, you can disable this.
#
#####
DestroyFunc PackWindowUp
AddToFunc PackWindowUp
+ I SetEnv low_w 0
+ I WindowId $3 Raise
+ I All (CurrentPage !Iconic AcceptsFocus \
        !Shaded) PipeRead "test `expr $[w.y] + $[w.height]` -gt $[low_w] \
        -a `expr $[w.y] + $[w.height]` -lt $0 \
        -a \\( \\( $[w.x] -gt $1 -a $[w.x] -lt `expr $1 + $2` \\) \
            -o \\( $1 -gt $[w.x] -a $1 -lt `expr $[w.x] + $[w.width]` \\) \
            -o \\( $1 -le $[w.x] -a `expr $1 + $2` -ge `expr $[w.x] + $[w.width]` \\) \
            -o \\( $[w.x] -lt $1 -a `expr $[w.x] + $[w.width]` -gt `expr $1 + $2` \\) \
        \\) \
        && echo SetEnv low_w `expr $[w.y] + $[w.height]` \
        || echo Nop"
+ I WindowId $3 AnimatedMove keep $[low_w]p
#+ I WindowId $3 RefreshWindow

AddToFunc PackWrapperUp I NoWindow PackWindowUp $[w.y] $[w.x] $[w.width] $[w.id]

#####
# Name:     PackWindowDown
# Bound:    Alt+Shift+Down When a window is active.
# Purpose:  See PackWindowUp.
#
#####
DestroyFunc PackWindowDown
AddToFunc PackWindowDown
+ I SetEnv high_w $[vp.height]
+ I WindowId $3 Raise
+ I All (CurrentPage !Iconic AcceptsFocus \
        !Shaded) PipeRead "test $[w.y] -lt $[high_w] \
        -a $[w.y] -gt `expr $0 + $4`  \
        -a \\( \\( $[w.x] -gt $1 -a $[w.x] -lt `expr $1 + $2` \\) \
            -o \\( $1 -gt $[w.x] -a $1 -lt `expr $[w.x] + $[w.width]` \\) \
            -o \\( $1 -le $[w.x] -a `expr $1 + $2` -ge `expr $[w.x] + $[w.width]` \\) \
            -o \\( $[w.x] -lt $1 -a `expr $[w.x] + $[w.width]` -gt `expr $1 + $2` \\) \
        \\) \
        && echo SetEnv high_w $[w.y] \
        || echo Nop"
+ I PipeRead "echo WindowId $3 AnimatedMove keep `expr $[high_w] - $4`p"
#+ I WindowId $3 RefreshWindow

AddToFunc PackWrapperDown I NoWindow PackWindowDown $[w.y] $[w.x] $[w.width] $[w.id] $[w.height]

#####
# Name:     PackWindowLeft
# Bound:    Alt+Shift+Left When a window is active
# Purpose:  See PackWindowUp.
#
# The Logic works likes this:
#   1. Set Destination to the Left Edge
#   2. For every window, Run these tests:
#               + Is the Window's Right edge further _Right_ than furthest edge seen yet?
#       And:    + Is it's Right edge Further _Left_ than Target Windows Left edge? (ie, in the way)
#           Yes:
#                   + Does the window start inside Target Window, and end below?
#               Or  + Does it start above, and end inside?
#               Or  + Is it the same vertical position/height/size, or start inside and end inside?
#               Or  + Does it start above, and end below?
#                   Yes:
#                       This is the new Destination.
#                   No:
#                       Nop
#           No:
#               Nop
#   3. Move to Destination.
#
#####
DestroyFunc PackWindowLeft
AddToFunc PackWindowLeft
+ I SetEnv left_w 0
+ I WindowId $3 Raise
+ I All (CurrentPage !Iconic AcceptsFocus \
        !Shaded) PipeRead "test `expr $[w.x] + $[w.width]` -gt $[left_w] \
        -a `expr $[w.x] + $[w.width]` -lt $1 \
        -a \\( \\( $[w.y] -gt $0 -a $[w.y] -lt `expr $0 + $4` \\) \
            -o \\( $[w.y] -lt $0 -a `expr $[w.y] + $[w.height]` -gt $0 \\) \
            -o \\( $[w.y] -ge $0 -a `expr $[w.y] + $[w.height]` -le `expr $0 + $4` \\) \
            -o \\( $[w.y] -lt $0 -a `expr $[w.y] + $[w.height]` -gt `expr $0 + $4` \\) \
        \\) \
        && echo SetEnv left_w `expr $[w.x] + $[w.width]`  \
        || echo Nop"
+ I WindowId $3 AnimatedMove $[left_w]p keep
#+ I WindowId $3 RefreshWindow

AddToFunc PackWrapperLeft I NoWindow PackWindowLeft $[w.y] $[w.x] $[w.width] $[w.id] $[w.height]

DestroyFunc PackWindowRight
AddToFunc PackWindowRight
+ I SetEnv right_w $[vp.width]
+ I WindowId $3 Raise
+ I All (CurrentPage !Iconic AcceptsFocus \
        !Shaded) PipeRead "test $[w.x] -lt $[right_w] \
        -a $[w.x] -gt `expr $1 + $2` \
        -a \\( \\( $[w.y] -gt $0 -a $[w.y] -lt `expr $0 + $4` \\) \
            -o \\( $[w.y] -lt $0 -a `expr $[w.y] + $[w.height]` -gt $0 \\) \
            -o \\( $[w.y] -ge $0 -a `expr $[w.y] + $[w.height]` -le `expr $0 + $4` \\) \
            -o \\( $[w.y] -lt $0 -a `expr $[w.y] + $[w.height]` -gt `expr $0 + $4` \\) \
        \\) \
        && echo SetEnv right_w $[w.x] \
        || echo Nop"
+ I PipeRead "echo WindowId $3 AnimatedMove `expr $[right_w] - $2`p keep"
#+ I WindowId $3 RefreshWindow

AddToFunc PackWrapperRight I NoWindow PackWindowRight $[w.y] $[w.x] $[w.width] $[w.id] $[w.height]

#####
# Name:     WheelToggleShade
# Bound:    Mouse Buttons 4 and 5 (wheel up and down) on Titlebars
# Purpose:  Shade or unshade the window when the Mouse wheel is rolled up or
#           down on the Titlebar. Rolling the Wheel up calls the Function with
#           argument `True` and rolling it down uses `False`, so rolling the wheel
#           down when the window isnt shaded has no effect, which I like :)
#
#####
DestroyFunc WheelToggleShade
AddToFunc WheelToggleShade D WindowShade $0

#####
# Name:     DestroyOnHold
# Bound:    Titlebar Button 2 (X)
# Purpose:  When clicked, Raise the window Immediately.
#           If the button is pressed and released, Close the Window. If it is pressed
#           and held, Destroy it, and issue a Beep to confirm.
#
#           There is a 100ms delay before issuing `Close` so I have a chance to see the
#           animation when the button changes from ActiveDown to ActiveUp :).
#
#####
DestroyFunc DestroyOnHold
AddToFunc DestroyOnHold I Raise
+ C Schedule 100 Close
+ H Destroy
+ H Beep

DestroyMenu MenuFvwmConfig
AddToMenu MenuFvwmConfig
+   %graphics_palette_view.png%"Colour Browser" Exec exec gcolor
+   %document_view.png%"Edit fvwm2rc"   Exec exec gvim -geom 115x46 ~/.fvwm/.fvwm2rc
+   ""                                  Nop
+   %plug.png%"Fvwm Modules"            Popup MenuFvwmModules
+   ""                                  Nop
+   %widget_buttons.png%"Configure FvwmForm..." Module FvwmForm FvwmForm-Form
+   %cursor.png%"Configure Cursor..."   Module FvwmForm FvwmForm-RootCursor
+   %television.png%"Configure Screensaver..."  Exec exec xscreensaver-demo
+   %hardware_mouse.png%"Configure Mouse..."    Module FvwmScript FvwmScript-PointerSetup
+   %hardware_keyboard.png%"Configure Keyboard..." Module FvwmScript FvwmScript-KeyboardSetup
+   %audio.png%"Configure Bell..."      Module FvwmScript FvwmScript-BellSetup
+   %tool_wrench.png%"General Settings..."  Module FvwmScript FvwmScript-BaseConfig

#####
# `Pick` is very handy, if it's obvious which window you're talking about,
# The command is executed immediately within the context of that window.
#
# If it isnt obvious, for example, you select `Move` from the Root menu, the
# cursor becomes a crosshair, and you can select the window you you would like
# to apply the command to by clicking it.
#
# This saves a lot of work, you can use `Pick` with everything that might be
# Called without context and only write one function/menu instead of two.
#####
DestroyMenu FvwmMoveMethods
AddToMenu FvwmMoveMethods
+   "Move to Top"       Pick AnimatedMove keep 0p
+   "Move to Left"      Pick AnimatedMove 0p keep
+   "Move to Right"     Pick PipeRead \
        "echo AnimatedMove `expr $[vp.width] - $[w.width]`p keep"
+   "Move to Bottom"    Pick PipeRead \
        "echo AnimatedMove keep `expr $[vp.height] - $[w.height]`p"
+   ""                              Nop
+   %window.png%"Center Window" Pick PipeRead \
    "echo AnimatedMove `expr \\( $[vp.width] - $[w.width] \\) / 2`p \
    `expr \\( $[vp.height] - $[w.height] \\) / 2`p"
+   ""                              Nop
+   %hardware_mouse.png%"Pack Up"%alt_sft_up.png%   Pick PackWrapperUp
+   %hardware_mouse.png%"Pack Left"%alt_sft_left.png%   Pick PackWrapperLeft
+   %hardware_mouse.png%"Pack right"%alt_sft_right.png% Pick PackWrapperRight
+   %hardware_mouse.png%"Pack down"%alt_sft_down.png%   Pick PackWrapperDown
+   ""                              Nop
+   %numbers_counter.png%"Move To Page" Popup MenuPageList
+   ""                              Nop
+   %hardware_mouse.png%"Interactive Move"  Pick Move

DestroyMenu MenuPageList
AddToMenu MenuPageList
+ "1"   Pick MoveToPage 0 0
+ "2"   Pick MoveToPage 1 0
+ "3"   Pick MoveToPage 2 0
+ "4"   Pick MoveToPage 0 1
+ "5"   Pick MoveToPage 1 1
+ "6"   Pick MoveToPage 2 1
+ "7"   Pick MoveToPage 0 2
+ "8"   Pick MoveToPage 1 2
+ "9"   Pick MoveToPage 2 2

DestroyModuleConfig FvwmTaskBar: *
*FvwmTaskBar: Geometry +0-0
*FvwmTaskBar: Rows 1
*FvwmTaskBar: AutoStick
*FvwmTaskBar: UseSkipList
*FvwmTaskBar: PageOnly
*FvwmTaskBar: ShowTips
*FvwmTaskBar: NoDefaultStartButton
*FvwmTaskBar: NoBrightFocus
*FvwmTaskBar: 3DFvwm
*FvwmTaskBar: MailCheck 0
*FvwmTaskBar: IconColorset 11
*FvwmTaskBar: FocusColorset 11
*FvwmTaskBar: ClockFormat
*FvwmTaskBar: WindowButtonsRightMargin 124
