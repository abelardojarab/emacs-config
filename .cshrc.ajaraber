    # EC Standard Login Environment -*- sh -*-
    # user customized .cshrc
    # $Source: /usr/cvs/cvsrep/ec_environ-1.0/release/user/cshrc.user,v $
    # $Revision: 1.34 $

    # use this logfile for debugging
    echo "I: (.cshrc.$USER) [entering] `/bin/date`" >> $ec_env_error_log

    #
    # this file executed for every new shell/window
    #
    # ALL USER CHANGES GO IN THIS FILE:
    #  append path components e.g. $HOME/bin
    #  define custom aliases
    #  set preferred printer
    #  etc...
    #

    ######################################################
    # The following special features are not stored in the
    # environment, but are activated by a text search in
    # this file.
    #
    # 1) If your shell defined by the system is /bin/csh but
    #    you want to force /usr/intel/bin/tcsh or /bin/tcsh
    #    (when available), set the following value to 1.
    #    Do not uncomment it; just edit the number:
    #
    #    leave this line commented # ECLOGIN_FORCE_TCSH=0
    #
    # 2) Automatic upgrades to .cshrc, .login, .profile may
    #    happen at any time - one reason you should never edit
    #    these files.  These updates are normally silent.
    #    If you want to be notified when a new file is installed
    #    automatically for you, set the following value to 1.
    #
    #    leave this line commented # ECLOGIN_UPGRADE_NOTICES=0
    #
    ######################################################
    #
    # warning: do not place commands here if standard
    #          output is produced; use the section for
    #          LOGIN SHELLS guarded by a test for $prompt
    #
    ######################################################

    #
    # System defaults have been set; commented
    # examples show how you may wish to modify.
    #

    ###
    ###-------->SHELL<--------
    ###

    ###-------->umask<--------
    # The umask tells what permissions to
    # REMOVE from newly created files.
    # Information security requires the
    # default to prevent world read/write.
    # If you know none of your data is
    # more/less confidential, you may
    # want to change.
    #
    # umask 077 # prevent all group/world access
    # umask 027 # default
    # umask 022 # permit world read/search

    ###
    ###-------->ENVIRONMENT<--------
    ###

    ###-------->search path<--------

    # append your personal bin - you may want to prepend
    #  or place relative to other componts with -a/-b
    #
    # modpath -q -f $HOME/bin

    # force "." to be last always
    # (in case site/project has inserted before user's paths)
    #
    #modpath -q -f -d .
    #modpath -q -f .

    # OPTIONAL: eclogin by default will append "." later in
    # the global execution flow.  Uncomment the next line to
    # to prevent default addition of "."  Beware that automation
    # scripts may depend on this, use with caution.
    #
    #set EC_NO_ADD_DOTPATH=1

    ###-------->printer<--------
    # default printer; consult your site support
    # for available printer names/locations
    #
    # setenv PRINTER my_printer_name
    #setenv PRINTER "(not migrated)"

    # LPDEST is normally same as printer
    if ($?PRINTER) then
    tenv LPDEST  "$PRINTER"
    endif

    ###-------->editor<--------
    # default editor is probably /bin/vi (different on each OS)
    #
    # setenv EDITOR /usr/intel/bin/vim
    # setenv EDITOR /usr/intel/bin/emacs
    #setenv EDITOR "(not migrated)"

    ###-------->X display<--------
    # Display forwarding is automatic when you
    # use ssh to access remote hosts.  If you
    # never use multiple displays or always
    # want to force a specific display, it may
    # be set here.
    #
    # setenv DISPLAY mydesktop:0

    ###-------->symlink following behavior using $symlinks<--------
    #
    # This description is from the tcsh(1) manual:
    #
    #          symlinks (+)
    #              Can be set to several different values to  control
    #              symbolic link (`symlink') resolution:
    #
    #              If  set to `chase', whenever the current directory
    #              changes to a directory containing a symbolic link,
    #              it  is  expanded to the real name of the directory
    #              to which the link points. This does not  work  for
    #              the user's home directory; this is a bug.
    #
    #              If set to `ignore', the shell tries to construct a
    #              current directory relative to the  current  direc-
    #              tory before the link was crossed.  This means that
    #              cd'ing through a symbolic link and then `cd ..'ing
    #              returns  one  to the original directory. This only
    #              affects builtin commands and filename  completion.
    #
    #              If  set  to  `expand', the shell tries to fix sym-
    #              bolic links by actually expanding arguments  which
    #              look  like  path  names. This affects any command,
    #              not just builtins. Unfortunately,  this  does  not
    #              work  for  hard-to-recognize  filenames,  such  as
    #              those embedded in command options.  Expansion  may
    #              be  prevented  by  quoting.  While this setting is
    #              usually the most convenient, it is sometimes  mis-
    #              leading  and  sometimes confusing when it fails to
    #              recognize an argument which should be expanded.  A
    #              compromise  is  to use `ignore' and use the editor
    #              command normalize-path (bound by default to  ^X-n)
    #              when necessary.

    # ECLogin has default 'old' style behavior for historical reasons.
    # If you like the modern behavior to show the path according to
    # how you arrived there - and the ability to cd in reverse back
    # to the origin through the link, then change this to 'ignore'.
    #
    set symlinks = chase

    #
    # Netbatch (optional)
    #
    # The following may have been automatically migrated
    # at the time you installed eclogin
    #
    #setenv NBPOOL "(not migrated)"
    #setenv NBQSLOT "(not migrated)"
    #setenv NBCLASS "(not migrated)"

    ###
    ###-------->LOGIN SHELLS<--------
    ###
    if ($?prompt) then
    ###
    ### This section runs for interactive shells only.
    ###

    ### example: you may wish to force the terminal
    # settings e.g. backspace.
    #
    # stty erase '^H' # normal
    # stty erase '^?' # Sun keyboard
    # !!! NOTE: before changing stty erase, also make sure you have the
    # !!!       eclogin version of .Xdefaults which works together with
    # !!!       the stty setting.

    ### default settings you may wish to change:
    #
    #set history=200    # command history remembered by the shell
    #set savehist=200   # command history saved after shell exits
    #set time=1         # show run-time stats of long-running processes
    #unset filec        # tcsh filename completion  (default on)
    #unset notify       # [t]csh bg job state change notices (default on)
    #
    #set autologout=480 # automatically clean up unused terminals (default off)
                    # WARNING: this will kill idle shell/windows after
                    # 480 minutes (8 hours), few users will want this.

    ### advanced tcsh options; see tcsh(1) and uncomment the ones you like
    if ($?tcsh) then

    # key bindings may be placed in a separate file
    if (-e $HOME/.bindings) source $HOME/.bindings

    #   alias ls ls-F           # faster builtin ls
    #   set watch=(1 any any)   # watch users logging in / out
    #   set prompt="(%?)%B%S%M%s[%d.%T]%b%h%# " # informational prompt
    #   if ($?edit) set rprompt="%S#%s%c02"     # add cwd when it fits

    #   # these next lines dynamically update the xterm title see xtset -h
    #   setenv XTXTRA "since "`date "+%m/%d@%H:%M"`
    #   alias res_t 'xtset -t %h:%d %e' # reset titlebar
    #   res_t                   # reset title right now
    #   # this is most efficient but loses when you exit a remote session
    #   alias cwdcmd res_t
    #   # this is less efficient because it runs too often, but it never fails
    #   #alias precmd res_t

    #set   autocorrect  # tcsh command line spelling check/autocorrect
    #set   correct=cmd

    endif

    ### validation is enabled by default to help you detect errors.
    ### if you really want to suppress warnings/errors choose
    ### one of these:
    #
    # (default - do nothing)               # show all msgs
    # setenv EC_DISABLE_VAL project        # turn off project msgs
    # setenv EC_DISABLE_VAL system         # turn off sysgem msgs
    # setenv EC_DISABLE_VAL project,system # turn off all msgs
    #
    # if you disable these it is your responsibility to monitor
    # the log, normally in /tmp/eclogin-errors.<username>

    endif

    ###
    ###-------->ALIASES<--------
    ###
    # some sample aliases you may want to uncomment or supplement:
    #
    #alias cls     clear
    #alias ll      ls -l
    #alias lf      ls -F
    #alias lr      ls -R
    #alias h       history
    #
    # aliases may be kept in separate file if you wish
    #
    if ( -r $HOME/.aliases ) then
    source $HOME/.aliases
    endif
    alias emacs '~/workspace/builds/emacs-24.3/src/emacs'
    alias ls       'ls -l --color -sF'


    alias cd 'cd \!*; set prompt = "%{\033[34m%}[%n@%{\033[35m%}%m%{\033[33m%} %b%{\033[0m%}%c]$ "'

    echo "I: (.cshrc.$USER) [leaving] `/bin/date`" >> $ec_env_error_log
    ######################################################
    #
    # Caution: do not place commands here if standard
    #          output is produced; use the section above
    #          where LOGIN SHELLS are guarded by a test
    #          for $prompt.
    #
    #          Also do not set the $prompt variable or
    #          invoke aliases modifying $prompt except
    #          within the section for LOGIN SHELLS above.
    #
    ######################################################
    setenv PATH ${HOME}/workspace/builds/emacs-24.3/src:/p/advda/utils/bin:${HOME}/bin:${HOME}/workspace/frametools/bin:${HOME}/workspace/builds/nodejs/bin:${PATH}
    setenv NODE_PATH  ${HOME}/workspace/builds/nodejs/lib/node_modules
    setenv LD_LIBRARY_PATH ${HOME}/lib:${HOME}/bin/share
    setenv CAMDEXGT_CAD_ROOT ${HOME}/camdex/data
    setenv PYTHONPATH ${HOME}/pythonlibs/lib/python2.7/site-packages
    setenv JAVA_HOME /usr/intel/pkgs/java/1.7.0.45-64
    setenv PATH ${JAVA_HOME}/bin:${PATH}
    setenv _JAVA_OPTIONS '-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true'
    setenv http_proxy http://proxy-chain.intel.com:911
    setenv CDS_LIC_FILE 5280@plxs0419.pdx.intel.com:5280@ilic2003.iil.intel.com:5280@fmylic37c.fm.intel.com:5280@scylic14.sc.intel.com
    setenv LM_LICENSE_FILE 5280@plxs0419.pdx.intel.com:5280@ilic2003.iil.intel.com:5280@fmylic37c.fm.intel.com:5280@scylic14.sc.intel.com
    setenv CDS_INST_DIR /p/adx/x74a/cad_root/cadence/6.15.513
    setenv GDK_NATIVE_WINDOWS=1

